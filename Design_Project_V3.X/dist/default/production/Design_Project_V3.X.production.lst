

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat Apr 20 14:02:55 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F18855
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	idataBANK2,global,class=CODE,delta=2
     7                           	psect	idataBIGRAM,global,class=CODE,delta=2
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	dataBIGRAM,global,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    41                           	dabs	1,0x620,48
    42                           	dabs	1,0x5B7,57
    43                           	dabs	1,0x5A0,23
    44                           	dabs	1,0x520,80
    45                           	dabs	1,0x4EE,2
    46                           	dabs	1,0x231E,0,_Set
    47                           	dabs	1,0x2387,0,_New
    48                           	dabs	1,0x7E,2
    49  0000                     
    50                           ; Version 2.05
    51                           ; Generated 20/12/2018 GMT
    52                           ; 
    53                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    54                           ; All rights reserved.
    55                           ; 
    56                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    57                           ; 
    58                           ; Redistribution and use in source and binary forms, with or without modification, are
    59                           ; permitted provided that the following conditions are met:
    60                           ; 
    61                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    62                           ;        conditions and the following disclaimer.
    63                           ; 
    64                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    65                           ;        of conditions and the following disclaimer in the documentation and/or other
    66                           ;        materials provided with the distribution.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC16F18855 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84  0000                     	;# 
    85  0001                     	;# 
    86  0002                     	;# 
    87  0003                     	;# 
    88  0004                     	;# 
    89  0005                     	;# 
    90  0006                     	;# 
    91  0007                     	;# 
    92  0008                     	;# 
    93  0009                     	;# 
    94  000A                     	;# 
    95  000B                     	;# 
    96  000C                     	;# 
    97  000D                     	;# 
    98  000E                     	;# 
    99  0010                     	;# 
   100  0011                     	;# 
   101  0012                     	;# 
   102  0013                     	;# 
   103  0016                     	;# 
   104  0017                     	;# 
   105  0018                     	;# 
   106  001C                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001D                     	;# 
   110  001E                     	;# 
   111  001F                     	;# 
   112  008C                     	;# 
   113  008C                     	;# 
   114  008D                     	;# 
   115  008E                     	;# 
   116  008E                     	;# 
   117  008F                     	;# 
   118  0090                     	;# 
   119  0090                     	;# 
   120  0091                     	;# 
   121  0093                     	;# 
   122  0094                     	;# 
   123  0095                     	;# 
   124  0096                     	;# 
   125  0097                     	;# 
   126  0098                     	;# 
   127  0099                     	;# 
   128  009A                     	;# 
   129  009B                     	;# 
   130  009C                     	;# 
   131  009D                     	;# 
   132  009E                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0110                     	;# 
   139  0110                     	;# 
   140  0111                     	;# 
   141  0112                     	;# 
   142  0112                     	;# 
   143  0113                     	;# 
   144  0114                     	;# 
   145  0114                     	;# 
   146  0115                     	;# 
   147  0116                     	;# 
   148  0116                     	;# 
   149  0117                     	;# 
   150  0119                     	;# 
   151  0119                     	;# 
   152  0119                     	;# 
   153  011A                     	;# 
   154  011A                     	;# 
   155  011A                     	;# 
   156  011B                     	;# 
   157  011B                     	;# 
   158  011B                     	;# 
   159  011B                     	;# 
   160  011B                     	;# 
   161  011C                     	;# 
   162  011C                     	;# 
   163  011C                     	;# 
   164  011D                     	;# 
   165  011D                     	;# 
   166  011D                     	;# 
   167  011E                     	;# 
   168  011E                     	;# 
   169  011E                     	;# 
   170  011F                     	;# 
   171  011F                     	;# 
   172  011F                     	;# 
   173  011F                     	;# 
   174  011F                     	;# 
   175  018C                     	;# 
   176  018D                     	;# 
   177  018E                     	;# 
   178  018F                     	;# 
   179  0190                     	;# 
   180  0191                     	;# 
   181  0192                     	;# 
   182  0196                     	;# 
   183  0197                     	;# 
   184  0198                     	;# 
   185  0199                     	;# 
   186  019A                     	;# 
   187  019B                     	;# 
   188  019C                     	;# 
   189  020C                     	;# 
   190  020C                     	;# 
   191  020D                     	;# 
   192  020E                     	;# 
   193  020F                     	;# 
   194  020F                     	;# 
   195  0210                     	;# 
   196  0210                     	;# 
   197  0211                     	;# 
   198  0211                     	;# 
   199  0212                     	;# 
   200  0212                     	;# 
   201  0213                     	;# 
   202  0214                     	;# 
   203  0215                     	;# 
   204  0215                     	;# 
   205  0216                     	;# 
   206  0216                     	;# 
   207  0217                     	;# 
   208  0217                     	;# 
   209  0218                     	;# 
   210  0218                     	;# 
   211  0219                     	;# 
   212  021A                     	;# 
   213  021B                     	;# 
   214  021B                     	;# 
   215  021C                     	;# 
   216  021C                     	;# 
   217  021D                     	;# 
   218  021D                     	;# 
   219  021E                     	;# 
   220  021F                     	;# 
   221  028C                     	;# 
   222  028C                     	;# 
   223  028D                     	;# 
   224  028D                     	;# 
   225  028E                     	;# 
   226  028F                     	;# 
   227  0290                     	;# 
   228  0290                     	;# 
   229  0291                     	;# 
   230  0292                     	;# 
   231  0292                     	;# 
   232  0293                     	;# 
   233  0293                     	;# 
   234  0294                     	;# 
   235  0295                     	;# 
   236  0296                     	;# 
   237  0296                     	;# 
   238  0297                     	;# 
   239  0298                     	;# 
   240  0298                     	;# 
   241  0299                     	;# 
   242  0299                     	;# 
   243  029A                     	;# 
   244  029B                     	;# 
   245  029C                     	;# 
   246  029C                     	;# 
   247  029D                     	;# 
   248  030C                     	;# 
   249  030C                     	;# 
   250  030D                     	;# 
   251  030E                     	;# 
   252  030F                     	;# 
   253  0310                     	;# 
   254  0310                     	;# 
   255  0311                     	;# 
   256  0312                     	;# 
   257  0313                     	;# 
   258  0314                     	;# 
   259  0314                     	;# 
   260  0315                     	;# 
   261  0316                     	;# 
   262  0317                     	;# 
   263  0318                     	;# 
   264  0318                     	;# 
   265  0319                     	;# 
   266  031A                     	;# 
   267  031B                     	;# 
   268  031C                     	;# 
   269  031C                     	;# 
   270  031D                     	;# 
   271  031E                     	;# 
   272  031F                     	;# 
   273  038C                     	;# 
   274  038C                     	;# 
   275  038D                     	;# 
   276  038E                     	;# 
   277  0390                     	;# 
   278  0390                     	;# 
   279  0391                     	;# 
   280  0392                     	;# 
   281  040C                     	;# 
   282  040D                     	;# 
   283  040E                     	;# 
   284  040F                     	;# 
   285  0410                     	;# 
   286  0411                     	;# 
   287  0416                     	;# 
   288  0416                     	;# 
   289  0417                     	;# 
   290  0418                     	;# 
   291  0418                     	;# 
   292  0419                     	;# 
   293  041A                     	;# 
   294  041A                     	;# 
   295  041B                     	;# 
   296  041C                     	;# 
   297  041C                     	;# 
   298  041D                     	;# 
   299  041E                     	;# 
   300  041F                     	;# 
   301  048C                     	;# 
   302  048C                     	;# 
   303  048D                     	;# 
   304  048E                     	;# 
   305  048F                     	;# 
   306  048F                     	;# 
   307  0490                     	;# 
   308  0491                     	;# 
   309  0492                     	;# 
   310  0492                     	;# 
   311  0493                     	;# 
   312  0494                     	;# 
   313  0495                     	;# 
   314  0495                     	;# 
   315  0496                     	;# 
   316  0497                     	;# 
   317  0498                     	;# 
   318  0499                     	;# 
   319  049A                     	;# 
   320  049B                     	;# 
   321  049C                     	;# 
   322  049D                     	;# 
   323  050C                     	;# 
   324  050C                     	;# 
   325  050D                     	;# 
   326  050E                     	;# 
   327  050F                     	;# 
   328  050F                     	;# 
   329  0510                     	;# 
   330  0511                     	;# 
   331  0512                     	;# 
   332  0512                     	;# 
   333  0513                     	;# 
   334  0514                     	;# 
   335  0515                     	;# 
   336  0515                     	;# 
   337  0516                     	;# 
   338  0517                     	;# 
   339  0518                     	;# 
   340  0519                     	;# 
   341  051A                     	;# 
   342  051B                     	;# 
   343  051C                     	;# 
   344  051D                     	;# 
   345  058C                     	;# 
   346  058C                     	;# 
   347  058D                     	;# 
   348  058E                     	;# 
   349  058F                     	;# 
   350  058F                     	;# 
   351  0590                     	;# 
   352  0591                     	;# 
   353  0592                     	;# 
   354  0593                     	;# 
   355  060C                     	;# 
   356  060D                     	;# 
   357  060E                     	;# 
   358  060F                     	;# 
   359  0610                     	;# 
   360  0611                     	;# 
   361  0612                     	;# 
   362  0613                     	;# 
   363  0614                     	;# 
   364  0616                     	;# 
   365  0617                     	;# 
   366  0618                     	;# 
   367  0619                     	;# 
   368  061A                     	;# 
   369  061B                     	;# 
   370  061C                     	;# 
   371  061D                     	;# 
   372  061E                     	;# 
   373  068C                     	;# 
   374  068D                     	;# 
   375  068E                     	;# 
   376  068F                     	;# 
   377  0690                     	;# 
   378  0691                     	;# 
   379  0692                     	;# 
   380  0693                     	;# 
   381  0694                     	;# 
   382  070C                     	;# 
   383  070D                     	;# 
   384  070E                     	;# 
   385  070F                     	;# 
   386  0710                     	;# 
   387  0711                     	;# 
   388  0712                     	;# 
   389  0713                     	;# 
   390  0714                     	;# 
   391  0716                     	;# 
   392  0717                     	;# 
   393  0718                     	;# 
   394  0719                     	;# 
   395  071A                     	;# 
   396  071B                     	;# 
   397  071C                     	;# 
   398  071D                     	;# 
   399  071E                     	;# 
   400  0796                     	;# 
   401  0797                     	;# 
   402  0798                     	;# 
   403  0799                     	;# 
   404  079A                     	;# 
   405  079B                     	;# 
   406  080C                     	;# 
   407  080D                     	;# 
   408  080E                     	;# 
   409  080F                     	;# 
   410  0810                     	;# 
   411  0811                     	;# 
   412  0812                     	;# 
   413  0813                     	;# 
   414  0814                     	;# 
   415  081A                     	;# 
   416  081B                     	;# 
   417  081C                     	;# 
   418  081D                     	;# 
   419  081E                     	;# 
   420  081F                     	;# 
   421  088C                     	;# 
   422  088D                     	;# 
   423  088E                     	;# 
   424  088F                     	;# 
   425  0890                     	;# 
   426  0891                     	;# 
   427  0892                     	;# 
   428  0893                     	;# 
   429  0895                     	;# 
   430  0896                     	;# 
   431  0897                     	;# 
   432  0898                     	;# 
   433  0899                     	;# 
   434  089A                     	;# 
   435  089B                     	;# 
   436  090C                     	;# 
   437  090E                     	;# 
   438  090F                     	;# 
   439  091F                     	;# 
   440  091F                     	;# 
   441  098F                     	;# 
   442  098F                     	;# 
   443  0990                     	;# 
   444  0991                     	;# 
   445  0992                     	;# 
   446  0993                     	;# 
   447  0994                     	;# 
   448  0995                     	;# 
   449  0996                     	;# 
   450  0997                     	;# 
   451  0E0F                     	;# 
   452  0E10                     	;# 
   453  0E11                     	;# 
   454  0E12                     	;# 
   455  0E13                     	;# 
   456  0E14                     	;# 
   457  0E15                     	;# 
   458  0E16                     	;# 
   459  0E17                     	;# 
   460  0E18                     	;# 
   461  0E19                     	;# 
   462  0E1A                     	;# 
   463  0E1B                     	;# 
   464  0E1C                     	;# 
   465  0E1D                     	;# 
   466  0E1E                     	;# 
   467  0E1F                     	;# 
   468  0E20                     	;# 
   469  0E21                     	;# 
   470  0E22                     	;# 
   471  0E23                     	;# 
   472  0E24                     	;# 
   473  0E25                     	;# 
   474  0E26                     	;# 
   475  0E27                     	;# 
   476  0E28                     	;# 
   477  0E29                     	;# 
   478  0E2A                     	;# 
   479  0E2B                     	;# 
   480  0E2C                     	;# 
   481  0E2D                     	;# 
   482  0E2E                     	;# 
   483  0E2F                     	;# 
   484  0E30                     	;# 
   485  0E31                     	;# 
   486  0E32                     	;# 
   487  0E33                     	;# 
   488  0E34                     	;# 
   489  0E35                     	;# 
   490  0E36                     	;# 
   491  0E37                     	;# 
   492  0E8F                     	;# 
   493  0E90                     	;# 
   494  0E91                     	;# 
   495  0E92                     	;# 
   496  0E93                     	;# 
   497  0E94                     	;# 
   498  0E95                     	;# 
   499  0E96                     	;# 
   500  0E97                     	;# 
   501  0E9C                     	;# 
   502  0E9D                     	;# 
   503  0E9E                     	;# 
   504  0EA1                     	;# 
   505  0EA2                     	;# 
   506  0EA3                     	;# 
   507  0EA4                     	;# 
   508  0EA5                     	;# 
   509  0EA9                     	;# 
   510  0EAA                     	;# 
   511  0EAB                     	;# 
   512  0EAC                     	;# 
   513  0EB1                     	;# 
   514  0EB2                     	;# 
   515  0EB3                     	;# 
   516  0EB8                     	;# 
   517  0EB9                     	;# 
   518  0EBA                     	;# 
   519  0EBB                     	;# 
   520  0EBC                     	;# 
   521  0EBD                     	;# 
   522  0EBE                     	;# 
   523  0EC3                     	;# 
   524  0EC5                     	;# 
   525  0EC6                     	;# 
   526  0EC7                     	;# 
   527  0EC8                     	;# 
   528  0EC9                     	;# 
   529  0ECA                     	;# 
   530  0ECB                     	;# 
   531  0ECC                     	;# 
   532  0F10                     	;# 
   533  0F11                     	;# 
   534  0F12                     	;# 
   535  0F13                     	;# 
   536  0F14                     	;# 
   537  0F15                     	;# 
   538  0F16                     	;# 
   539  0F17                     	;# 
   540  0F18                     	;# 
   541  0F19                     	;# 
   542  0F1A                     	;# 
   543  0F1B                     	;# 
   544  0F1C                     	;# 
   545  0F1D                     	;# 
   546  0F1E                     	;# 
   547  0F1F                     	;# 
   548  0F20                     	;# 
   549  0F21                     	;# 
   550  0F22                     	;# 
   551  0F23                     	;# 
   552  0F24                     	;# 
   553  0F25                     	;# 
   554  0F26                     	;# 
   555  0F27                     	;# 
   556  0F38                     	;# 
   557  0F39                     	;# 
   558  0F3A                     	;# 
   559  0F3B                     	;# 
   560  0F3C                     	;# 
   561  0F3D                     	;# 
   562  0F3E                     	;# 
   563  0F3F                     	;# 
   564  0F40                     	;# 
   565  0F41                     	;# 
   566  0F43                     	;# 
   567  0F44                     	;# 
   568  0F45                     	;# 
   569  0F46                     	;# 
   570  0F47                     	;# 
   571  0F48                     	;# 
   572  0F49                     	;# 
   573  0F4A                     	;# 
   574  0F4B                     	;# 
   575  0F4C                     	;# 
   576  0F4E                     	;# 
   577  0F4F                     	;# 
   578  0F50                     	;# 
   579  0F51                     	;# 
   580  0F52                     	;# 
   581  0F53                     	;# 
   582  0F54                     	;# 
   583  0F55                     	;# 
   584  0F56                     	;# 
   585  0F57                     	;# 
   586  0F65                     	;# 
   587  0F68                     	;# 
   588  0F69                     	;# 
   589  0F6A                     	;# 
   590  0F6B                     	;# 
   591  0FE4                     	;# 
   592  0FE5                     	;# 
   593  0FE6                     	;# 
   594  0FE7                     	;# 
   595  0FE8                     	;# 
   596  0FE9                     	;# 
   597  0FEA                     	;# 
   598  0FEB                     	;# 
   599  0FED                     	;# 
   600  0FEE                     	;# 
   601  0FEF                     	;# 
   602  0000                     	;# 
   603  0001                     	;# 
   604  0002                     	;# 
   605  0003                     	;# 
   606  0004                     	;# 
   607  0005                     	;# 
   608  0006                     	;# 
   609  0007                     	;# 
   610  0008                     	;# 
   611  0009                     	;# 
   612  000A                     	;# 
   613  000B                     	;# 
   614  000C                     	;# 
   615  000D                     	;# 
   616  000E                     	;# 
   617  0010                     	;# 
   618  0011                     	;# 
   619  0012                     	;# 
   620  0013                     	;# 
   621  0016                     	;# 
   622  0017                     	;# 
   623  0018                     	;# 
   624  001C                     	;# 
   625  001C                     	;# 
   626  001D                     	;# 
   627  001D                     	;# 
   628  001E                     	;# 
   629  001F                     	;# 
   630  008C                     	;# 
   631  008C                     	;# 
   632  008D                     	;# 
   633  008E                     	;# 
   634  008E                     	;# 
   635  008F                     	;# 
   636  0090                     	;# 
   637  0090                     	;# 
   638  0091                     	;# 
   639  0093                     	;# 
   640  0094                     	;# 
   641  0095                     	;# 
   642  0096                     	;# 
   643  0097                     	;# 
   644  0098                     	;# 
   645  0099                     	;# 
   646  009A                     	;# 
   647  009B                     	;# 
   648  009C                     	;# 
   649  009D                     	;# 
   650  009E                     	;# 
   651  010C                     	;# 
   652  010D                     	;# 
   653  010E                     	;# 
   654  010E                     	;# 
   655  010F                     	;# 
   656  0110                     	;# 
   657  0110                     	;# 
   658  0111                     	;# 
   659  0112                     	;# 
   660  0112                     	;# 
   661  0113                     	;# 
   662  0114                     	;# 
   663  0114                     	;# 
   664  0115                     	;# 
   665  0116                     	;# 
   666  0116                     	;# 
   667  0117                     	;# 
   668  0119                     	;# 
   669  0119                     	;# 
   670  0119                     	;# 
   671  011A                     	;# 
   672  011A                     	;# 
   673  011A                     	;# 
   674  011B                     	;# 
   675  011B                     	;# 
   676  011B                     	;# 
   677  011B                     	;# 
   678  011B                     	;# 
   679  011C                     	;# 
   680  011C                     	;# 
   681  011C                     	;# 
   682  011D                     	;# 
   683  011D                     	;# 
   684  011D                     	;# 
   685  011E                     	;# 
   686  011E                     	;# 
   687  011E                     	;# 
   688  011F                     	;# 
   689  011F                     	;# 
   690  011F                     	;# 
   691  011F                     	;# 
   692  011F                     	;# 
   693  018C                     	;# 
   694  018D                     	;# 
   695  018E                     	;# 
   696  018F                     	;# 
   697  0190                     	;# 
   698  0191                     	;# 
   699  0192                     	;# 
   700  0196                     	;# 
   701  0197                     	;# 
   702  0198                     	;# 
   703  0199                     	;# 
   704  019A                     	;# 
   705  019B                     	;# 
   706  019C                     	;# 
   707  020C                     	;# 
   708  020C                     	;# 
   709  020D                     	;# 
   710  020E                     	;# 
   711  020F                     	;# 
   712  020F                     	;# 
   713  0210                     	;# 
   714  0210                     	;# 
   715  0211                     	;# 
   716  0211                     	;# 
   717  0212                     	;# 
   718  0212                     	;# 
   719  0213                     	;# 
   720  0214                     	;# 
   721  0215                     	;# 
   722  0215                     	;# 
   723  0216                     	;# 
   724  0216                     	;# 
   725  0217                     	;# 
   726  0217                     	;# 
   727  0218                     	;# 
   728  0218                     	;# 
   729  0219                     	;# 
   730  021A                     	;# 
   731  021B                     	;# 
   732  021B                     	;# 
   733  021C                     	;# 
   734  021C                     	;# 
   735  021D                     	;# 
   736  021D                     	;# 
   737  021E                     	;# 
   738  021F                     	;# 
   739  028C                     	;# 
   740  028C                     	;# 
   741  028D                     	;# 
   742  028D                     	;# 
   743  028E                     	;# 
   744  028F                     	;# 
   745  0290                     	;# 
   746  0290                     	;# 
   747  0291                     	;# 
   748  0292                     	;# 
   749  0292                     	;# 
   750  0293                     	;# 
   751  0293                     	;# 
   752  0294                     	;# 
   753  0295                     	;# 
   754  0296                     	;# 
   755  0296                     	;# 
   756  0297                     	;# 
   757  0298                     	;# 
   758  0298                     	;# 
   759  0299                     	;# 
   760  0299                     	;# 
   761  029A                     	;# 
   762  029B                     	;# 
   763  029C                     	;# 
   764  029C                     	;# 
   765  029D                     	;# 
   766  030C                     	;# 
   767  030C                     	;# 
   768  030D                     	;# 
   769  030E                     	;# 
   770  030F                     	;# 
   771  0310                     	;# 
   772  0310                     	;# 
   773  0311                     	;# 
   774  0312                     	;# 
   775  0313                     	;# 
   776  0314                     	;# 
   777  0314                     	;# 
   778  0315                     	;# 
   779  0316                     	;# 
   780  0317                     	;# 
   781  0318                     	;# 
   782  0318                     	;# 
   783  0319                     	;# 
   784  031A                     	;# 
   785  031B                     	;# 
   786  031C                     	;# 
   787  031C                     	;# 
   788  031D                     	;# 
   789  031E                     	;# 
   790  031F                     	;# 
   791  038C                     	;# 
   792  038C                     	;# 
   793  038D                     	;# 
   794  038E                     	;# 
   795  0390                     	;# 
   796  0390                     	;# 
   797  0391                     	;# 
   798  0392                     	;# 
   799  040C                     	;# 
   800  040D                     	;# 
   801  040E                     	;# 
   802  040F                     	;# 
   803  0410                     	;# 
   804  0411                     	;# 
   805  0416                     	;# 
   806  0416                     	;# 
   807  0417                     	;# 
   808  0418                     	;# 
   809  0418                     	;# 
   810  0419                     	;# 
   811  041A                     	;# 
   812  041A                     	;# 
   813  041B                     	;# 
   814  041C                     	;# 
   815  041C                     	;# 
   816  041D                     	;# 
   817  041E                     	;# 
   818  041F                     	;# 
   819  048C                     	;# 
   820  048C                     	;# 
   821  048D                     	;# 
   822  048E                     	;# 
   823  048F                     	;# 
   824  048F                     	;# 
   825  0490                     	;# 
   826  0491                     	;# 
   827  0492                     	;# 
   828  0492                     	;# 
   829  0493                     	;# 
   830  0494                     	;# 
   831  0495                     	;# 
   832  0495                     	;# 
   833  0496                     	;# 
   834  0497                     	;# 
   835  0498                     	;# 
   836  0499                     	;# 
   837  049A                     	;# 
   838  049B                     	;# 
   839  049C                     	;# 
   840  049D                     	;# 
   841  050C                     	;# 
   842  050C                     	;# 
   843  050D                     	;# 
   844  050E                     	;# 
   845  050F                     	;# 
   846  050F                     	;# 
   847  0510                     	;# 
   848  0511                     	;# 
   849  0512                     	;# 
   850  0512                     	;# 
   851  0513                     	;# 
   852  0514                     	;# 
   853  0515                     	;# 
   854  0515                     	;# 
   855  0516                     	;# 
   856  0517                     	;# 
   857  0518                     	;# 
   858  0519                     	;# 
   859  051A                     	;# 
   860  051B                     	;# 
   861  051C                     	;# 
   862  051D                     	;# 
   863  058C                     	;# 
   864  058C                     	;# 
   865  058D                     	;# 
   866  058E                     	;# 
   867  058F                     	;# 
   868  058F                     	;# 
   869  0590                     	;# 
   870  0591                     	;# 
   871  0592                     	;# 
   872  0593                     	;# 
   873  060C                     	;# 
   874  060D                     	;# 
   875  060E                     	;# 
   876  060F                     	;# 
   877  0610                     	;# 
   878  0611                     	;# 
   879  0612                     	;# 
   880  0613                     	;# 
   881  0614                     	;# 
   882  0616                     	;# 
   883  0617                     	;# 
   884  0618                     	;# 
   885  0619                     	;# 
   886  061A                     	;# 
   887  061B                     	;# 
   888  061C                     	;# 
   889  061D                     	;# 
   890  061E                     	;# 
   891  068C                     	;# 
   892  068D                     	;# 
   893  068E                     	;# 
   894  068F                     	;# 
   895  0690                     	;# 
   896  0691                     	;# 
   897  0692                     	;# 
   898  0693                     	;# 
   899  0694                     	;# 
   900  070C                     	;# 
   901  070D                     	;# 
   902  070E                     	;# 
   903  070F                     	;# 
   904  0710                     	;# 
   905  0711                     	;# 
   906  0712                     	;# 
   907  0713                     	;# 
   908  0714                     	;# 
   909  0716                     	;# 
   910  0717                     	;# 
   911  0718                     	;# 
   912  0719                     	;# 
   913  071A                     	;# 
   914  071B                     	;# 
   915  071C                     	;# 
   916  071D                     	;# 
   917  071E                     	;# 
   918  0796                     	;# 
   919  0797                     	;# 
   920  0798                     	;# 
   921  0799                     	;# 
   922  079A                     	;# 
   923  079B                     	;# 
   924  080C                     	;# 
   925  080D                     	;# 
   926  080E                     	;# 
   927  080F                     	;# 
   928  0810                     	;# 
   929  0811                     	;# 
   930  0812                     	;# 
   931  0813                     	;# 
   932  0814                     	;# 
   933  081A                     	;# 
   934  081B                     	;# 
   935  081C                     	;# 
   936  081D                     	;# 
   937  081E                     	;# 
   938  081F                     	;# 
   939  088C                     	;# 
   940  088D                     	;# 
   941  088E                     	;# 
   942  088F                     	;# 
   943  0890                     	;# 
   944  0891                     	;# 
   945  0892                     	;# 
   946  0893                     	;# 
   947  0895                     	;# 
   948  0896                     	;# 
   949  0897                     	;# 
   950  0898                     	;# 
   951  0899                     	;# 
   952  089A                     	;# 
   953  089B                     	;# 
   954  090C                     	;# 
   955  090E                     	;# 
   956  090F                     	;# 
   957  091F                     	;# 
   958  091F                     	;# 
   959  098F                     	;# 
   960  098F                     	;# 
   961  0990                     	;# 
   962  0991                     	;# 
   963  0992                     	;# 
   964  0993                     	;# 
   965  0994                     	;# 
   966  0995                     	;# 
   967  0996                     	;# 
   968  0997                     	;# 
   969  0E0F                     	;# 
   970  0E10                     	;# 
   971  0E11                     	;# 
   972  0E12                     	;# 
   973  0E13                     	;# 
   974  0E14                     	;# 
   975  0E15                     	;# 
   976  0E16                     	;# 
   977  0E17                     	;# 
   978  0E18                     	;# 
   979  0E19                     	;# 
   980  0E1A                     	;# 
   981  0E1B                     	;# 
   982  0E1C                     	;# 
   983  0E1D                     	;# 
   984  0E1E                     	;# 
   985  0E1F                     	;# 
   986  0E20                     	;# 
   987  0E21                     	;# 
   988  0E22                     	;# 
   989  0E23                     	;# 
   990  0E24                     	;# 
   991  0E25                     	;# 
   992  0E26                     	;# 
   993  0E27                     	;# 
   994  0E28                     	;# 
   995  0E29                     	;# 
   996  0E2A                     	;# 
   997  0E2B                     	;# 
   998  0E2C                     	;# 
   999  0E2D                     	;# 
  1000  0E2E                     	;# 
  1001  0E2F                     	;# 
  1002  0E30                     	;# 
  1003  0E31                     	;# 
  1004  0E32                     	;# 
  1005  0E33                     	;# 
  1006  0E34                     	;# 
  1007  0E35                     	;# 
  1008  0E36                     	;# 
  1009  0E37                     	;# 
  1010  0E8F                     	;# 
  1011  0E90                     	;# 
  1012  0E91                     	;# 
  1013  0E92                     	;# 
  1014  0E93                     	;# 
  1015  0E94                     	;# 
  1016  0E95                     	;# 
  1017  0E96                     	;# 
  1018  0E97                     	;# 
  1019  0E9C                     	;# 
  1020  0E9D                     	;# 
  1021  0E9E                     	;# 
  1022  0EA1                     	;# 
  1023  0EA2                     	;# 
  1024  0EA3                     	;# 
  1025  0EA4                     	;# 
  1026  0EA5                     	;# 
  1027  0EA9                     	;# 
  1028  0EAA                     	;# 
  1029  0EAB                     	;# 
  1030  0EAC                     	;# 
  1031  0EB1                     	;# 
  1032  0EB2                     	;# 
  1033  0EB3                     	;# 
  1034  0EB8                     	;# 
  1035  0EB9                     	;# 
  1036  0EBA                     	;# 
  1037  0EBB                     	;# 
  1038  0EBC                     	;# 
  1039  0EBD                     	;# 
  1040  0EBE                     	;# 
  1041  0EC3                     	;# 
  1042  0EC5                     	;# 
  1043  0EC6                     	;# 
  1044  0EC7                     	;# 
  1045  0EC8                     	;# 
  1046  0EC9                     	;# 
  1047  0ECA                     	;# 
  1048  0ECB                     	;# 
  1049  0ECC                     	;# 
  1050  0F10                     	;# 
  1051  0F11                     	;# 
  1052  0F12                     	;# 
  1053  0F13                     	;# 
  1054  0F14                     	;# 
  1055  0F15                     	;# 
  1056  0F16                     	;# 
  1057  0F17                     	;# 
  1058  0F18                     	;# 
  1059  0F19                     	;# 
  1060  0F1A                     	;# 
  1061  0F1B                     	;# 
  1062  0F1C                     	;# 
  1063  0F1D                     	;# 
  1064  0F1E                     	;# 
  1065  0F1F                     	;# 
  1066  0F20                     	;# 
  1067  0F21                     	;# 
  1068  0F22                     	;# 
  1069  0F23                     	;# 
  1070  0F24                     	;# 
  1071  0F25                     	;# 
  1072  0F26                     	;# 
  1073  0F27                     	;# 
  1074  0F38                     	;# 
  1075  0F39                     	;# 
  1076  0F3A                     	;# 
  1077  0F3B                     	;# 
  1078  0F3C                     	;# 
  1079  0F3D                     	;# 
  1080  0F3E                     	;# 
  1081  0F3F                     	;# 
  1082  0F40                     	;# 
  1083  0F41                     	;# 
  1084  0F43                     	;# 
  1085  0F44                     	;# 
  1086  0F45                     	;# 
  1087  0F46                     	;# 
  1088  0F47                     	;# 
  1089  0F48                     	;# 
  1090  0F49                     	;# 
  1091  0F4A                     	;# 
  1092  0F4B                     	;# 
  1093  0F4C                     	;# 
  1094  0F4E                     	;# 
  1095  0F4F                     	;# 
  1096  0F50                     	;# 
  1097  0F51                     	;# 
  1098  0F52                     	;# 
  1099  0F53                     	;# 
  1100  0F54                     	;# 
  1101  0F55                     	;# 
  1102  0F56                     	;# 
  1103  0F57                     	;# 
  1104  0F65                     	;# 
  1105  0F68                     	;# 
  1106  0F69                     	;# 
  1107  0F6A                     	;# 
  1108  0F6B                     	;# 
  1109  0FE4                     	;# 
  1110  0FE5                     	;# 
  1111  0FE6                     	;# 
  1112  0FE7                     	;# 
  1113  0FE8                     	;# 
  1114  0FE9                     	;# 
  1115  0FEA                     	;# 
  1116  0FEB                     	;# 
  1117  0FED                     	;# 
  1118  0FEE                     	;# 
  1119  0FEF                     	;# 
  1120  0000                     	;# 
  1121  0001                     	;# 
  1122  0002                     	;# 
  1123  0003                     	;# 
  1124  0004                     	;# 
  1125  0005                     	;# 
  1126  0006                     	;# 
  1127  0007                     	;# 
  1128  0008                     	;# 
  1129  0009                     	;# 
  1130  000A                     	;# 
  1131  000B                     	;# 
  1132  000C                     	;# 
  1133  000D                     	;# 
  1134  000E                     	;# 
  1135  0010                     	;# 
  1136  0011                     	;# 
  1137  0012                     	;# 
  1138  0013                     	;# 
  1139  0016                     	;# 
  1140  0017                     	;# 
  1141  0018                     	;# 
  1142  001C                     	;# 
  1143  001C                     	;# 
  1144  001D                     	;# 
  1145  001D                     	;# 
  1146  001E                     	;# 
  1147  001F                     	;# 
  1148  008C                     	;# 
  1149  008C                     	;# 
  1150  008D                     	;# 
  1151  008E                     	;# 
  1152  008E                     	;# 
  1153  008F                     	;# 
  1154  0090                     	;# 
  1155  0090                     	;# 
  1156  0091                     	;# 
  1157  0093                     	;# 
  1158  0094                     	;# 
  1159  0095                     	;# 
  1160  0096                     	;# 
  1161  0097                     	;# 
  1162  0098                     	;# 
  1163  0099                     	;# 
  1164  009A                     	;# 
  1165  009B                     	;# 
  1166  009C                     	;# 
  1167  009D                     	;# 
  1168  009E                     	;# 
  1169  010C                     	;# 
  1170  010D                     	;# 
  1171  010E                     	;# 
  1172  010E                     	;# 
  1173  010F                     	;# 
  1174  0110                     	;# 
  1175  0110                     	;# 
  1176  0111                     	;# 
  1177  0112                     	;# 
  1178  0112                     	;# 
  1179  0113                     	;# 
  1180  0114                     	;# 
  1181  0114                     	;# 
  1182  0115                     	;# 
  1183  0116                     	;# 
  1184  0116                     	;# 
  1185  0117                     	;# 
  1186  0119                     	;# 
  1187  0119                     	;# 
  1188  0119                     	;# 
  1189  011A                     	;# 
  1190  011A                     	;# 
  1191  011A                     	;# 
  1192  011B                     	;# 
  1193  011B                     	;# 
  1194  011B                     	;# 
  1195  011B                     	;# 
  1196  011B                     	;# 
  1197  011C                     	;# 
  1198  011C                     	;# 
  1199  011C                     	;# 
  1200  011D                     	;# 
  1201  011D                     	;# 
  1202  011D                     	;# 
  1203  011E                     	;# 
  1204  011E                     	;# 
  1205  011E                     	;# 
  1206  011F                     	;# 
  1207  011F                     	;# 
  1208  011F                     	;# 
  1209  011F                     	;# 
  1210  011F                     	;# 
  1211  018C                     	;# 
  1212  018D                     	;# 
  1213  018E                     	;# 
  1214  018F                     	;# 
  1215  0190                     	;# 
  1216  0191                     	;# 
  1217  0192                     	;# 
  1218  0196                     	;# 
  1219  0197                     	;# 
  1220  0198                     	;# 
  1221  0199                     	;# 
  1222  019A                     	;# 
  1223  019B                     	;# 
  1224  019C                     	;# 
  1225  020C                     	;# 
  1226  020C                     	;# 
  1227  020D                     	;# 
  1228  020E                     	;# 
  1229  020F                     	;# 
  1230  020F                     	;# 
  1231  0210                     	;# 
  1232  0210                     	;# 
  1233  0211                     	;# 
  1234  0211                     	;# 
  1235  0212                     	;# 
  1236  0212                     	;# 
  1237  0213                     	;# 
  1238  0214                     	;# 
  1239  0215                     	;# 
  1240  0215                     	;# 
  1241  0216                     	;# 
  1242  0216                     	;# 
  1243  0217                     	;# 
  1244  0217                     	;# 
  1245  0218                     	;# 
  1246  0218                     	;# 
  1247  0219                     	;# 
  1248  021A                     	;# 
  1249  021B                     	;# 
  1250  021B                     	;# 
  1251  021C                     	;# 
  1252  021C                     	;# 
  1253  021D                     	;# 
  1254  021D                     	;# 
  1255  021E                     	;# 
  1256  021F                     	;# 
  1257  028C                     	;# 
  1258  028C                     	;# 
  1259  028D                     	;# 
  1260  028D                     	;# 
  1261  028E                     	;# 
  1262  028F                     	;# 
  1263  0290                     	;# 
  1264  0290                     	;# 
  1265  0291                     	;# 
  1266  0292                     	;# 
  1267  0292                     	;# 
  1268  0293                     	;# 
  1269  0293                     	;# 
  1270  0294                     	;# 
  1271  0295                     	;# 
  1272  0296                     	;# 
  1273  0296                     	;# 
  1274  0297                     	;# 
  1275  0298                     	;# 
  1276  0298                     	;# 
  1277  0299                     	;# 
  1278  0299                     	;# 
  1279  029A                     	;# 
  1280  029B                     	;# 
  1281  029C                     	;# 
  1282  029C                     	;# 
  1283  029D                     	;# 
  1284  030C                     	;# 
  1285  030C                     	;# 
  1286  030D                     	;# 
  1287  030E                     	;# 
  1288  030F                     	;# 
  1289  0310                     	;# 
  1290  0310                     	;# 
  1291  0311                     	;# 
  1292  0312                     	;# 
  1293  0313                     	;# 
  1294  0314                     	;# 
  1295  0314                     	;# 
  1296  0315                     	;# 
  1297  0316                     	;# 
  1298  0317                     	;# 
  1299  0318                     	;# 
  1300  0318                     	;# 
  1301  0319                     	;# 
  1302  031A                     	;# 
  1303  031B                     	;# 
  1304  031C                     	;# 
  1305  031C                     	;# 
  1306  031D                     	;# 
  1307  031E                     	;# 
  1308  031F                     	;# 
  1309  038C                     	;# 
  1310  038C                     	;# 
  1311  038D                     	;# 
  1312  038E                     	;# 
  1313  0390                     	;# 
  1314  0390                     	;# 
  1315  0391                     	;# 
  1316  0392                     	;# 
  1317  040C                     	;# 
  1318  040D                     	;# 
  1319  040E                     	;# 
  1320  040F                     	;# 
  1321  0410                     	;# 
  1322  0411                     	;# 
  1323  0416                     	;# 
  1324  0416                     	;# 
  1325  0417                     	;# 
  1326  0418                     	;# 
  1327  0418                     	;# 
  1328  0419                     	;# 
  1329  041A                     	;# 
  1330  041A                     	;# 
  1331  041B                     	;# 
  1332  041C                     	;# 
  1333  041C                     	;# 
  1334  041D                     	;# 
  1335  041E                     	;# 
  1336  041F                     	;# 
  1337  048C                     	;# 
  1338  048C                     	;# 
  1339  048D                     	;# 
  1340  048E                     	;# 
  1341  048F                     	;# 
  1342  048F                     	;# 
  1343  0490                     	;# 
  1344  0491                     	;# 
  1345  0492                     	;# 
  1346  0492                     	;# 
  1347  0493                     	;# 
  1348  0494                     	;# 
  1349  0495                     	;# 
  1350  0495                     	;# 
  1351  0496                     	;# 
  1352  0497                     	;# 
  1353  0498                     	;# 
  1354  0499                     	;# 
  1355  049A                     	;# 
  1356  049B                     	;# 
  1357  049C                     	;# 
  1358  049D                     	;# 
  1359  050C                     	;# 
  1360  050C                     	;# 
  1361  050D                     	;# 
  1362  050E                     	;# 
  1363  050F                     	;# 
  1364  050F                     	;# 
  1365  0510                     	;# 
  1366  0511                     	;# 
  1367  0512                     	;# 
  1368  0512                     	;# 
  1369  0513                     	;# 
  1370  0514                     	;# 
  1371  0515                     	;# 
  1372  0515                     	;# 
  1373  0516                     	;# 
  1374  0517                     	;# 
  1375  0518                     	;# 
  1376  0519                     	;# 
  1377  051A                     	;# 
  1378  051B                     	;# 
  1379  051C                     	;# 
  1380  051D                     	;# 
  1381  058C                     	;# 
  1382  058C                     	;# 
  1383  058D                     	;# 
  1384  058E                     	;# 
  1385  058F                     	;# 
  1386  058F                     	;# 
  1387  0590                     	;# 
  1388  0591                     	;# 
  1389  0592                     	;# 
  1390  0593                     	;# 
  1391  060C                     	;# 
  1392  060D                     	;# 
  1393  060E                     	;# 
  1394  060F                     	;# 
  1395  0610                     	;# 
  1396  0611                     	;# 
  1397  0612                     	;# 
  1398  0613                     	;# 
  1399  0614                     	;# 
  1400  0616                     	;# 
  1401  0617                     	;# 
  1402  0618                     	;# 
  1403  0619                     	;# 
  1404  061A                     	;# 
  1405  061B                     	;# 
  1406  061C                     	;# 
  1407  061D                     	;# 
  1408  061E                     	;# 
  1409  068C                     	;# 
  1410  068D                     	;# 
  1411  068E                     	;# 
  1412  068F                     	;# 
  1413  0690                     	;# 
  1414  0691                     	;# 
  1415  0692                     	;# 
  1416  0693                     	;# 
  1417  0694                     	;# 
  1418  070C                     	;# 
  1419  070D                     	;# 
  1420  070E                     	;# 
  1421  070F                     	;# 
  1422  0710                     	;# 
  1423  0711                     	;# 
  1424  0712                     	;# 
  1425  0713                     	;# 
  1426  0714                     	;# 
  1427  0716                     	;# 
  1428  0717                     	;# 
  1429  0718                     	;# 
  1430  0719                     	;# 
  1431  071A                     	;# 
  1432  071B                     	;# 
  1433  071C                     	;# 
  1434  071D                     	;# 
  1435  071E                     	;# 
  1436  0796                     	;# 
  1437  0797                     	;# 
  1438  0798                     	;# 
  1439  0799                     	;# 
  1440  079A                     	;# 
  1441  079B                     	;# 
  1442  080C                     	;# 
  1443  080D                     	;# 
  1444  080E                     	;# 
  1445  080F                     	;# 
  1446  0810                     	;# 
  1447  0811                     	;# 
  1448  0812                     	;# 
  1449  0813                     	;# 
  1450  0814                     	;# 
  1451  081A                     	;# 
  1452  081B                     	;# 
  1453  081C                     	;# 
  1454  081D                     	;# 
  1455  081E                     	;# 
  1456  081F                     	;# 
  1457  088C                     	;# 
  1458  088D                     	;# 
  1459  088E                     	;# 
  1460  088F                     	;# 
  1461  0890                     	;# 
  1462  0891                     	;# 
  1463  0892                     	;# 
  1464  0893                     	;# 
  1465  0895                     	;# 
  1466  0896                     	;# 
  1467  0897                     	;# 
  1468  0898                     	;# 
  1469  0899                     	;# 
  1470  089A                     	;# 
  1471  089B                     	;# 
  1472  090C                     	;# 
  1473  090E                     	;# 
  1474  090F                     	;# 
  1475  091F                     	;# 
  1476  091F                     	;# 
  1477  098F                     	;# 
  1478  098F                     	;# 
  1479  0990                     	;# 
  1480  0991                     	;# 
  1481  0992                     	;# 
  1482  0993                     	;# 
  1483  0994                     	;# 
  1484  0995                     	;# 
  1485  0996                     	;# 
  1486  0997                     	;# 
  1487  0E0F                     	;# 
  1488  0E10                     	;# 
  1489  0E11                     	;# 
  1490  0E12                     	;# 
  1491  0E13                     	;# 
  1492  0E14                     	;# 
  1493  0E15                     	;# 
  1494  0E16                     	;# 
  1495  0E17                     	;# 
  1496  0E18                     	;# 
  1497  0E19                     	;# 
  1498  0E1A                     	;# 
  1499  0E1B                     	;# 
  1500  0E1C                     	;# 
  1501  0E1D                     	;# 
  1502  0E1E                     	;# 
  1503  0E1F                     	;# 
  1504  0E20                     	;# 
  1505  0E21                     	;# 
  1506  0E22                     	;# 
  1507  0E23                     	;# 
  1508  0E24                     	;# 
  1509  0E25                     	;# 
  1510  0E26                     	;# 
  1511  0E27                     	;# 
  1512  0E28                     	;# 
  1513  0E29                     	;# 
  1514  0E2A                     	;# 
  1515  0E2B                     	;# 
  1516  0E2C                     	;# 
  1517  0E2D                     	;# 
  1518  0E2E                     	;# 
  1519  0E2F                     	;# 
  1520  0E30                     	;# 
  1521  0E31                     	;# 
  1522  0E32                     	;# 
  1523  0E33                     	;# 
  1524  0E34                     	;# 
  1525  0E35                     	;# 
  1526  0E36                     	;# 
  1527  0E37                     	;# 
  1528  0E8F                     	;# 
  1529  0E90                     	;# 
  1530  0E91                     	;# 
  1531  0E92                     	;# 
  1532  0E93                     	;# 
  1533  0E94                     	;# 
  1534  0E95                     	;# 
  1535  0E96                     	;# 
  1536  0E97                     	;# 
  1537  0E9C                     	;# 
  1538  0E9D                     	;# 
  1539  0E9E                     	;# 
  1540  0EA1                     	;# 
  1541  0EA2                     	;# 
  1542  0EA3                     	;# 
  1543  0EA4                     	;# 
  1544  0EA5                     	;# 
  1545  0EA9                     	;# 
  1546  0EAA                     	;# 
  1547  0EAB                     	;# 
  1548  0EAC                     	;# 
  1549  0EB1                     	;# 
  1550  0EB2                     	;# 
  1551  0EB3                     	;# 
  1552  0EB8                     	;# 
  1553  0EB9                     	;# 
  1554  0EBA                     	;# 
  1555  0EBB                     	;# 
  1556  0EBC                     	;# 
  1557  0EBD                     	;# 
  1558  0EBE                     	;# 
  1559  0EC3                     	;# 
  1560  0EC5                     	;# 
  1561  0EC6                     	;# 
  1562  0EC7                     	;# 
  1563  0EC8                     	;# 
  1564  0EC9                     	;# 
  1565  0ECA                     	;# 
  1566  0ECB                     	;# 
  1567  0ECC                     	;# 
  1568  0F10                     	;# 
  1569  0F11                     	;# 
  1570  0F12                     	;# 
  1571  0F13                     	;# 
  1572  0F14                     	;# 
  1573  0F15                     	;# 
  1574  0F16                     	;# 
  1575  0F17                     	;# 
  1576  0F18                     	;# 
  1577  0F19                     	;# 
  1578  0F1A                     	;# 
  1579  0F1B                     	;# 
  1580  0F1C                     	;# 
  1581  0F1D                     	;# 
  1582  0F1E                     	;# 
  1583  0F1F                     	;# 
  1584  0F20                     	;# 
  1585  0F21                     	;# 
  1586  0F22                     	;# 
  1587  0F23                     	;# 
  1588  0F24                     	;# 
  1589  0F25                     	;# 
  1590  0F26                     	;# 
  1591  0F27                     	;# 
  1592  0F38                     	;# 
  1593  0F39                     	;# 
  1594  0F3A                     	;# 
  1595  0F3B                     	;# 
  1596  0F3C                     	;# 
  1597  0F3D                     	;# 
  1598  0F3E                     	;# 
  1599  0F3F                     	;# 
  1600  0F40                     	;# 
  1601  0F41                     	;# 
  1602  0F43                     	;# 
  1603  0F44                     	;# 
  1604  0F45                     	;# 
  1605  0F46                     	;# 
  1606  0F47                     	;# 
  1607  0F48                     	;# 
  1608  0F49                     	;# 
  1609  0F4A                     	;# 
  1610  0F4B                     	;# 
  1611  0F4C                     	;# 
  1612  0F4E                     	;# 
  1613  0F4F                     	;# 
  1614  0F50                     	;# 
  1615  0F51                     	;# 
  1616  0F52                     	;# 
  1617  0F53                     	;# 
  1618  0F54                     	;# 
  1619  0F55                     	;# 
  1620  0F56                     	;# 
  1621  0F57                     	;# 
  1622  0F65                     	;# 
  1623  0F68                     	;# 
  1624  0F69                     	;# 
  1625  0F6A                     	;# 
  1626  0F6B                     	;# 
  1627  0FE4                     	;# 
  1628  0FE5                     	;# 
  1629  0FE6                     	;# 
  1630  0FE7                     	;# 
  1631  0FE8                     	;# 
  1632  0FE9                     	;# 
  1633  0FEA                     	;# 
  1634  0FEB                     	;# 
  1635  0FED                     	;# 
  1636  0FEE                     	;# 
  1637  0FEF                     	;# 
  1638  0000                     	;# 
  1639  0001                     	;# 
  1640  0002                     	;# 
  1641  0003                     	;# 
  1642  0004                     	;# 
  1643  0005                     	;# 
  1644  0006                     	;# 
  1645  0007                     	;# 
  1646  0008                     	;# 
  1647  0009                     	;# 
  1648  000A                     	;# 
  1649  000B                     	;# 
  1650  000C                     	;# 
  1651  000D                     	;# 
  1652  000E                     	;# 
  1653  0010                     	;# 
  1654  0011                     	;# 
  1655  0012                     	;# 
  1656  0013                     	;# 
  1657  0016                     	;# 
  1658  0017                     	;# 
  1659  0018                     	;# 
  1660  001C                     	;# 
  1661  001C                     	;# 
  1662  001D                     	;# 
  1663  001D                     	;# 
  1664  001E                     	;# 
  1665  001F                     	;# 
  1666  008C                     	;# 
  1667  008C                     	;# 
  1668  008D                     	;# 
  1669  008E                     	;# 
  1670  008E                     	;# 
  1671  008F                     	;# 
  1672  0090                     	;# 
  1673  0090                     	;# 
  1674  0091                     	;# 
  1675  0093                     	;# 
  1676  0094                     	;# 
  1677  0095                     	;# 
  1678  0096                     	;# 
  1679  0097                     	;# 
  1680  0098                     	;# 
  1681  0099                     	;# 
  1682  009A                     	;# 
  1683  009B                     	;# 
  1684  009C                     	;# 
  1685  009D                     	;# 
  1686  009E                     	;# 
  1687  010C                     	;# 
  1688  010D                     	;# 
  1689  010E                     	;# 
  1690  010E                     	;# 
  1691  010F                     	;# 
  1692  0110                     	;# 
  1693  0110                     	;# 
  1694  0111                     	;# 
  1695  0112                     	;# 
  1696  0112                     	;# 
  1697  0113                     	;# 
  1698  0114                     	;# 
  1699  0114                     	;# 
  1700  0115                     	;# 
  1701  0116                     	;# 
  1702  0116                     	;# 
  1703  0117                     	;# 
  1704  0119                     	;# 
  1705  0119                     	;# 
  1706  0119                     	;# 
  1707  011A                     	;# 
  1708  011A                     	;# 
  1709  011A                     	;# 
  1710  011B                     	;# 
  1711  011B                     	;# 
  1712  011B                     	;# 
  1713  011B                     	;# 
  1714  011B                     	;# 
  1715  011C                     	;# 
  1716  011C                     	;# 
  1717  011C                     	;# 
  1718  011D                     	;# 
  1719  011D                     	;# 
  1720  011D                     	;# 
  1721  011E                     	;# 
  1722  011E                     	;# 
  1723  011E                     	;# 
  1724  011F                     	;# 
  1725  011F                     	;# 
  1726  011F                     	;# 
  1727  011F                     	;# 
  1728  011F                     	;# 
  1729  018C                     	;# 
  1730  018D                     	;# 
  1731  018E                     	;# 
  1732  018F                     	;# 
  1733  0190                     	;# 
  1734  0191                     	;# 
  1735  0192                     	;# 
  1736  0196                     	;# 
  1737  0197                     	;# 
  1738  0198                     	;# 
  1739  0199                     	;# 
  1740  019A                     	;# 
  1741  019B                     	;# 
  1742  019C                     	;# 
  1743  020C                     	;# 
  1744  020C                     	;# 
  1745  020D                     	;# 
  1746  020E                     	;# 
  1747  020F                     	;# 
  1748  020F                     	;# 
  1749  0210                     	;# 
  1750  0210                     	;# 
  1751  0211                     	;# 
  1752  0211                     	;# 
  1753  0212                     	;# 
  1754  0212                     	;# 
  1755  0213                     	;# 
  1756  0214                     	;# 
  1757  0215                     	;# 
  1758  0215                     	;# 
  1759  0216                     	;# 
  1760  0216                     	;# 
  1761  0217                     	;# 
  1762  0217                     	;# 
  1763  0218                     	;# 
  1764  0218                     	;# 
  1765  0219                     	;# 
  1766  021A                     	;# 
  1767  021B                     	;# 
  1768  021B                     	;# 
  1769  021C                     	;# 
  1770  021C                     	;# 
  1771  021D                     	;# 
  1772  021D                     	;# 
  1773  021E                     	;# 
  1774  021F                     	;# 
  1775  028C                     	;# 
  1776  028C                     	;# 
  1777  028D                     	;# 
  1778  028D                     	;# 
  1779  028E                     	;# 
  1780  028F                     	;# 
  1781  0290                     	;# 
  1782  0290                     	;# 
  1783  0291                     	;# 
  1784  0292                     	;# 
  1785  0292                     	;# 
  1786  0293                     	;# 
  1787  0293                     	;# 
  1788  0294                     	;# 
  1789  0295                     	;# 
  1790  0296                     	;# 
  1791  0296                     	;# 
  1792  0297                     	;# 
  1793  0298                     	;# 
  1794  0298                     	;# 
  1795  0299                     	;# 
  1796  0299                     	;# 
  1797  029A                     	;# 
  1798  029B                     	;# 
  1799  029C                     	;# 
  1800  029C                     	;# 
  1801  029D                     	;# 
  1802  030C                     	;# 
  1803  030C                     	;# 
  1804  030D                     	;# 
  1805  030E                     	;# 
  1806  030F                     	;# 
  1807  0310                     	;# 
  1808  0310                     	;# 
  1809  0311                     	;# 
  1810  0312                     	;# 
  1811  0313                     	;# 
  1812  0314                     	;# 
  1813  0314                     	;# 
  1814  0315                     	;# 
  1815  0316                     	;# 
  1816  0317                     	;# 
  1817  0318                     	;# 
  1818  0318                     	;# 
  1819  0319                     	;# 
  1820  031A                     	;# 
  1821  031B                     	;# 
  1822  031C                     	;# 
  1823  031C                     	;# 
  1824  031D                     	;# 
  1825  031E                     	;# 
  1826  031F                     	;# 
  1827  038C                     	;# 
  1828  038C                     	;# 
  1829  038D                     	;# 
  1830  038E                     	;# 
  1831  0390                     	;# 
  1832  0390                     	;# 
  1833  0391                     	;# 
  1834  0392                     	;# 
  1835  040C                     	;# 
  1836  040D                     	;# 
  1837  040E                     	;# 
  1838  040F                     	;# 
  1839  0410                     	;# 
  1840  0411                     	;# 
  1841  0416                     	;# 
  1842  0416                     	;# 
  1843  0417                     	;# 
  1844  0418                     	;# 
  1845  0418                     	;# 
  1846  0419                     	;# 
  1847  041A                     	;# 
  1848  041A                     	;# 
  1849  041B                     	;# 
  1850  041C                     	;# 
  1851  041C                     	;# 
  1852  041D                     	;# 
  1853  041E                     	;# 
  1854  041F                     	;# 
  1855  048C                     	;# 
  1856  048C                     	;# 
  1857  048D                     	;# 
  1858  048E                     	;# 
  1859  048F                     	;# 
  1860  048F                     	;# 
  1861  0490                     	;# 
  1862  0491                     	;# 
  1863  0492                     	;# 
  1864  0492                     	;# 
  1865  0493                     	;# 
  1866  0494                     	;# 
  1867  0495                     	;# 
  1868  0495                     	;# 
  1869  0496                     	;# 
  1870  0497                     	;# 
  1871  0498                     	;# 
  1872  0499                     	;# 
  1873  049A                     	;# 
  1874  049B                     	;# 
  1875  049C                     	;# 
  1876  049D                     	;# 
  1877  050C                     	;# 
  1878  050C                     	;# 
  1879  050D                     	;# 
  1880  050E                     	;# 
  1881  050F                     	;# 
  1882  050F                     	;# 
  1883  0510                     	;# 
  1884  0511                     	;# 
  1885  0512                     	;# 
  1886  0512                     	;# 
  1887  0513                     	;# 
  1888  0514                     	;# 
  1889  0515                     	;# 
  1890  0515                     	;# 
  1891  0516                     	;# 
  1892  0517                     	;# 
  1893  0518                     	;# 
  1894  0519                     	;# 
  1895  051A                     	;# 
  1896  051B                     	;# 
  1897  051C                     	;# 
  1898  051D                     	;# 
  1899  058C                     	;# 
  1900  058C                     	;# 
  1901  058D                     	;# 
  1902  058E                     	;# 
  1903  058F                     	;# 
  1904  058F                     	;# 
  1905  0590                     	;# 
  1906  0591                     	;# 
  1907  0592                     	;# 
  1908  0593                     	;# 
  1909  060C                     	;# 
  1910  060D                     	;# 
  1911  060E                     	;# 
  1912  060F                     	;# 
  1913  0610                     	;# 
  1914  0611                     	;# 
  1915  0612                     	;# 
  1916  0613                     	;# 
  1917  0614                     	;# 
  1918  0616                     	;# 
  1919  0617                     	;# 
  1920  0618                     	;# 
  1921  0619                     	;# 
  1922  061A                     	;# 
  1923  061B                     	;# 
  1924  061C                     	;# 
  1925  061D                     	;# 
  1926  061E                     	;# 
  1927  068C                     	;# 
  1928  068D                     	;# 
  1929  068E                     	;# 
  1930  068F                     	;# 
  1931  0690                     	;# 
  1932  0691                     	;# 
  1933  0692                     	;# 
  1934  0693                     	;# 
  1935  0694                     	;# 
  1936  070C                     	;# 
  1937  070D                     	;# 
  1938  070E                     	;# 
  1939  070F                     	;# 
  1940  0710                     	;# 
  1941  0711                     	;# 
  1942  0712                     	;# 
  1943  0713                     	;# 
  1944  0714                     	;# 
  1945  0716                     	;# 
  1946  0717                     	;# 
  1947  0718                     	;# 
  1948  0719                     	;# 
  1949  071A                     	;# 
  1950  071B                     	;# 
  1951  071C                     	;# 
  1952  071D                     	;# 
  1953  071E                     	;# 
  1954  0796                     	;# 
  1955  0797                     	;# 
  1956  0798                     	;# 
  1957  0799                     	;# 
  1958  079A                     	;# 
  1959  079B                     	;# 
  1960  080C                     	;# 
  1961  080D                     	;# 
  1962  080E                     	;# 
  1963  080F                     	;# 
  1964  0810                     	;# 
  1965  0811                     	;# 
  1966  0812                     	;# 
  1967  0813                     	;# 
  1968  0814                     	;# 
  1969  081A                     	;# 
  1970  081B                     	;# 
  1971  081C                     	;# 
  1972  081D                     	;# 
  1973  081E                     	;# 
  1974  081F                     	;# 
  1975  088C                     	;# 
  1976  088D                     	;# 
  1977  088E                     	;# 
  1978  088F                     	;# 
  1979  0890                     	;# 
  1980  0891                     	;# 
  1981  0892                     	;# 
  1982  0893                     	;# 
  1983  0895                     	;# 
  1984  0896                     	;# 
  1985  0897                     	;# 
  1986  0898                     	;# 
  1987  0899                     	;# 
  1988  089A                     	;# 
  1989  089B                     	;# 
  1990  090C                     	;# 
  1991  090E                     	;# 
  1992  090F                     	;# 
  1993  091F                     	;# 
  1994  091F                     	;# 
  1995  098F                     	;# 
  1996  098F                     	;# 
  1997  0990                     	;# 
  1998  0991                     	;# 
  1999  0992                     	;# 
  2000  0993                     	;# 
  2001  0994                     	;# 
  2002  0995                     	;# 
  2003  0996                     	;# 
  2004  0997                     	;# 
  2005  0E0F                     	;# 
  2006  0E10                     	;# 
  2007  0E11                     	;# 
  2008  0E12                     	;# 
  2009  0E13                     	;# 
  2010  0E14                     	;# 
  2011  0E15                     	;# 
  2012  0E16                     	;# 
  2013  0E17                     	;# 
  2014  0E18                     	;# 
  2015  0E19                     	;# 
  2016  0E1A                     	;# 
  2017  0E1B                     	;# 
  2018  0E1C                     	;# 
  2019  0E1D                     	;# 
  2020  0E1E                     	;# 
  2021  0E1F                     	;# 
  2022  0E20                     	;# 
  2023  0E21                     	;# 
  2024  0E22                     	;# 
  2025  0E23                     	;# 
  2026  0E24                     	;# 
  2027  0E25                     	;# 
  2028  0E26                     	;# 
  2029  0E27                     	;# 
  2030  0E28                     	;# 
  2031  0E29                     	;# 
  2032  0E2A                     	;# 
  2033  0E2B                     	;# 
  2034  0E2C                     	;# 
  2035  0E2D                     	;# 
  2036  0E2E                     	;# 
  2037  0E2F                     	;# 
  2038  0E30                     	;# 
  2039  0E31                     	;# 
  2040  0E32                     	;# 
  2041  0E33                     	;# 
  2042  0E34                     	;# 
  2043  0E35                     	;# 
  2044  0E36                     	;# 
  2045  0E37                     	;# 
  2046  0E8F                     	;# 
  2047  0E90                     	;# 
  2048  0E91                     	;# 
  2049  0E92                     	;# 
  2050  0E93                     	;# 
  2051  0E94                     	;# 
  2052  0E95                     	;# 
  2053  0E96                     	;# 
  2054  0E97                     	;# 
  2055  0E9C                     	;# 
  2056  0E9D                     	;# 
  2057  0E9E                     	;# 
  2058  0EA1                     	;# 
  2059  0EA2                     	;# 
  2060  0EA3                     	;# 
  2061  0EA4                     	;# 
  2062  0EA5                     	;# 
  2063  0EA9                     	;# 
  2064  0EAA                     	;# 
  2065  0EAB                     	;# 
  2066  0EAC                     	;# 
  2067  0EB1                     	;# 
  2068  0EB2                     	;# 
  2069  0EB3                     	;# 
  2070  0EB8                     	;# 
  2071  0EB9                     	;# 
  2072  0EBA                     	;# 
  2073  0EBB                     	;# 
  2074  0EBC                     	;# 
  2075  0EBD                     	;# 
  2076  0EBE                     	;# 
  2077  0EC3                     	;# 
  2078  0EC5                     	;# 
  2079  0EC6                     	;# 
  2080  0EC7                     	;# 
  2081  0EC8                     	;# 
  2082  0EC9                     	;# 
  2083  0ECA                     	;# 
  2084  0ECB                     	;# 
  2085  0ECC                     	;# 
  2086  0F10                     	;# 
  2087  0F11                     	;# 
  2088  0F12                     	;# 
  2089  0F13                     	;# 
  2090  0F14                     	;# 
  2091  0F15                     	;# 
  2092  0F16                     	;# 
  2093  0F17                     	;# 
  2094  0F18                     	;# 
  2095  0F19                     	;# 
  2096  0F1A                     	;# 
  2097  0F1B                     	;# 
  2098  0F1C                     	;# 
  2099  0F1D                     	;# 
  2100  0F1E                     	;# 
  2101  0F1F                     	;# 
  2102  0F20                     	;# 
  2103  0F21                     	;# 
  2104  0F22                     	;# 
  2105  0F23                     	;# 
  2106  0F24                     	;# 
  2107  0F25                     	;# 
  2108  0F26                     	;# 
  2109  0F27                     	;# 
  2110  0F38                     	;# 
  2111  0F39                     	;# 
  2112  0F3A                     	;# 
  2113  0F3B                     	;# 
  2114  0F3C                     	;# 
  2115  0F3D                     	;# 
  2116  0F3E                     	;# 
  2117  0F3F                     	;# 
  2118  0F40                     	;# 
  2119  0F41                     	;# 
  2120  0F43                     	;# 
  2121  0F44                     	;# 
  2122  0F45                     	;# 
  2123  0F46                     	;# 
  2124  0F47                     	;# 
  2125  0F48                     	;# 
  2126  0F49                     	;# 
  2127  0F4A                     	;# 
  2128  0F4B                     	;# 
  2129  0F4C                     	;# 
  2130  0F4E                     	;# 
  2131  0F4F                     	;# 
  2132  0F50                     	;# 
  2133  0F51                     	;# 
  2134  0F52                     	;# 
  2135  0F53                     	;# 
  2136  0F54                     	;# 
  2137  0F55                     	;# 
  2138  0F56                     	;# 
  2139  0F57                     	;# 
  2140  0F65                     	;# 
  2141  0F68                     	;# 
  2142  0F69                     	;# 
  2143  0F6A                     	;# 
  2144  0F6B                     	;# 
  2145  0FE4                     	;# 
  2146  0FE5                     	;# 
  2147  0FE6                     	;# 
  2148  0FE7                     	;# 
  2149  0FE8                     	;# 
  2150  0FE9                     	;# 
  2151  0FEA                     	;# 
  2152  0FEB                     	;# 
  2153  0FED                     	;# 
  2154  0FEE                     	;# 
  2155  0FEF                     	;# 
  2156  0000                     	;# 
  2157  0001                     	;# 
  2158  0002                     	;# 
  2159  0003                     	;# 
  2160  0004                     	;# 
  2161  0005                     	;# 
  2162  0006                     	;# 
  2163  0007                     	;# 
  2164  0008                     	;# 
  2165  0009                     	;# 
  2166  000A                     	;# 
  2167  000B                     	;# 
  2168  000C                     	;# 
  2169  000D                     	;# 
  2170  000E                     	;# 
  2171  0010                     	;# 
  2172  0011                     	;# 
  2173  0012                     	;# 
  2174  0013                     	;# 
  2175  0016                     	;# 
  2176  0017                     	;# 
  2177  0018                     	;# 
  2178  001C                     	;# 
  2179  001C                     	;# 
  2180  001D                     	;# 
  2181  001D                     	;# 
  2182  001E                     	;# 
  2183  001F                     	;# 
  2184  008C                     	;# 
  2185  008C                     	;# 
  2186  008D                     	;# 
  2187  008E                     	;# 
  2188  008E                     	;# 
  2189  008F                     	;# 
  2190  0090                     	;# 
  2191  0090                     	;# 
  2192  0091                     	;# 
  2193  0093                     	;# 
  2194  0094                     	;# 
  2195  0095                     	;# 
  2196  0096                     	;# 
  2197  0097                     	;# 
  2198  0098                     	;# 
  2199  0099                     	;# 
  2200  009A                     	;# 
  2201  009B                     	;# 
  2202  009C                     	;# 
  2203  009D                     	;# 
  2204  009E                     	;# 
  2205  010C                     	;# 
  2206  010D                     	;# 
  2207  010E                     	;# 
  2208  010E                     	;# 
  2209  010F                     	;# 
  2210  0110                     	;# 
  2211  0110                     	;# 
  2212  0111                     	;# 
  2213  0112                     	;# 
  2214  0112                     	;# 
  2215  0113                     	;# 
  2216  0114                     	;# 
  2217  0114                     	;# 
  2218  0115                     	;# 
  2219  0116                     	;# 
  2220  0116                     	;# 
  2221  0117                     	;# 
  2222  0119                     	;# 
  2223  0119                     	;# 
  2224  0119                     	;# 
  2225  011A                     	;# 
  2226  011A                     	;# 
  2227  011A                     	;# 
  2228  011B                     	;# 
  2229  011B                     	;# 
  2230  011B                     	;# 
  2231  011B                     	;# 
  2232  011B                     	;# 
  2233  011C                     	;# 
  2234  011C                     	;# 
  2235  011C                     	;# 
  2236  011D                     	;# 
  2237  011D                     	;# 
  2238  011D                     	;# 
  2239  011E                     	;# 
  2240  011E                     	;# 
  2241  011E                     	;# 
  2242  011F                     	;# 
  2243  011F                     	;# 
  2244  011F                     	;# 
  2245  011F                     	;# 
  2246  011F                     	;# 
  2247  018C                     	;# 
  2248  018D                     	;# 
  2249  018E                     	;# 
  2250  018F                     	;# 
  2251  0190                     	;# 
  2252  0191                     	;# 
  2253  0192                     	;# 
  2254  0196                     	;# 
  2255  0197                     	;# 
  2256  0198                     	;# 
  2257  0199                     	;# 
  2258  019A                     	;# 
  2259  019B                     	;# 
  2260  019C                     	;# 
  2261  020C                     	;# 
  2262  020C                     	;# 
  2263  020D                     	;# 
  2264  020E                     	;# 
  2265  020F                     	;# 
  2266  020F                     	;# 
  2267  0210                     	;# 
  2268  0210                     	;# 
  2269  0211                     	;# 
  2270  0211                     	;# 
  2271  0212                     	;# 
  2272  0212                     	;# 
  2273  0213                     	;# 
  2274  0214                     	;# 
  2275  0215                     	;# 
  2276  0215                     	;# 
  2277  0216                     	;# 
  2278  0216                     	;# 
  2279  0217                     	;# 
  2280  0217                     	;# 
  2281  0218                     	;# 
  2282  0218                     	;# 
  2283  0219                     	;# 
  2284  021A                     	;# 
  2285  021B                     	;# 
  2286  021B                     	;# 
  2287  021C                     	;# 
  2288  021C                     	;# 
  2289  021D                     	;# 
  2290  021D                     	;# 
  2291  021E                     	;# 
  2292  021F                     	;# 
  2293  028C                     	;# 
  2294  028C                     	;# 
  2295  028D                     	;# 
  2296  028D                     	;# 
  2297  028E                     	;# 
  2298  028F                     	;# 
  2299  0290                     	;# 
  2300  0290                     	;# 
  2301  0291                     	;# 
  2302  0292                     	;# 
  2303  0292                     	;# 
  2304  0293                     	;# 
  2305  0293                     	;# 
  2306  0294                     	;# 
  2307  0295                     	;# 
  2308  0296                     	;# 
  2309  0296                     	;# 
  2310  0297                     	;# 
  2311  0298                     	;# 
  2312  0298                     	;# 
  2313  0299                     	;# 
  2314  0299                     	;# 
  2315  029A                     	;# 
  2316  029B                     	;# 
  2317  029C                     	;# 
  2318  029C                     	;# 
  2319  029D                     	;# 
  2320  030C                     	;# 
  2321  030C                     	;# 
  2322  030D                     	;# 
  2323  030E                     	;# 
  2324  030F                     	;# 
  2325  0310                     	;# 
  2326  0310                     	;# 
  2327  0311                     	;# 
  2328  0312                     	;# 
  2329  0313                     	;# 
  2330  0314                     	;# 
  2331  0314                     	;# 
  2332  0315                     	;# 
  2333  0316                     	;# 
  2334  0317                     	;# 
  2335  0318                     	;# 
  2336  0318                     	;# 
  2337  0319                     	;# 
  2338  031A                     	;# 
  2339  031B                     	;# 
  2340  031C                     	;# 
  2341  031C                     	;# 
  2342  031D                     	;# 
  2343  031E                     	;# 
  2344  031F                     	;# 
  2345  038C                     	;# 
  2346  038C                     	;# 
  2347  038D                     	;# 
  2348  038E                     	;# 
  2349  0390                     	;# 
  2350  0390                     	;# 
  2351  0391                     	;# 
  2352  0392                     	;# 
  2353  040C                     	;# 
  2354  040D                     	;# 
  2355  040E                     	;# 
  2356  040F                     	;# 
  2357  0410                     	;# 
  2358  0411                     	;# 
  2359  0416                     	;# 
  2360  0416                     	;# 
  2361  0417                     	;# 
  2362  0418                     	;# 
  2363  0418                     	;# 
  2364  0419                     	;# 
  2365  041A                     	;# 
  2366  041A                     	;# 
  2367  041B                     	;# 
  2368  041C                     	;# 
  2369  041C                     	;# 
  2370  041D                     	;# 
  2371  041E                     	;# 
  2372  041F                     	;# 
  2373  048C                     	;# 
  2374  048C                     	;# 
  2375  048D                     	;# 
  2376  048E                     	;# 
  2377  048F                     	;# 
  2378  048F                     	;# 
  2379  0490                     	;# 
  2380  0491                     	;# 
  2381  0492                     	;# 
  2382  0492                     	;# 
  2383  0493                     	;# 
  2384  0494                     	;# 
  2385  0495                     	;# 
  2386  0495                     	;# 
  2387  0496                     	;# 
  2388  0497                     	;# 
  2389  0498                     	;# 
  2390  0499                     	;# 
  2391  049A                     	;# 
  2392  049B                     	;# 
  2393  049C                     	;# 
  2394  049D                     	;# 
  2395  050C                     	;# 
  2396  050C                     	;# 
  2397  050D                     	;# 
  2398  050E                     	;# 
  2399  050F                     	;# 
  2400  050F                     	;# 
  2401  0510                     	;# 
  2402  0511                     	;# 
  2403  0512                     	;# 
  2404  0512                     	;# 
  2405  0513                     	;# 
  2406  0514                     	;# 
  2407  0515                     	;# 
  2408  0515                     	;# 
  2409  0516                     	;# 
  2410  0517                     	;# 
  2411  0518                     	;# 
  2412  0519                     	;# 
  2413  051A                     	;# 
  2414  051B                     	;# 
  2415  051C                     	;# 
  2416  051D                     	;# 
  2417  058C                     	;# 
  2418  058C                     	;# 
  2419  058D                     	;# 
  2420  058E                     	;# 
  2421  058F                     	;# 
  2422  058F                     	;# 
  2423  0590                     	;# 
  2424  0591                     	;# 
  2425  0592                     	;# 
  2426  0593                     	;# 
  2427  060C                     	;# 
  2428  060D                     	;# 
  2429  060E                     	;# 
  2430  060F                     	;# 
  2431  0610                     	;# 
  2432  0611                     	;# 
  2433  0612                     	;# 
  2434  0613                     	;# 
  2435  0614                     	;# 
  2436  0616                     	;# 
  2437  0617                     	;# 
  2438  0618                     	;# 
  2439  0619                     	;# 
  2440  061A                     	;# 
  2441  061B                     	;# 
  2442  061C                     	;# 
  2443  061D                     	;# 
  2444  061E                     	;# 
  2445  068C                     	;# 
  2446  068D                     	;# 
  2447  068E                     	;# 
  2448  068F                     	;# 
  2449  0690                     	;# 
  2450  0691                     	;# 
  2451  0692                     	;# 
  2452  0693                     	;# 
  2453  0694                     	;# 
  2454  070C                     	;# 
  2455  070D                     	;# 
  2456  070E                     	;# 
  2457  070F                     	;# 
  2458  0710                     	;# 
  2459  0711                     	;# 
  2460  0712                     	;# 
  2461  0713                     	;# 
  2462  0714                     	;# 
  2463  0716                     	;# 
  2464  0717                     	;# 
  2465  0718                     	;# 
  2466  0719                     	;# 
  2467  071A                     	;# 
  2468  071B                     	;# 
  2469  071C                     	;# 
  2470  071D                     	;# 
  2471  071E                     	;# 
  2472  0796                     	;# 
  2473  0797                     	;# 
  2474  0798                     	;# 
  2475  0799                     	;# 
  2476  079A                     	;# 
  2477  079B                     	;# 
  2478  080C                     	;# 
  2479  080D                     	;# 
  2480  080E                     	;# 
  2481  080F                     	;# 
  2482  0810                     	;# 
  2483  0811                     	;# 
  2484  0812                     	;# 
  2485  0813                     	;# 
  2486  0814                     	;# 
  2487  081A                     	;# 
  2488  081B                     	;# 
  2489  081C                     	;# 
  2490  081D                     	;# 
  2491  081E                     	;# 
  2492  081F                     	;# 
  2493  088C                     	;# 
  2494  088D                     	;# 
  2495  088E                     	;# 
  2496  088F                     	;# 
  2497  0890                     	;# 
  2498  0891                     	;# 
  2499  0892                     	;# 
  2500  0893                     	;# 
  2501  0895                     	;# 
  2502  0896                     	;# 
  2503  0897                     	;# 
  2504  0898                     	;# 
  2505  0899                     	;# 
  2506  089A                     	;# 
  2507  089B                     	;# 
  2508  090C                     	;# 
  2509  090E                     	;# 
  2510  090F                     	;# 
  2511  091F                     	;# 
  2512  091F                     	;# 
  2513  098F                     	;# 
  2514  098F                     	;# 
  2515  0990                     	;# 
  2516  0991                     	;# 
  2517  0992                     	;# 
  2518  0993                     	;# 
  2519  0994                     	;# 
  2520  0995                     	;# 
  2521  0996                     	;# 
  2522  0997                     	;# 
  2523  0E0F                     	;# 
  2524  0E10                     	;# 
  2525  0E11                     	;# 
  2526  0E12                     	;# 
  2527  0E13                     	;# 
  2528  0E14                     	;# 
  2529  0E15                     	;# 
  2530  0E16                     	;# 
  2531  0E17                     	;# 
  2532  0E18                     	;# 
  2533  0E19                     	;# 
  2534  0E1A                     	;# 
  2535  0E1B                     	;# 
  2536  0E1C                     	;# 
  2537  0E1D                     	;# 
  2538  0E1E                     	;# 
  2539  0E1F                     	;# 
  2540  0E20                     	;# 
  2541  0E21                     	;# 
  2542  0E22                     	;# 
  2543  0E23                     	;# 
  2544  0E24                     	;# 
  2545  0E25                     	;# 
  2546  0E26                     	;# 
  2547  0E27                     	;# 
  2548  0E28                     	;# 
  2549  0E29                     	;# 
  2550  0E2A                     	;# 
  2551  0E2B                     	;# 
  2552  0E2C                     	;# 
  2553  0E2D                     	;# 
  2554  0E2E                     	;# 
  2555  0E2F                     	;# 
  2556  0E30                     	;# 
  2557  0E31                     	;# 
  2558  0E32                     	;# 
  2559  0E33                     	;# 
  2560  0E34                     	;# 
  2561  0E35                     	;# 
  2562  0E36                     	;# 
  2563  0E37                     	;# 
  2564  0E8F                     	;# 
  2565  0E90                     	;# 
  2566  0E91                     	;# 
  2567  0E92                     	;# 
  2568  0E93                     	;# 
  2569  0E94                     	;# 
  2570  0E95                     	;# 
  2571  0E96                     	;# 
  2572  0E97                     	;# 
  2573  0E9C                     	;# 
  2574  0E9D                     	;# 
  2575  0E9E                     	;# 
  2576  0EA1                     	;# 
  2577  0EA2                     	;# 
  2578  0EA3                     	;# 
  2579  0EA4                     	;# 
  2580  0EA5                     	;# 
  2581  0EA9                     	;# 
  2582  0EAA                     	;# 
  2583  0EAB                     	;# 
  2584  0EAC                     	;# 
  2585  0EB1                     	;# 
  2586  0EB2                     	;# 
  2587  0EB3                     	;# 
  2588  0EB8                     	;# 
  2589  0EB9                     	;# 
  2590  0EBA                     	;# 
  2591  0EBB                     	;# 
  2592  0EBC                     	;# 
  2593  0EBD                     	;# 
  2594  0EBE                     	;# 
  2595  0EC3                     	;# 
  2596  0EC5                     	;# 
  2597  0EC6                     	;# 
  2598  0EC7                     	;# 
  2599  0EC8                     	;# 
  2600  0EC9                     	;# 
  2601  0ECA                     	;# 
  2602  0ECB                     	;# 
  2603  0ECC                     	;# 
  2604  0F10                     	;# 
  2605  0F11                     	;# 
  2606  0F12                     	;# 
  2607  0F13                     	;# 
  2608  0F14                     	;# 
  2609  0F15                     	;# 
  2610  0F16                     	;# 
  2611  0F17                     	;# 
  2612  0F18                     	;# 
  2613  0F19                     	;# 
  2614  0F1A                     	;# 
  2615  0F1B                     	;# 
  2616  0F1C                     	;# 
  2617  0F1D                     	;# 
  2618  0F1E                     	;# 
  2619  0F1F                     	;# 
  2620  0F20                     	;# 
  2621  0F21                     	;# 
  2622  0F22                     	;# 
  2623  0F23                     	;# 
  2624  0F24                     	;# 
  2625  0F25                     	;# 
  2626  0F26                     	;# 
  2627  0F27                     	;# 
  2628  0F38                     	;# 
  2629  0F39                     	;# 
  2630  0F3A                     	;# 
  2631  0F3B                     	;# 
  2632  0F3C                     	;# 
  2633  0F3D                     	;# 
  2634  0F3E                     	;# 
  2635  0F3F                     	;# 
  2636  0F40                     	;# 
  2637  0F41                     	;# 
  2638  0F43                     	;# 
  2639  0F44                     	;# 
  2640  0F45                     	;# 
  2641  0F46                     	;# 
  2642  0F47                     	;# 
  2643  0F48                     	;# 
  2644  0F49                     	;# 
  2645  0F4A                     	;# 
  2646  0F4B                     	;# 
  2647  0F4C                     	;# 
  2648  0F4E                     	;# 
  2649  0F4F                     	;# 
  2650  0F50                     	;# 
  2651  0F51                     	;# 
  2652  0F52                     	;# 
  2653  0F53                     	;# 
  2654  0F54                     	;# 
  2655  0F55                     	;# 
  2656  0F56                     	;# 
  2657  0F57                     	;# 
  2658  0F65                     	;# 
  2659  0F68                     	;# 
  2660  0F69                     	;# 
  2661  0F6A                     	;# 
  2662  0F6B                     	;# 
  2663  0FE4                     	;# 
  2664  0FE5                     	;# 
  2665  0FE6                     	;# 
  2666  0FE7                     	;# 
  2667  0FE8                     	;# 
  2668  0FE9                     	;# 
  2669  0FEA                     	;# 
  2670  0FEB                     	;# 
  2671  0FED                     	;# 
  2672  0FEE                     	;# 
  2673  0FEF                     	;_Set
  2674                           
  2675                           	psect	idataBANK0
  2676  0E90                     __pidataBANK0:	
  2677                           
  2678                           ;initializer for _Lock
  2679  0E90  3400               	retlw	0
  2680  0E91  3400               	retlw	0
  2681  0E92  3400               	retlw	0
  2682  0E93  3401               	retlw	1
  2683  0E94  3401               	retlw	1
  2684  0E95  3401               	retlw	1
  2685  0E96  3400               	retlw	0
  2686  0E97  3400               	retlw	0
  2687  0E98  3400               	retlw	0
  2688  0E99  3401               	retlw	1
  2689  0E9A  3401               	retlw	1
  2690  0E9B  3401               	retlw	1
  2691  0E9C  3400               	retlw	0
  2692  0E9D  3401               	retlw	1
  2693  0E9E  3400               	retlw	0
  2694  0E9F  3400               	retlw	0
  2695  0EA0  3400               	retlw	0
  2696  0EA1  3401               	retlw	1
  2697  0EA2  3401               	retlw	1
  2698  0EA3  3400               	retlw	0
  2699  0EA4  3401               	retlw	1
  2700  0EA5  3401               	retlw	1
  2701  0EA6  3400               	retlw	0
  2702  0EA7  3401               	retlw	1
  2703  0EA8  3400               	retlw	0
  2704  0EA9  3401               	retlw	1
  2705  0EAA  3401               	retlw	1
  2706  0EAB  3401               	retlw	1
  2707                           
  2708                           	psect	idataBANK1
  2709  0F2E                     __pidataBANK1:	
  2710                           
  2711                           ;initializer for _Deny
  2712  0F2E  3400               	retlw	0
  2713  0F2F  3401               	retlw	1
  2714  0F30  3401               	retlw	1
  2715  0F31  3401               	retlw	1
  2716  0F32  3401               	retlw	1
  2717  0F33  3400               	retlw	0
  2718  0F34  3401               	retlw	1
  2719  0F35  3401               	retlw	1
  2720  0F36  3400               	retlw	0
  2721  0F37  3400               	retlw	0
  2722  0F38  3401               	retlw	1
  2723  0F39  3401               	retlw	1
  2724  0F3A  3401               	retlw	1
  2725  0F3B  3401               	retlw	1
  2726  0F3C  3400               	retlw	0
  2727  0F3D  3400               	retlw	0
  2728  0F3E  3401               	retlw	1
  2729  0F3F  3400               	retlw	0
  2730  0F40  3401               	retlw	1
  2731  0F41  3400               	retlw	0
  2732  0F42  3401               	retlw	1
  2733  0F43  3400               	retlw	0
  2734  0F44  3401               	retlw	1
  2735  0F45  3401               	retlw	1
  2736  0F46  3401               	retlw	1
  2737  0F47  3400               	retlw	0
  2738  0F48  3401               	retlw	1
  2739  0F49  3401               	retlw	1
  2740                           
  2741                           ;initializer for _Open
  2742  0F4A  3400               	retlw	0
  2743  0F4B  3400               	retlw	0
  2744  0F4C  3401               	retlw	1
  2745  0F4D  3401               	retlw	1
  2746  0F4E  3401               	retlw	1
  2747  0F4F  3400               	retlw	0
  2748  0F50  3401               	retlw	1
  2749  0F51  3401               	retlw	1
  2750  0F52  3401               	retlw	1
  2751  0F53  3400               	retlw	0
  2752  0F54  3400               	retlw	0
  2753  0F55  3401               	retlw	1
  2754  0F56  3401               	retlw	1
  2755  0F57  3401               	retlw	1
  2756  0F58  3401               	retlw	1
  2757  0F59  3400               	retlw	0
  2758  0F5A  3400               	retlw	0
  2759  0F5B  3401               	retlw	1
  2760  0F5C  3401               	retlw	1
  2761  0F5D  3401               	retlw	1
  2762  0F5E  3401               	retlw	1
  2763  0F5F  3400               	retlw	0
  2764  0F60  3400               	retlw	0
  2765  0F61  3401               	retlw	1
  2766  0F62  3400               	retlw	0
  2767  0F63  3401               	retlw	1
  2768  0F64  3400               	retlw	0
  2769  0F65  3401               	retlw	1
  2770                           
  2771                           	psect	idataBANK2
  2772  0009                     __pidataBANK2:	
  2773                           
  2774                           ;initializer for _matrix
  2775  0009  3400               	retlw	0
  2776  000A  3400               	retlw	0
  2777  000B  3400               	retlw	0
  2778  000C  3400               	retlw	0
  2779  000D  3400               	retlw	0
  2780  000E  3400               	retlw	0
  2781  000F  3401               	retlw	1
  2782  0010  3401               	retlw	1
  2783  0011  3400               	retlw	0
  2784  0012  3400               	retlw	0
  2785  0013  3401               	retlw	1
  2786  0014  3401               	retlw	1
  2787  0015  3401               	retlw	1
  2788  0016  3401               	retlw	1
  2789  0017  3400               	retlw	0
  2790  0018  3400               	retlw	0
  2791  0019  3401               	retlw	1
  2792  001A  3400               	retlw	0
  2793  001B  3400               	retlw	0
  2794  001C  3401               	retlw	1
  2795  001D  3400               	retlw	0
  2796  001E  3400               	retlw	0
  2797  001F  3400               	retlw	0
  2798  0020  3400               	retlw	0
  2799  0021  3400               	retlw	0
  2800  0022  3401               	retlw	1
  2801  0023  3401               	retlw	1
  2802  0024  3400               	retlw	0
  2803  0025  3401               	retlw	1
  2804  0026  3400               	retlw	0
  2805  0027  3400               	retlw	0
  2806  0028  3401               	retlw	1
  2807  0029  3401               	retlw	1
  2808  002A  3400               	retlw	0
  2809  002B  3400               	retlw	0
  2810  002C  3400               	retlw	0
  2811  002D  3401               	retlw	1
  2812  002E  3400               	retlw	0
  2813  002F  3400               	retlw	0
  2814  0030  3401               	retlw	1
  2815  0031  3400               	retlw	0
  2816  0032  3400               	retlw	0
  2817  0033  3400               	retlw	0
  2818  0034  3401               	retlw	1
  2819  0035  3400               	retlw	0
  2820  0036  3400               	retlw	0
  2821  0037  3400               	retlw	0
  2822  0038  3400               	retlw	0
  2823  0039  3400               	retlw	0
  2824  003A  3400               	retlw	0
  2825  003B  3400               	retlw	0
  2826  003C  3400               	retlw	0
  2827  003D  3401               	retlw	1
  2828  003E  3401               	retlw	1
  2829  003F  3401               	retlw	1
  2830  0040  3401               	retlw	1
  2831  0041  3400               	retlw	0
  2832  0042  3400               	retlw	0
  2833  0043  3400               	retlw	0
  2834  0044  3400               	retlw	0
  2835  0045  3400               	retlw	0
  2836  0046  3400               	retlw	0
  2837  0047  3400               	retlw	0
  2838  0048  3400               	retlw	0
  2839  0049  3400               	retlw	0
  2840  004A  3400               	retlw	0
  2841  004B  3400               	retlw	0
  2842  004C  3401               	retlw	1
  2843  004D  3400               	retlw	0
  2844  004E  3400               	retlw	0
  2845                           
  2846                           	psect	idataBIGRAM
  2847  05E5                     __pidataBIGRAM:	
  2848                           
  2849                           ;initializer for _Set
  2850  05E5  3400               	retlw	0
  2851  05E6  3400               	retlw	0
  2852  05E7  3400               	retlw	0
  2853  05E8  3400               	retlw	0
  2854  05E9  3400               	retlw	0
  2855  05EA  3400               	retlw	0
  2856  05EB  3400               	retlw	0
  2857  05EC  3400               	retlw	0
  2858  05ED  3400               	retlw	0
  2859  05EE  3400               	retlw	0
  2860  05EF  3400               	retlw	0
  2861  05F0  3400               	retlw	0
  2862  05F1  3400               	retlw	0
  2863  05F2  3400               	retlw	0
  2864  05F3  3400               	retlw	0
  2865  05F4  3400               	retlw	0
  2866  05F5  3400               	retlw	0
  2867  05F6  3400               	retlw	0
  2868  05F7  3400               	retlw	0
  2869  05F8  3400               	retlw	0
  2870  05F9  3400               	retlw	0
  2871  05FA  3400               	retlw	0
  2872  05FB  3400               	retlw	0
  2873  05FC  3400               	retlw	0
  2874  05FD  3401               	retlw	1
  2875  05FE  3401               	retlw	1
  2876  05FF  3400               	retlw	0
  2877  0600  3401               	retlw	1
  2878  0601  3400               	retlw	0
  2879  0602  3400               	retlw	0
  2880  0603  3401               	retlw	1
  2881  0604  3401               	retlw	1
  2882  0605  3401               	retlw	1
  2883  0606  3400               	retlw	0
  2884  0607  3401               	retlw	1
  2885  0608  3401               	retlw	1
  2886  0609  3401               	retlw	1
  2887  060A  3400               	retlw	0
  2888  060B  3401               	retlw	1
  2889  060C  3400               	retlw	0
  2890  060D  3401               	retlw	1
  2891  060E  3400               	retlw	0
  2892  060F  3400               	retlw	0
  2893  0610  3400               	retlw	0
  2894  0611  3401               	retlw	1
  2895  0612  3401               	retlw	1
  2896  0613  3401               	retlw	1
  2897  0614  3401               	retlw	1
  2898  0615  3401               	retlw	1
  2899  0616  3400               	retlw	0
  2900  0617  3400               	retlw	0
  2901  0618  3401               	retlw	1
  2902  0619  3401               	retlw	1
  2903  061A  3401               	retlw	1
  2904  061B  3400               	retlw	0
  2905  061C  3401               	retlw	1
  2906  061D  3400               	retlw	0
  2907  061E  3400               	retlw	0
  2908  061F  3400               	retlw	0
  2909  0620  3400               	retlw	0
  2910  0621  3400               	retlw	0
  2911  0622  3400               	retlw	0
  2912  0623  3400               	retlw	0
  2913  0624  3401               	retlw	1
  2914  0625  3400               	retlw	0
  2915  0626  3401               	retlw	1
  2916  0627  3401               	retlw	1
  2917  0628  3400               	retlw	0
  2918  0629  3401               	retlw	1
  2919  062A  3401               	retlw	1
  2920  062B  3401               	retlw	1
  2921  062C  3400               	retlw	0
  2922  062D  3400               	retlw	0
  2923  062E  3401               	retlw	1
  2924  062F  3401               	retlw	1
  2925  0630  3401               	retlw	1
  2926  0631  3401               	retlw	1
  2927  0632  3400               	retlw	0
  2928  0633  3400               	retlw	0
  2929  0634  3400               	retlw	0
  2930  0635  3401               	retlw	1
  2931  0636  3401               	retlw	1
  2932  0637  3401               	retlw	1
  2933  0638  3401               	retlw	1
  2934  0639  3400               	retlw	0
  2935  063A  3400               	retlw	0
  2936  063B  3400               	retlw	0
  2937  063C  3400               	retlw	0
  2938  063D  3400               	retlw	0
  2939  063E  3400               	retlw	0
  2940  063F  3400               	retlw	0
  2941  0640  3400               	retlw	0
  2942  0641  3400               	retlw	0
  2943  0642  3400               	retlw	0
  2944  0643  3400               	retlw	0
  2945  0644  3400               	retlw	0
  2946  0645  3400               	retlw	0
  2947  0646  3400               	retlw	0
  2948  0647  3400               	retlw	0
  2949  0648  3400               	retlw	0
  2950  0649  3400               	retlw	0
  2951  064A  3400               	retlw	0
  2952  064B  3400               	retlw	0
  2953  064C  3400               	retlw	0
  2954  064D  3400               	retlw	0
  2955                           
  2956                           ;initializer for _New
  2957  064E  3400               	retlw	0
  2958  064F  3400               	retlw	0
  2959  0650  3400               	retlw	0
  2960  0651  3400               	retlw	0
  2961  0652  3400               	retlw	0
  2962  0653  3400               	retlw	0
  2963  0654  3400               	retlw	0
  2964  0655  3400               	retlw	0
  2965  0656  3400               	retlw	0
  2966  0657  3400               	retlw	0
  2967  0658  3400               	retlw	0
  2968  0659  3400               	retlw	0
  2969  065A  3400               	retlw	0
  2970  065B  3400               	retlw	0
  2971  065C  3400               	retlw	0
  2972  065D  3400               	retlw	0
  2973  065E  3400               	retlw	0
  2974  065F  3400               	retlw	0
  2975  0660  3400               	retlw	0
  2976  0661  3400               	retlw	0
  2977  0662  3400               	retlw	0
  2978  0663  3400               	retlw	0
  2979  0664  3400               	retlw	0
  2980  0665  3401               	retlw	1
  2981  0666  3400               	retlw	0
  2982  0667  3401               	retlw	1
  2983  0668  3400               	retlw	0
  2984  0669  3401               	retlw	1
  2985  066A  3401               	retlw	1
  2986  066B  3400               	retlw	0
  2987  066C  3400               	retlw	0
  2988  066D  3401               	retlw	1
  2989  066E  3401               	retlw	1
  2990  066F  3401               	retlw	1
  2991  0670  3401               	retlw	1
  2992  0671  3400               	retlw	0
  2993  0672  3401               	retlw	1
  2994  0673  3401               	retlw	1
  2995  0674  3401               	retlw	1
  2996  0675  3401               	retlw	1
  2997  0676  3401               	retlw	1
  2998  0677  3401               	retlw	1
  2999  0678  3400               	retlw	0
  3000  0679  3400               	retlw	0
  3001  067A  3400               	retlw	0
  3002  067B  3400               	retlw	0
  3003  067C  3400               	retlw	0
  3004  067D  3400               	retlw	0
  3005  067E  3400               	retlw	0
  3006  067F  3400               	retlw	0
  3007  0680  3400               	retlw	0
  3008  0681  3400               	retlw	0
  3009  0682  3401               	retlw	1
  3010  0683  3401               	retlw	1
  3011  0684  3400               	retlw	0
  3012  0685  3401               	retlw	1
  3013  0686  3400               	retlw	0
  3014  0687  3400               	retlw	0
  3015  0688  3401               	retlw	1
  3016  0689  3401               	retlw	1
  3017  068A  3401               	retlw	1
  3018  068B  3400               	retlw	0
  3019  068C  3401               	retlw	1
  3020  068D  3401               	retlw	1
  3021  068E  3401               	retlw	1
  3022  068F  3400               	retlw	0
  3023  0690  3401               	retlw	1
  3024  0691  3400               	retlw	0
  3025  0692  3401               	retlw	1
  3026  0693  3400               	retlw	0
  3027  0694  3400               	retlw	0
  3028  0695  3400               	retlw	0
  3029  0696  3401               	retlw	1
  3030  0697  3401               	retlw	1
  3031  0698  3401               	retlw	1
  3032  0699  3401               	retlw	1
  3033  069A  3401               	retlw	1
  3034  069B  3400               	retlw	0
  3035  069C  3400               	retlw	0
  3036  069D  3401               	retlw	1
  3037  069E  3401               	retlw	1
  3038  069F  3401               	retlw	1
  3039  06A0  3400               	retlw	0
  3040  06A1  3401               	retlw	1
  3041  06A2  3400               	retlw	0
  3042  06A3  3400               	retlw	0
  3043  06A4  3400               	retlw	0
  3044  06A5  3400               	retlw	0
  3045  06A6  3400               	retlw	0
  3046  06A7  3400               	retlw	0
  3047  06A8  3400               	retlw	0
  3048  06A9  3400               	retlw	0
  3049  06AA  3400               	retlw	0
  3050  06AB  3400               	retlw	0
  3051  06AC  3400               	retlw	0
  3052  06AD  3400               	retlw	0
  3053  06AE  3400               	retlw	0
  3054  06AF  3400               	retlw	0
  3055  06B0  3400               	retlw	0
  3056  06B1  3400               	retlw	0
  3057  06B2  3400               	retlw	0
  3058  06B3  3400               	retlw	0
  3059  06B4  3400               	retlw	0
  3060  06B5  3400               	retlw	0
  3061  06B6  3400               	retlw	0
  3062  0016                     _LATAbits	set	22
  3063  000C                     _PORTAbits	set	12
  3064  0017                     _LATBbits	set	23
  3065  0018                     _LATCbits	set	24
  3066  0013                     _TRISC	set	19
  3067  0012                     _TRISB	set	18
  3068  0011                     _TRISA	set	17
  3069  0018                     _LATC	set	24
  3070  0017                     _LATB	set	23
  3071  0016                     _LATA	set	22
  3072  0094                     _ADCON1bits	set	148
  3073  008E                     _ADPREVL	set	142
  3074  008F                     _ADPREVH	set	143
  3075  0097                     _ADSTATbits	set	151
  3076  0090                     _ADACCL	set	144
  3077  0091                     _ADACCH	set	145
  3078  0095                     _ADCON2bits	set	149
  3079  009C                     _ADPRE	set	156
  3080  0096                     _ADCON3bits	set	150
  3081  008C                     _ADRESL	set	140
  3082  008D                     _ADRESH	set	141
  3083  0093                     _ADCON0bits	set	147
  3084  009D                     _ADACQ	set	157
  3085  0093                     _ADCON0	set	147
  3086  0098                     _ADCLK	set	152
  3087  0099                     _ADACT	set	153
  3088  009A                     _ADREF	set	154
  3089  0097                     _ADSTAT	set	151
  3090  0096                     _ADCON3	set	150
  3091  0095                     _ADCON2	set	149
  3092  0094                     _ADCON1	set	148
  3093  009B                     _ADCAP	set	155
  3094  009E                     _ADPCH	set	158
  3095  0116                     _ADERRL	set	278
  3096  0117                     _ADERRH	set	279
  3097  0114                     _ADFLTRL	set	276
  3098  0115                     _ADFLTRH	set	277
  3099  010C                     _ADCNT	set	268
  3100  010D                     _ADRPT	set	269
  3101  0113                     _ADSTPTH	set	275
  3102  0112                     _ADSTPTL	set	274
  3103  0111                     _ADUTHH	set	273
  3104  0110                     _ADUTHL	set	272
  3105  010F                     _ADLTHH	set	271
  3106  010E                     _ADLTHL	set	270
  3107  079B                     _PMD5	set	1947
  3108  079A                     _PMD4	set	1946
  3109  0799                     _PMD3	set	1945
  3110  0798                     _PMD2	set	1944
  3111  0797                     _PMD1	set	1943
  3112  0796                     _PMD0	set	1942
  3113  0892                     _OSCTUNE	set	2194
  3114  0893                     _OSCFRQ	set	2195
  3115  0891                     _OSCEN	set	2193
  3116  088F                     _OSCCON3	set	2191
  3117  088D                     _OSCCON1	set	2189
  3118  0F51                     _SLRCONC	set	3921
  3119  0F46                     _SLRCONB	set	3910
  3120  0F3B                     _SLRCONA	set	3899
  3121  0F50                     _ODCONC	set	3920
  3122  0F45                     _ODCONB	set	3909
  3123  0F3A                     _ODCONA	set	3898
  3124  0F4F                     _WPUC	set	3919
  3125  0F39                     _WPUA	set	3897
  3126  0F44                     _WPUB	set	3908
  3127  0F65                     _WPUE	set	3941
  3128  0F38                     _ANSELA	set	3896
  3129  0F43                     _ANSELB	set	3907
  3130  0F4E                     _ANSELC	set	3918
  3131                           
  3132                           ; #config settings
  3133  0000                     
  3134                           	psect	cinit
  3135  07C6                     start_initialization:	
  3136  07C6                     __initialization:		;BIGRAM
  3137                           
  3138                           ; Initialize objects allocated to BIGRAM
  3139  07C6  30E5               	movlw	low __pidataBIGRAM
  3140  07C7  0084               	movwf	4
  3141  07C8  3085               	movlw	(high __pidataBIGRAM)| (0+128)
  3142  07C9  0085               	movwf	5
  3143  07CA  301E               	movlw	low (0+8990)
  3144  07CB  0086               	movwf	6
  3145  07CC  3023               	movlw	high (0+8990)
  3146  07CD  0087               	movwf	7
  3147  07CE  3000               	movlw	0
  3148  07CF  00FF               	movwf	btemp+1
  3149  07D0  30D2               	movlw	210
  3150  07D1  318E  2632  3187   	fcall	init_ram
  3151                           
  3152                           ; Initialize objects allocated to BANK0
  3153  07D4  3090               	movlw	low __pidataBANK0
  3154  07D5  0084               	movwf	4
  3155  07D6  308E               	movlw	(high __pidataBANK0)| (0+128)
  3156  07D7  0085               	movwf	5
  3157  07D8  3051               	movlw	low __pdataBANK0
  3158  07D9  0086               	movwf	6
  3159  07DA  3000               	movlw	high __pdataBANK0
  3160  07DB  0087               	movwf	7
  3161  07DC  3000               	movlw	0
  3162  07DD  00FF               	movwf	btemp+1
  3163  07DE  301C               	movlw	28
  3164  07DF  318E  2632  3187   	fcall	init_ram
  3165                           
  3166                           ; Initialize objects allocated to BANK1
  3167  07E2  302E               	movlw	low __pidataBANK1
  3168  07E3  0084               	movwf	4
  3169  07E4  308F               	movlw	(high __pidataBANK1)| (0+128)
  3170  07E5  0085               	movwf	5
  3171  07E6  30A0               	movlw	low __pdataBANK1
  3172  07E7  0086               	movwf	6
  3173  07E8  3000               	movlw	high __pdataBANK1
  3174  07E9  0087               	movwf	7
  3175  07EA  3000               	movlw	0
  3176  07EB  00FF               	movwf	btemp+1
  3177  07EC  3038               	movlw	56
  3178  07ED  318E  2632  3187   	fcall	init_ram
  3179                           
  3180                           ; Initialize objects allocated to BANK2
  3181  07F0  3009               	movlw	low __pidataBANK2
  3182  07F1  0084               	movwf	4
  3183  07F2  3080               	movlw	(high __pidataBANK2)| (0+128)
  3184  07F3  0085               	movwf	5
  3185  07F4  3020               	movlw	low __pdataBANK2
  3186  07F5  0086               	movwf	6
  3187  07F6  3001               	movlw	high __pdataBANK2
  3188  07F7  0087               	movwf	7
  3189  07F8  3000               	movlw	0
  3190  07F9  00FF               	movwf	btemp+1
  3191  07FA  3046               	movlw	70
  3192  07FB  318E  2632         	fcall	init_ram
  3193  07FD                     end_of_initialization:	
  3194                           ;End of C runtime variable initialization code
  3195                           
  3196  07FD                     __end_of__initialization:	
  3197  07FD  0020               	movlb	0
  3198  07FE  3186  2EB7         	ljmp	_main	;jump to C main() function
  3199                           
  3200                           	psect	dataBANK0
  3201  0051                     __pdataBANK0:	
  3202  0051                     _Lock:	
  3203  0051                     	ds	28
  3204                           
  3205                           	psect	dataBANK1
  3206  00A0                     __pdataBANK1:	
  3207  00A0                     _Deny:	
  3208  00A0                     	ds	28
  3209  00BC                     _Open:	
  3210  00BC                     	ds	28
  3211                           
  3212                           	psect	dataBANK2
  3213  0120                     __pdataBANK2:	
  3214  0120                     _matrix:	
  3215  0120                     	ds	70
  3216                           
  3217                           	psect	inittext
  3218  0E32                     init_ram:	
  3219  0E32  00FE               	movwf	126
  3220  0E33                     initloop:	
  3221  0E33  0012               	moviw fsr0++
  3222  0E34  001E               	movwi fsr1++
  3223  0E35  3001               	movlw	1
  3224  0E36  02FE               	subwf	126,f
  3225  0E37  3000               	movlw	0
  3226  0E38  3BFF               	subwfb	127,f
  3227  0E39  087F               	movf	127,w
  3228  0E3A  047E               	iorwf	126,w
  3229  0E3B  1903               	btfsc	3,2
  3230  0E3C  3400               	retlw	0
  3231  0E3D  2E33               	goto	initloop
  3232                           
  3233                           	psect	cstackCOMMON
  3234  0070                     __pcstackCOMMON:	
  3235  0070                     ?_PMD_Initialize:	
  3236  0070                     ??_PMD_Initialize:	
  3237                           ; 1 bytes @ 0x0
  3238                           
  3239  0070                     ?_PIN_MANAGER_Initialize:	
  3240                           ; 1 bytes @ 0x0
  3241                           
  3242  0070                     ??_PIN_MANAGER_Initialize:	
  3243                           ; 1 bytes @ 0x0
  3244                           
  3245  0070                     ?_OSCILLATOR_Initialize:	
  3246                           ; 1 bytes @ 0x0
  3247                           
  3248  0070                     ??_OSCILLATOR_Initialize:	
  3249                           ; 1 bytes @ 0x0
  3250                           
  3251  0070                     ?_DisplayOpen:	
  3252                           ; 1 bytes @ 0x0
  3253                           
  3254  0070                     ?_Scrollnew:	
  3255                           ; 1 bytes @ 0x0
  3256                           
  3257  0070                     ?_Reset:	
  3258                           ; 1 bytes @ 0x0
  3259                           
  3260  0070                     ??_Reset:	
  3261                           ; 1 bytes @ 0x0
  3262                           
  3263  0070                     ?_DisplayLock:	
  3264                           ; 1 bytes @ 0x0
  3265                           
  3266  0070                     ?_DisplayDeny:	
  3267                           ; 1 bytes @ 0x0
  3268                           
  3269  0070                     ?_ScrollSet:	
  3270                           ; 1 bytes @ 0x0
  3271                           
  3272  0070                     ?_ADCC_Initialize:	
  3273                           ; 1 bytes @ 0x0
  3274                           
  3275  0070                     ??_ADCC_Initialize:	
  3276                           ; 1 bytes @ 0x0
  3277                           
  3278  0070                     ?_SYSTEM_Initialize:	
  3279                           ; 1 bytes @ 0x0
  3280                           
  3281  0070                     ??_SYSTEM_Initialize:	
  3282                           ; 1 bytes @ 0x0
  3283                           
  3284  0070                     ?_main:	
  3285                           ; 1 bytes @ 0x0
  3286                           
  3287  0070                     ?_OpenShow:	
  3288                           ; 1 bytes @ 0x0
  3289                           
  3290  0070                     ?_LockShow:	
  3291                           ; 1 bytes @ 0x0
  3292                           
  3293  0070                     ?_DenyShow:	
  3294                           ; 1 bytes @ 0x0
  3295                           
  3296  0070                     ?_NewShow:	
  3297                           ; 1 bytes @ 0x0
  3298                           
  3299  0070                     ?_digitShow:	
  3300                           ; 1 bytes @ 0x0
  3301                           
  3302  0070                     ?_SetShow:	
  3303                           ; 1 bytes @ 0x0
  3304                           
  3305  0070                     ?___bmul:	
  3306                           ; 1 bytes @ 0x0
  3307                           
  3308  0070                     ?_ADCC_GetSingleConversion:	
  3309                           ; 1 bytes @ 0x0
  3310                           
  3311  0070                     ?___wmul:	
  3312                           ; 2 bytes @ 0x0
  3313                           
  3314  0070                     ___bmul@multiplicand:	
  3315                           ; 2 bytes @ 0x0
  3316                           
  3317  0070                     ___wmul@multiplier:	
  3318                           ; 1 bytes @ 0x0
  3319                           
  3320                           
  3321                           ; 2 bytes @ 0x0
  3322  0070                     	ds	1
  3323  0071                     ??___bmul:	
  3324                           
  3325                           ; 1 bytes @ 0x1
  3326  0071                     	ds	1
  3327  0072                     ___bmul@product:	
  3328  0072                     ___wmul@multiplicand:	
  3329                           ; 1 bytes @ 0x2
  3330                           
  3331                           
  3332                           ; 2 bytes @ 0x2
  3333  0072                     	ds	1
  3334  0073                     ??_ADCC_GetSingleConversion:	
  3335  0073                     ADCC_GetSingleConversion@channel:	
  3336                           ; 1 bytes @ 0x3
  3337                           
  3338  0073                     ___bmul@multiplier:	
  3339                           ; 1 bytes @ 0x3
  3340                           
  3341                           
  3342                           ; 1 bytes @ 0x3
  3343  0073                     	ds	1
  3344  0074                     ??_OpenShow:	
  3345  0074                     ??_LockShow:	
  3346                           ; 1 bytes @ 0x4
  3347                           
  3348  0074                     ??_DenyShow:	
  3349                           ; 1 bytes @ 0x4
  3350                           
  3351  0074                     ??_digitShow:	
  3352                           ; 1 bytes @ 0x4
  3353                           
  3354  0074                     ??___wmul:	
  3355                           ; 1 bytes @ 0x4
  3356                           
  3357  0074                     ?___lwdiv:	
  3358                           ; 1 bytes @ 0x4
  3359                           
  3360  0074                     ?___lwmod:	
  3361                           ; 2 bytes @ 0x4
  3362                           
  3363  0074                     ___wmul@product:	
  3364                           ; 2 bytes @ 0x4
  3365                           
  3366  0074                     ___lwdiv@divisor:	
  3367                           ; 2 bytes @ 0x4
  3368                           
  3369  0074                     ___lwmod@divisor:	
  3370                           ; 2 bytes @ 0x4
  3371                           
  3372                           
  3373                           ; 2 bytes @ 0x4
  3374  0074                     	ds	2
  3375  0076                     ??_NewShow:	
  3376  0076                     ??_SetShow:	
  3377                           ; 1 bytes @ 0x6
  3378                           
  3379  0076                     OpenShow@value:	
  3380                           ; 1 bytes @ 0x6
  3381                           
  3382  0076                     LockShow@value:	
  3383                           ; 1 bytes @ 0x6
  3384                           
  3385  0076                     DenyShow@value:	
  3386                           ; 1 bytes @ 0x6
  3387                           
  3388  0076                     digitShow@value:	
  3389                           ; 1 bytes @ 0x6
  3390                           
  3391  0076                     ___lwdiv@dividend:	
  3392                           ; 1 bytes @ 0x6
  3393                           
  3394  0076                     ___lwmod@dividend:	
  3395                           ; 2 bytes @ 0x6
  3396                           
  3397                           
  3398                           ; 2 bytes @ 0x6
  3399  0076                     	ds	1
  3400  0077                     OpenShow@p:	
  3401  0077                     LockShow@p:	
  3402                           ; 1 bytes @ 0x7
  3403                           
  3404  0077                     DenyShow@p:	
  3405                           ; 1 bytes @ 0x7
  3406                           
  3407  0077                     digitShow@p:	
  3408                           ; 1 bytes @ 0x7
  3409                           
  3410                           
  3411                           ; 1 bytes @ 0x7
  3412  0077                     	ds	1
  3413  0078                     ??_DisplayOpen:	
  3414  0078                     ??_DisplayLock:	
  3415                           ; 1 bytes @ 0x8
  3416                           
  3417  0078                     ??_DisplayDeny:	
  3418                           ; 1 bytes @ 0x8
  3419                           
  3420  0078                     ??___lwdiv:	
  3421                           ; 1 bytes @ 0x8
  3422                           
  3423  0078                     ??___lwmod:	
  3424                           ; 1 bytes @ 0x8
  3425                           
  3426                           
  3427                           ; 1 bytes @ 0x8
  3428  0078                     	ds	1
  3429  0079                     ___lwmod@counter:	
  3430  0079                     DisplayLock@count:	
  3431                           ; 1 bytes @ 0x9
  3432                           
  3433  0079                     DisplayDeny@count:	
  3434                           ; 2 bytes @ 0x9
  3435                           
  3436  0079                     ___lwdiv@quotient:	
  3437                           ; 2 bytes @ 0x9
  3438                           
  3439                           
  3440                           ; 2 bytes @ 0x9
  3441  0079                     	ds	1
  3442  007A                     NewShow@value:	
  3443  007A                     SetShow@value:	
  3444                           ; 1 bytes @ 0xA
  3445                           
  3446                           
  3447                           ; 1 bytes @ 0xA
  3448  007A                     	ds	1
  3449  007B                     ___lwdiv@counter:	
  3450  007B                     NewShow@p:	
  3451                           ; 1 bytes @ 0xB
  3452                           
  3453  007B                     SetShow@p:	
  3454                           ; 2 bytes @ 0xB
  3455                           
  3456                           
  3457                           ; 2 bytes @ 0xB
  3458  007B                     	ds	1
  3459  007C                     ??_RunningADCC:	
  3460                           
  3461                           ; 1 bytes @ 0xC
  3462  007C                     	ds	1
  3463  007D                     ??_Scrollnew:	
  3464  007D                     ??_ScrollSet:	
  3465                           ; 1 bytes @ 0xD
  3466                           
  3467  007D                     RunningADCC@digit:	
  3468                           ; 1 bytes @ 0xD
  3469                           
  3470                           
  3471                           ; 1 bytes @ 0xD
  3472  007D                     	ds	1
  3473                           
  3474                           	psect	cstackBANK0
  3475  0020                     __pcstackBANK0:	
  3476  0020                     ?_RunningADCC:	
  3477  0020                     RunningADCC@tens:	
  3478                           ; 1 bytes @ 0x0
  3479                           
  3480  0020                     Scrollnew@count:	
  3481                           ; 1 bytes @ 0x0
  3482                           
  3483  0020                     ScrollSet@count:	
  3484                           ; 2 bytes @ 0x0
  3485                           
  3486                           
  3487                           ; 2 bytes @ 0x0
  3488  0020                     	ds	1
  3489  0021                     RunningADCC@combo1:	
  3490                           
  3491                           ; 1 bytes @ 0x1
  3492  0021                     	ds	1
  3493  0022                     RunningADCC@combo2:	
  3494  0022                     Scrollnew@scrl_speed:	
  3495                           ; 1 bytes @ 0x2
  3496                           
  3497  0022                     ScrollSet@scrl_speed:	
  3498                           ; 2 bytes @ 0x2
  3499                           
  3500                           
  3501                           ; 2 bytes @ 0x2
  3502  0022                     	ds	1
  3503  0023                     RunningADCC@combo3:	
  3504                           
  3505                           ; 1 bytes @ 0x3
  3506  0023                     	ds	1
  3507  0024                     RunningADCC@combo4:	
  3508  0024                     Scrollnew@scrl_len:	
  3509                           ; 1 bytes @ 0x4
  3510                           
  3511  0024                     ScrollSet@scrl_len:	
  3512                           ; 2 bytes @ 0x4
  3513                           
  3514                           
  3515                           ; 2 bytes @ 0x4
  3516  0024                     	ds	1
  3517  0025                     RunningADCC@count:	
  3518                           
  3519                           ; 2 bytes @ 0x5
  3520  0025                     	ds	1
  3521  0026                     ?_RunningNew:	
  3522  0026                     RunningNew@tens:	
  3523                           ; 1 bytes @ 0x6
  3524                           
  3525                           
  3526                           ; 1 bytes @ 0x6
  3527  0026                     	ds	1
  3528  0027                     RunningNew@num1:	
  3529  0027                     RunningADCC@value:	
  3530                           ; 1 bytes @ 0x7
  3531                           
  3532                           
  3533                           ; 2 bytes @ 0x7
  3534  0027                     	ds	1
  3535  0028                     RunningNew@num2:	
  3536                           
  3537                           ; 1 bytes @ 0x8
  3538  0028                     	ds	1
  3539  0029                     RunningADCC@running:	
  3540  0029                     RunningNew@num3:	
  3541                           ; 1 bytes @ 0x9
  3542                           
  3543                           
  3544                           ; 1 bytes @ 0x9
  3545  0029                     	ds	1
  3546  002A                     RunningNew@num4:	
  3547                           
  3548                           ; 1 bytes @ 0xA
  3549  002A                     	ds	1
  3550  002B                     RunningNew@value:	
  3551                           
  3552                           ; 2 bytes @ 0xB
  3553  002B                     	ds	2
  3554  002D                     RunningNew@working:	
  3555                           
  3556                           ; 1 bytes @ 0xD
  3557  002D                     	ds	1
  3558  002E                     ??_RunningNew:	
  3559                           
  3560                           ; 1 bytes @ 0xE
  3561  002E                     	ds	2
  3562  0030                     RunningNew@count:	
  3563                           
  3564                           ; 2 bytes @ 0x10
  3565  0030                     	ds	2
  3566  0032                     RunningNew@digit:	
  3567                           
  3568                           ; 1 bytes @ 0x12
  3569  0032                     	ds	1
  3570  0033                     ??_main:	
  3571                           
  3572                           ; 1 bytes @ 0x13
  3573  0033                     	ds	6
  3574  0039                     main@working:	
  3575                           
  3576                           ; 1 bytes @ 0x19
  3577  0039                     	ds	1
  3578  003A                     main@num1:	
  3579                           
  3580                           ; 2 bytes @ 0x1A
  3581  003A                     	ds	2
  3582  003C                     main@num2:	
  3583                           
  3584                           ; 2 bytes @ 0x1C
  3585  003C                     	ds	2
  3586  003E                     main@num3:	
  3587                           
  3588                           ; 2 bytes @ 0x1E
  3589  003E                     	ds	2
  3590  0040                     main@num4:	
  3591                           
  3592                           ; 2 bytes @ 0x20
  3593  0040                     	ds	2
  3594  0042                     main@running:	
  3595                           
  3596                           ; 1 bytes @ 0x22
  3597  0042                     	ds	3
  3598  0045                     main@combo1:	
  3599                           
  3600                           ; 2 bytes @ 0x25
  3601  0045                     	ds	2
  3602  0047                     main@combo2:	
  3603                           
  3604                           ; 2 bytes @ 0x27
  3605  0047                     	ds	2
  3606  0049                     main@combo3:	
  3607                           
  3608                           ; 2 bytes @ 0x29
  3609  0049                     	ds	2
  3610  004B                     main@combo4:	
  3611                           
  3612                           ; 2 bytes @ 0x2B
  3613  004B                     	ds	2
  3614  004D                     main@digit:	
  3615                           
  3616                           ; 1 bytes @ 0x2D
  3617  004D                     	ds	1
  3618  004E                     main@tens:	
  3619                           
  3620                           ; 1 bytes @ 0x2E
  3621  004E                     	ds	1
  3622  004F                     main@value:	
  3623                           
  3624                           ; 2 bytes @ 0x2F
  3625  004F                     	ds	2
  3626                           
  3627                           	psect	maintext
  3628  06B7                     __pmaintext:	
  3629 ;;
  3630 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  3631 ;;
  3632 ;; *************** function _main *****************
  3633 ;; Defined at:
  3634 ;;		line 84 in file "main.c"
  3635 ;; Parameters:    Size  Location     Type
  3636 ;;		None
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;  value           2   47[BANK0 ] int 
  3639 ;;  combo4          2   43[BANK0 ] int 
  3640 ;;  combo3          2   41[BANK0 ] int 
  3641 ;;  combo2          2   39[BANK0 ] int 
  3642 ;;  combo1          2   37[BANK0 ] int 
  3643 ;;  count           2    0        int 
  3644 ;;  num4            2   32[BANK0 ] int 
  3645 ;;  num3            2   30[BANK0 ] int 
  3646 ;;  num2            2   28[BANK0 ] int 
  3647 ;;  num1            2   26[BANK0 ] int 
  3648 ;;  tens            1   46[BANK0 ] unsigned char 
  3649 ;;  digit           1   45[BANK0 ] unsigned char 
  3650 ;;  running         1   34[BANK0 ] _Bool 
  3651 ;;  working         1   25[BANK0 ] _Bool 
  3652 ;; Return value:  Size  Location     Type
  3653 ;;                  1    wreg      void 
  3654 ;; Registers used:
  3655 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3656 ;; Tracked objects:
  3657 ;;		On entry : B1F/0
  3658 ;;		On exit  : 0/0
  3659 ;;		Unchanged: 0/0
  3660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3662 ;;      Locals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3663 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3664 ;;      Totals:         0      30       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3665 ;;Total ram usage:       30 bytes
  3666 ;; Hardware stack levels required when called:    4
  3667 ;; This function calls:
  3668 ;;		_ADCC_GetSingleConversion
  3669 ;;		_DisplayDeny
  3670 ;;		_DisplayLock
  3671 ;;		_DisplayOpen
  3672 ;;		_Reset
  3673 ;;		_RunningADCC
  3674 ;;		_RunningNew
  3675 ;;		_SYSTEM_Initialize
  3676 ;;		_Scrollnew
  3677 ;;		___lwdiv
  3678 ;;		___lwmod
  3679 ;; This function is called by:
  3680 ;;		Startup code after reset
  3681 ;; This function uses a non-reentrant model
  3682 ;;
  3683                           
  3684                           
  3685                           ;psect for function _main
  3686  06B7                     _main:	
  3687                           
  3688                           ;main.c: 86:     SYSTEM_Initialize();
  3689                           
  3690                           ;incstack = 0
  3691                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3692  06B7  318E  2626  3186   	fcall	_SYSTEM_Initialize
  3693                           
  3694                           ;main.c: 87:     int combo1;;main.c: 88:     int combo2;;main.c: 89:     int combo3;;mai
      +                          n.c: 90:     int combo4;;main.c: 91:     int num1 = 10;
  3695  06BA  300A               	movlw	10
  3696  06BB  0020               	movlb	0	; select bank0
  3697  06BC  00BA               	movwf	main@num1
  3698  06BD  3000               	movlw	0
  3699  06BE  00BB               	movwf	main@num1+1
  3700                           
  3701                           ;main.c: 92:     int num2 = 20;
  3702  06BF  3014               	movlw	20
  3703  06C0  00BC               	movwf	main@num2
  3704  06C1  3000               	movlw	0
  3705  06C2  00BD               	movwf	main@num2+1
  3706                           
  3707                           ;main.c: 93:     int num3 = 30;
  3708  06C3  301E               	movlw	30
  3709  06C4  00BE               	movwf	main@num3
  3710  06C5  3000               	movlw	0
  3711  06C6  00BF               	movwf	main@num3+1
  3712                           
  3713                           ;main.c: 94:     int num4 = 40;
  3714  06C7  3028               	movlw	40
  3715  06C8  00C0               	movwf	main@num4
  3716  06C9  3000               	movlw	0
  3717  06CA  00C1               	movwf	main@num4+1
  3718                           
  3719                           ;main.c: 98:     uint8_t digit;;main.c: 99:     uint8_t tens;;main.c: 100:     int value
      +                          ;;main.c: 102:  _Bool running = 1;
  3720  06CB  01C2               	clrf	main@running
  3721  06CC  0AC2               	incf	main@running,f
  3722                           
  3723                           ;main.c: 103:     _Bool working = 1;
  3724  06CD  01B9               	clrf	main@working
  3725  06CE  0AB9               	incf	main@working,f
  3726  06CF  1798               	bsf	24,7	;volatile
  3727  06D0  1698               	bsf	24,5	;volatile
  3728  06D1  1618               	bsf	24,4	;volatile
  3729  06D2  1297               	bcf	23,5	;volatile
  3730  06D3  1117               	bcf	23,2	;volatile
  3731                           
  3732                           ;main.c: 110:     RunningADCC(digit,tens,&combo1,&combo2,&combo3,&combo4,count,value,run
      +                          ning);
  3733  06D4  084E               	movf	main@tens,w
  3734  06D5  00B3               	movwf	??_main
  3735  06D6  0833               	movf	??_main,w
  3736  06D7  00A0               	movwf	RunningADCC@tens
  3737  06D8  3045               	movlw	(low (main@combo1| 0))& (0+255)
  3738  06D9  00B4               	movwf	??_main+1
  3739  06DA  0834               	movf	??_main+1,w
  3740  06DB  00A1               	movwf	RunningADCC@combo1
  3741  06DC  3047               	movlw	(low (main@combo2| 0))& (0+255)
  3742  06DD  00B5               	movwf	??_main+2
  3743  06DE  0835               	movf	??_main+2,w
  3744  06DF  00A2               	movwf	RunningADCC@combo2
  3745  06E0  3049               	movlw	(low (main@combo3| 0))& (0+255)
  3746  06E1  00B6               	movwf	??_main+3
  3747  06E2  0836               	movf	??_main+3,w
  3748  06E3  00A3               	movwf	RunningADCC@combo3
  3749  06E4  304B               	movlw	(low (main@combo4| 0))& (0+255)
  3750  06E5  00B7               	movwf	??_main+4
  3751  06E6  0837               	movf	??_main+4,w
  3752  06E7  00A4               	movwf	RunningADCC@combo4
  3753  06E8  3000               	movlw	0
  3754  06E9  00A5               	movwf	RunningADCC@count
  3755  06EA  00A6               	movwf	RunningADCC@count+1
  3756  06EB  0850               	movf	main@value+1,w
  3757  06EC  00A8               	movwf	RunningADCC@value+1
  3758  06ED  084F               	movf	main@value,w
  3759  06EE  00A7               	movwf	RunningADCC@value
  3760  06EF  01A9               	clrf	RunningADCC@running
  3761  06F0  0AA9               	incf	RunningADCC@running,f
  3762  06F1  2F6B               	goto	L3
  3763  06F2                     l2824:	
  3764  06F2  083D               	movf	main@num2+1,w
  3765  06F3  0648               	xorwf	main@combo2+1,w
  3766  06F4  1D03               	skipz
  3767  06F5  2EF8               	goto	u785
  3768  06F6  083C               	movf	main@num2,w
  3769  06F7  0647               	xorwf	main@combo2,w
  3770  06F8                     u785:	
  3771  06F8  1D03               	skipz
  3772  06F9  2FB7               	goto	l2856
  3773  06FA  083F               	movf	main@num3+1,w
  3774  06FB  064A               	xorwf	main@combo3+1,w
  3775  06FC  1D03               	skipz
  3776  06FD  2F00               	goto	u795
  3777  06FE  083E               	movf	main@num3,w
  3778  06FF  0649               	xorwf	main@combo3,w
  3779  0700                     u795:	
  3780  0700  1D03               	skipz
  3781  0701  2FB7               	goto	l2856
  3782  0702  0841               	movf	main@num4+1,w
  3783  0703  064C               	xorwf	main@combo4+1,w
  3784  0704  1D03               	skipz
  3785  0705  2F08               	goto	u805
  3786  0706  0840               	movf	main@num4,w
  3787  0707  064B               	xorwf	main@combo4,w
  3788  0708                     u805:	
  3789  0708  1D03               	skipz
  3790  0709  2FB7               	goto	l2856
  3791                           
  3792                           ;main.c: 118:             DisplayOpen();
  3793  070A  318F  2766  3186   	fcall	_DisplayOpen
  3794                           
  3795                           ;main.c: 119:             if(value == 63){
  3796  070D  303F               	movlw	63
  3797  070E  0020               	movlb	0	; select bank0
  3798  070F  064F               	xorwf	main@value,w
  3799  0710  0450               	iorwf	main@value+1,w
  3800  0711  1D03               	btfss	3,2
  3801  0712  2F43               	goto	l298
  3802                           
  3803                           ;main.c: 120:                 if(PORTAbits.RA5 == 0){
  3804  0713  1A8C               	btfsc	12,5	;volatile
  3805  0714  2F6F               	goto	l2816
  3806                           
  3807                           ;main.c: 121:                     _delay((unsigned long)((200)*(1000000/4000.0)));
  3808  0715  3041               	movlw	65
  3809  0716  0020               	movlb	0	; select bank0
  3810  0717  00B3               	movwf	??_main
  3811  0718  30EE               	movlw	238
  3812  0719                     u877:	
  3813  0719  0B89               	decfsz	9,f
  3814  071A  2F19               	goto	u877
  3815  071B  0BB3               	decfsz	??_main,f
  3816  071C  2F19               	goto	u877
  3817  071D  0000               	nop
  3818                           
  3819                           ;main.c: 122:                     Scrollnew();
  3820  071E  3183  233F  3186   	fcall	_Scrollnew
  3821                           
  3822                           ;main.c: 123:                     RunningNew(digit,tens,&num1,&num2,&num3,&num4,value,wo
      +                          rking);
  3823  0721  0020               	movlb	0	; select bank0
  3824  0722  084E               	movf	main@tens,w
  3825  0723  00B3               	movwf	??_main
  3826  0724  0833               	movf	??_main,w
  3827  0725  00A6               	movwf	RunningNew@tens
  3828  0726  303A               	movlw	(low (main@num1| 0))& (0+255)
  3829  0727  00B4               	movwf	??_main+1
  3830  0728  0834               	movf	??_main+1,w
  3831  0729  00A7               	movwf	RunningNew@num1
  3832  072A  303C               	movlw	(low (main@num2| 0))& (0+255)
  3833  072B  00B5               	movwf	??_main+2
  3834  072C  0835               	movf	??_main+2,w
  3835  072D  00A8               	movwf	RunningNew@num2
  3836  072E  303E               	movlw	(low (main@num3| 0))& (0+255)
  3837  072F  00B6               	movwf	??_main+3
  3838  0730  0836               	movf	??_main+3,w
  3839  0731  00A9               	movwf	RunningNew@num3
  3840  0732  3040               	movlw	(low (main@num4| 0))& (0+255)
  3841  0733  00B7               	movwf	??_main+4
  3842  0734  0837               	movf	??_main+4,w
  3843  0735  00AA               	movwf	RunningNew@num4
  3844  0736  0850               	movf	main@value+1,w
  3845  0737  00AC               	movwf	RunningNew@value+1
  3846  0738  084F               	movf	main@value,w
  3847  0739  00AB               	movwf	RunningNew@value
  3848  073A  0839               	movf	main@working,w
  3849  073B  00B8               	movwf	??_main+5
  3850  073C  0838               	movf	??_main+5,w
  3851  073D  00AD               	movwf	RunningNew@working
  3852  073E  084D               	movf	main@digit,w
  3853  073F  3185  2524  3186   	fcall	_RunningNew
  3854  0742  2F48               	goto	L2
  3855  0743                     l298:	
  3856                           ;main.c: 126:                     RunningADCC(digit,tens,&combo1,&combo2,&combo3,&combo4
      +                          ,count,value,running);
  3857                           
  3858                           ;main.c: 125:                     Reset();
  3859                           
  3860                           
  3861                           ;main.c: 129:                 if(PORTAbits.RA5 == 0){
  3862  0743  1A8C               	btfsc	12,5	;volatile
  3863  0744  2F6F               	goto	l2816
  3864                           
  3865                           ;main.c: 130:                     DisplayLock();
  3866  0745  3180  204F  3186   	fcall	_DisplayLock
  3867  0748                     L2:	
  3868                           
  3869                           ;main.c: 132:                     Reset();
  3870  0748  318E  261C  3186   	fcall	_Reset
  3871                           
  3872                           ;main.c: 133:                     RunningADCC(digit,tens,&combo1,&combo2,&combo3,&combo4
      +                          ,count,value,running);
  3873  074B  0020               	movlb	0	; select bank0
  3874  074C  084E               	movf	main@tens,w
  3875  074D  00B3               	movwf	??_main
  3876  074E  0833               	movf	??_main,w
  3877  074F  00A0               	movwf	RunningADCC@tens
  3878  0750  3045               	movlw	(low (main@combo1| 0))& (0+255)
  3879  0751  00B4               	movwf	??_main+1
  3880  0752  0834               	movf	??_main+1,w
  3881  0753  00A1               	movwf	RunningADCC@combo1
  3882  0754  3047               	movlw	(low (main@combo2| 0))& (0+255)
  3883  0755  00B5               	movwf	??_main+2
  3884  0756  0835               	movf	??_main+2,w
  3885  0757  00A2               	movwf	RunningADCC@combo2
  3886  0758  3049               	movlw	(low (main@combo3| 0))& (0+255)
  3887  0759  00B6               	movwf	??_main+3
  3888  075A  0836               	movf	??_main+3,w
  3889  075B  00A3               	movwf	RunningADCC@combo3
  3890  075C  304B               	movlw	(low (main@combo4| 0))& (0+255)
  3891  075D  00B7               	movwf	??_main+4
  3892  075E  0837               	movf	??_main+4,w
  3893  075F  00A4               	movwf	RunningADCC@combo4
  3894  0760  3000               	movlw	0
  3895  0761  00A5               	movwf	RunningADCC@count
  3896  0762  00A6               	movwf	RunningADCC@count+1
  3897  0763  0850               	movf	main@value+1,w
  3898  0764  00A8               	movwf	RunningADCC@value+1
  3899  0765  084F               	movf	main@value,w
  3900  0766  00A7               	movwf	RunningADCC@value
  3901  0767  0842               	movf	main@running,w
  3902  0768  00B8               	movwf	??_main+5
  3903  0769  0838               	movf	??_main+5,w
  3904  076A  00A9               	movwf	RunningADCC@running
  3905  076B                     L3:	
  3906  076B  084D               	movf	main@digit,w
  3907  076C  3184  2476  3186   	fcall	_RunningADCC
  3908  076F                     l2816:	
  3909                           
  3910                           ;main.c: 113:   digit=(ADCC_GetSingleConversion(POT)>>4)%10;
  3911  076F  300A               	movlw	10
  3912  0770  00F4               	movwf	___lwmod@divisor
  3913  0771  3000               	movlw	0
  3914  0772  00F5               	movwf	___lwmod@divisor+1
  3915  0773  3004               	movlw	4
  3916  0774  318E  263E  3186   	fcall	_ADCC_GetSingleConversion
  3917  0777  0E70               	swapf	?_ADCC_GetSingleConversion,w
  3918  0778  390F               	andlw	15
  3919  0779  00F6               	movwf	___lwmod@dividend
  3920  077A  0E71               	swapf	?_ADCC_GetSingleConversion+1,w
  3921  077B  39F0               	andlw	240
  3922  077C  04F6               	iorwf	___lwmod@dividend,f
  3923  077D  0E71               	swapf	?_ADCC_GetSingleConversion+1,w
  3924  077E  390F               	andlw	15
  3925  077F  00F7               	movwf	___lwmod@dividend+1
  3926  0780  318E  26CE  3186   	fcall	___lwmod
  3927  0783  0874               	movf	?___lwmod,w
  3928  0784  0020               	movlb	0	; select bank0
  3929  0785  00B3               	movwf	??_main
  3930  0786  0833               	movf	??_main,w
  3931  0787  00CD               	movwf	main@digit
  3932                           
  3933                           ;main.c: 114:   tens =(ADCC_GetSingleConversion(POT)>>4)/10;
  3934  0788  300A               	movlw	10
  3935  0789  00F4               	movwf	___lwdiv@divisor
  3936  078A  3000               	movlw	0
  3937  078B  00F5               	movwf	___lwdiv@divisor+1
  3938  078C  3004               	movlw	4
  3939  078D  318E  263E  3186   	fcall	_ADCC_GetSingleConversion
  3940  0790  0E70               	swapf	?_ADCC_GetSingleConversion,w
  3941  0791  390F               	andlw	15
  3942  0792  00F6               	movwf	___lwdiv@dividend
  3943  0793  0E71               	swapf	?_ADCC_GetSingleConversion+1,w
  3944  0794  39F0               	andlw	240
  3945  0795  04F6               	iorwf	___lwdiv@dividend,f
  3946  0796  0E71               	swapf	?_ADCC_GetSingleConversion+1,w
  3947  0797  390F               	andlw	15
  3948  0798  00F7               	movwf	___lwdiv@dividend+1
  3949  0799  318E  26FA  3186   	fcall	___lwdiv
  3950  079C  0874               	movf	?___lwdiv,w
  3951  079D  0020               	movlb	0	; select bank0
  3952  079E  00B3               	movwf	??_main
  3953  079F  0833               	movf	??_main,w
  3954  07A0  00CE               	movwf	main@tens
  3955                           
  3956                           ;main.c: 115:   value =(ADCC_GetSingleConversion(POT))/16;
  3957  07A1  3004               	movlw	4
  3958  07A2  318E  263E  3186   	fcall	_ADCC_GetSingleConversion
  3959  07A5  0E70               	swapf	?_ADCC_GetSingleConversion,w
  3960  07A6  390F               	andlw	15
  3961  07A7  0020               	movlb	0	; select bank0
  3962  07A8  00CF               	movwf	main@value
  3963  07A9  0E71               	swapf	?_ADCC_GetSingleConversion+1,w
  3964  07AA  39F0               	andlw	240
  3965  07AB  04CF               	iorwf	main@value,f
  3966  07AC  0E71               	swapf	?_ADCC_GetSingleConversion+1,w
  3967  07AD  390F               	andlw	15
  3968  07AE  00D0               	movwf	main@value+1
  3969                           
  3970                           ;main.c: 117:   if(combo1 == num1 && combo2 == num2 && combo3 == num3 && combo4 == num4)
      +                          {
  3971  07AF  083B               	movf	main@num1+1,w
  3972  07B0  0646               	xorwf	main@combo1+1,w
  3973  07B1  1D03               	skipz
  3974  07B2  2FB5               	goto	u775
  3975  07B3  083A               	movf	main@num1,w
  3976  07B4  0645               	xorwf	main@combo1,w
  3977  07B5                     u775:	
  3978  07B5  1903               	btfsc	3,2
  3979  07B6  2EF2               	goto	l2824
  3980  07B7                     l2856:	
  3981                           
  3982                           ;main.c: 137:             DisplayDeny();
  3983  07B7  318F  27AA  3186   	fcall	_DisplayDeny
  3984                           
  3985                           ;main.c: 138:    if(digit == 0 && tens == 0 && value ==0){
  3986  07BA  0020               	movlb	0	; select bank0
  3987  07BB  084D               	movf	main@digit,w
  3988  07BC  1D03               	btfss	3,2
  3989  07BD  2F6F               	goto	l2816
  3990  07BE  084E               	movf	main@tens,w
  3991  07BF  1D03               	btfss	3,2
  3992  07C0  2F6F               	goto	l2816
  3993  07C1  084F               	movf	main@value,w
  3994  07C2  0450               	iorwf	main@value+1,w
  3995  07C3  1D03               	btfss	3,2
  3996  07C4  2F6F               	goto	l2816
  3997  07C5  2F48               	goto	L2
  3998  07C6                     __end_of_main:	
  3999                           ;main.c: 143:   }
  4000                           
  4001                           ;main.c: 141:                 RunningADCC(digit,tens,&combo1,&combo2,&combo3,&combo4,cou
      +                          nt,value,running);
  4002                           
  4003                           ;main.c: 140:     Reset();
  4004                           
  4005                           
  4006                           	psect	text1
  4007  033F                     __ptext1:	
  4008 ;; *************** function _Scrollnew *****************
  4009 ;; Defined at:
  4010 ;;		line 401 in file "main.c"
  4011 ;; Parameters:    Size  Location     Type
  4012 ;;		None
  4013 ;; Auto vars:     Size  Location     Type
  4014 ;;  scrl_len        2    4[BANK0 ] int 
  4015 ;;  scrl_speed      2    2[BANK0 ] int 
  4016 ;;  count           2    0[BANK0 ] int 
  4017 ;; Return value:  Size  Location     Type
  4018 ;;                  1    wreg      void 
  4019 ;; Registers used:
  4020 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4026 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4027 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4028 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4029 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4030 ;;Total ram usage:        7 bytes
  4031 ;; Hardware stack levels used:    1
  4032 ;; Hardware stack levels required when called:    2
  4033 ;; This function calls:
  4034 ;;		_NewShow
  4035 ;; This function is called by:
  4036 ;;		_main
  4037 ;; This function uses a non-reentrant model
  4038 ;;
  4039                           
  4040                           
  4041                           ;psect for function _Scrollnew
  4042  033F                     _Scrollnew:	
  4043                           
  4044                           ;main.c: 402:     int scrl_len = 0, scrl_speed = 0;
  4045                           
  4046                           ;incstack = 0
  4047                           ; Regs used in _Scrollnew: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4048  033F  0020               	movlb	0	; select bank0
  4049  0340  01A4               	clrf	Scrollnew@scrl_len
  4050  0341  01A5               	clrf	Scrollnew@scrl_len+1
  4051  0342  01A2               	clrf	Scrollnew@scrl_speed
  4052  0343  01A3               	clrf	Scrollnew@scrl_speed+1
  4053                           
  4054                           ;main.c: 403:         int count = 0;
  4055  0344  01A0               	clrf	Scrollnew@count
  4056  0345  01A1               	clrf	Scrollnew@count+1
  4057  0346                     l501:	
  4058                           ;main.c: 416:     }
  4059                           
  4060                           ;main.c: 404:     while(count < 3){
  4061                           
  4062                           
  4063                           ;main.c: 404:     while(count < 3){
  4064  0346  0821               	movf	Scrollnew@count+1,w
  4065  0347  3A80               	xorlw	128
  4066  0348  00FD               	movwf	??_Scrollnew
  4067  0349  3080               	movlw	128
  4068  034A  027D               	subwf	??_Scrollnew,w
  4069  034B  1D03               	skipz
  4070  034C  2B4F               	goto	u705
  4071  034D  3003               	movlw	3
  4072  034E  0220               	subwf	Scrollnew@count,w
  4073  034F                     u705:	
  4074  034F  1803               	btfsc	3,0
  4075  0350  2BC8               	goto	l2674
  4076                           
  4077                           ;main.c: 405:         do { LATAbits.LATA0 = 1; } while(0);
  4078  0351  0020               	movlb	0	; select bank0
  4079  0352  1416               	bsf	22,0	;volatile
  4080                           
  4081                           ;main.c: 406:         do { LATAbits.LATA1 = 1; } while(0);
  4082  0353  1496               	bsf	22,1	;volatile
  4083                           
  4084                           ;main.c: 407:         do { LATAbits.LATA2 = 1; } while(0);
  4085  0354  1516               	bsf	22,2	;volatile
  4086                           
  4087                           ;main.c: 408:         do { LATAbits.LATA3 = 1; } while(0);
  4088  0355  1596               	bsf	22,3	;volatile
  4089                           
  4090                           ;main.c: 409:         _delay((unsigned long)((200)*(1000000/4000.0)));
  4091  0356  3041               	movlw	65
  4092  0357  00FD               	movwf	??_Scrollnew
  4093  0358  30EE               	movlw	238
  4094  0359                     u887:	
  4095  0359  0B89               	decfsz	9,f
  4096  035A  2B59               	goto	u887
  4097  035B  0BFD               	decfsz	??_Scrollnew,f
  4098  035C  2B59               	goto	u887
  4099  035D  3200               	nop2
  4100  035E  0020               	movlb	0	; select bank0
  4101  035F  1016               	bcf	22,0	;volatile
  4102  0360  1096               	bcf	22,1	;volatile
  4103  0361  1116               	bcf	22,2	;volatile
  4104  0362  1196               	bcf	22,3	;volatile
  4105                           
  4106                           ;main.c: 414:         _delay((unsigned long)((200)*(1000000/4000.0)));
  4107  0363  3041               	movlw	65
  4108  0364  00FD               	movwf	??_Scrollnew
  4109  0365  30EE               	movlw	238
  4110  0366                     u897:	
  4111  0366  0B89               	decfsz	9,f
  4112  0367  2B66               	goto	u897
  4113  0368  0BFD               	decfsz	??_Scrollnew,f
  4114  0369  2B66               	goto	u897
  4115  036A  3200               	nop2
  4116                           
  4117                           ;main.c: 415:         count++;
  4118  036B  3001               	movlw	1
  4119  036C  0020               	movlb	0	; select bank0
  4120  036D  07A0               	addwf	Scrollnew@count,f
  4121  036E  3000               	movlw	0
  4122  036F  3DA1               	addwfc	Scrollnew@count+1,f
  4123  0370  2B46               	goto	l501
  4124  0371                     l524:	
  4125                           ;main.c: 419:             do { LATBbits.LATB5 = 0; } while(0);
  4126                           
  4127  0371  0020               	movlb	0	; select bank0
  4128  0372  1297               	bcf	23,5	;volatile
  4129                           
  4130                           ;main.c: 420:             _delay((unsigned long)((3)*(1000000/4000.0)));
  4131  0373  30FA               	movlw	250
  4132  0374                     u907:	
  4133  0374  0B89               	decfsz	9,f
  4134  0375  2B74               	goto	u907
  4135  0376  0020               	movlb	0	; select bank0
  4136  0377  1697               	bsf	23,5	;volatile
  4137                           
  4138                           ;main.c: 422:             NewShow(scrl_len+2);
  4139  0378  0824               	movf	Scrollnew@scrl_len,w
  4140  0379  3E02               	addlw	2
  4141  037A  3182  2244  3183   	fcall	_NewShow
  4142                           
  4143                           ;main.c: 423:             _delay((unsigned long)((1)*(1000000/4000.0)));
  4144  037D  3053               	movlw	83
  4145  037E                     u917:	
  4146  037E  0B89               	decfsz	9,f
  4147  037F  2B7E               	goto	u917
  4148  0380  0000               	nop
  4149  0381  0020               	movlb	0	; select bank0
  4150  0382  1218               	bcf	24,4	;volatile
  4151                           
  4152                           ;main.c: 425:             _delay((unsigned long)((3)*(1000000/4000.0)));
  4153  0383  30FA               	movlw	250
  4154  0384                     u927:	
  4155  0384  0B89               	decfsz	9,f
  4156  0385  2B84               	goto	u927
  4157  0386  0020               	movlb	0	; select bank0
  4158  0387  1618               	bsf	24,4	;volatile
  4159                           
  4160                           ;main.c: 427:             NewShow(scrl_len+1);
  4161  0388  0824               	movf	Scrollnew@scrl_len,w
  4162  0389  3E01               	addlw	1
  4163  038A  3182  2244  3183   	fcall	_NewShow
  4164                           
  4165                           ;main.c: 428:             _delay((unsigned long)((1)*(1000000/4000.0)));
  4166  038D  3053               	movlw	83
  4167  038E                     u937:	
  4168  038E  0B89               	decfsz	9,f
  4169  038F  2B8E               	goto	u937
  4170  0390  0000               	nop
  4171  0391  0020               	movlb	0	; select bank0
  4172  0392  1298               	bcf	24,5	;volatile
  4173                           
  4174                           ;main.c: 430:             _delay((unsigned long)((3)*(1000000/4000.0)));
  4175  0393  30FA               	movlw	250
  4176  0394                     u947:	
  4177  0394  0B89               	decfsz	9,f
  4178  0395  2B94               	goto	u947
  4179  0396  0020               	movlb	0	; select bank0
  4180  0397  1698               	bsf	24,5	;volatile
  4181                           
  4182                           ;main.c: 432:             NewShow(scrl_len);
  4183  0398  0824               	movf	Scrollnew@scrl_len,w
  4184  0399  3182  2244  3183   	fcall	_NewShow
  4185                           
  4186                           ;main.c: 433:             _delay((unsigned long)((1)*(1000000/4000.0)));
  4187  039C  3053               	movlw	83
  4188  039D                     u957:	
  4189  039D  0B89               	decfsz	9,f
  4190  039E  2B9D               	goto	u957
  4191  039F  0000               	nop
  4192  03A0  0020               	movlb	0	; select bank0
  4193  03A1  1398               	bcf	24,7	;volatile
  4194                           
  4195                           ;main.c: 435:             _delay((unsigned long)((3)*(1000000/4000.0)));
  4196  03A2  30FA               	movlw	250
  4197  03A3                     u967:	
  4198  03A3  0B89               	decfsz	9,f
  4199  03A4  2BA3               	goto	u967
  4200  03A5  0020               	movlb	0	; select bank0
  4201  03A6  1798               	bsf	24,7	;volatile
  4202                           
  4203                           ;main.c: 437:             NewShow(scrl_len+3);
  4204  03A7  0824               	movf	Scrollnew@scrl_len,w
  4205  03A8  3E03               	addlw	3
  4206  03A9  3182  2244  3183   	fcall	_NewShow
  4207                           
  4208                           ;main.c: 438:             _delay((unsigned long)((1)*(1000000/4000.0)));
  4209  03AC  3053               	movlw	83
  4210  03AD                     u977:	
  4211  03AD  0B89               	decfsz	9,f
  4212  03AE  2BAD               	goto	u977
  4213  03AF  0000               	nop
  4214                           
  4215                           ;main.c: 439:             scrl_speed++;
  4216  03B0  3001               	movlw	1
  4217  03B1  0020               	movlb	0	; select bank0
  4218  03B2  07A2               	addwf	Scrollnew@scrl_speed,f
  4219  03B3  3000               	movlw	0
  4220  03B4  3DA3               	addwfc	Scrollnew@scrl_speed+1,f
  4221  03B5                     l522:	
  4222                           ;main.c: 440:         }
  4223                           
  4224                           
  4225                           ;main.c: 418:         while (scrl_speed < 11){
  4226  03B5  0020               	movlb	0	; select bank0
  4227  03B6  0823               	movf	Scrollnew@scrl_speed+1,w
  4228  03B7  3A80               	xorlw	128
  4229  03B8  00FD               	movwf	??_Scrollnew
  4230  03B9  3080               	movlw	128
  4231  03BA  027D               	subwf	??_Scrollnew,w
  4232  03BB  1D03               	skipz
  4233  03BC  2BBF               	goto	u715
  4234  03BD  300B               	movlw	11
  4235  03BE  0222               	subwf	Scrollnew@scrl_speed,w
  4236  03BF                     u715:	
  4237  03BF  1C03               	skipc
  4238  03C0  2B71               	goto	l524
  4239                           
  4240                           ;main.c: 441:         scrl_speed=0;
  4241  03C1  0020               	movlb	0	; select bank0
  4242  03C2  01A2               	clrf	Scrollnew@scrl_speed
  4243  03C3  01A3               	clrf	Scrollnew@scrl_speed+1
  4244                           
  4245                           ;main.c: 442:         scrl_len++;
  4246  03C4  3001               	movlw	1
  4247  03C5  07A4               	addwf	Scrollnew@scrl_len,f
  4248  03C6  3000               	movlw	0
  4249  03C7  3DA5               	addwfc	Scrollnew@scrl_len+1,f
  4250  03C8                     l2674:	
  4251                           
  4252                           ;main.c: 417:     while (scrl_len<12){
  4253  03C8  0020               	movlb	0	; select bank0
  4254  03C9  0825               	movf	Scrollnew@scrl_len+1,w
  4255  03CA  3A80               	xorlw	128
  4256  03CB  00FD               	movwf	??_Scrollnew
  4257  03CC  3080               	movlw	128
  4258  03CD  027D               	subwf	??_Scrollnew,w
  4259  03CE  1D03               	skipz
  4260  03CF  2BD2               	goto	u725
  4261  03D0  300C               	movlw	12
  4262  03D1  0224               	subwf	Scrollnew@scrl_len,w
  4263  03D2                     u725:	
  4264  03D2  1C03               	skipc
  4265  03D3  2BB5               	goto	l522
  4266                           
  4267                           ;main.c: 444: do { LATCbits.LATC7 = 1; } while(0);
  4268  03D4  0020               	movlb	0	; select bank0
  4269  03D5  1798               	bsf	24,7	;volatile
  4270                           
  4271                           ;main.c: 445: do { LATCbits.LATC5 = 1; } while(0);
  4272  03D6  1698               	bsf	24,5	;volatile
  4273                           
  4274                           ;main.c: 446: do { LATCbits.LATC4 = 1; } while(0);
  4275  03D7  1618               	bsf	24,4	;volatile
  4276                           
  4277                           ;main.c: 447: do { LATBbits.LATB5 = 1; } while(0);
  4278  03D8  1697               	bsf	23,5	;volatile
  4279  03D9  0008               	return
  4280  03DA                     __end_of_Scrollnew:	
  4281                           
  4282                           	psect	text2
  4283  0244                     __ptext2:	
  4284 ;; *************** function _NewShow *****************
  4285 ;; Defined at:
  4286 ;;		line 189 in file "main.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;  value           1    wreg     unsigned char 
  4289 ;; Auto vars:     Size  Location     Type
  4290 ;;  value           1   10[COMMON] unsigned char 
  4291 ;;  p               2   11[COMMON] PTR unsigned char 
  4292 ;;		 -> New(105), 
  4293 ;; Return value:  Size  Location     Type
  4294 ;;                  1    wreg      void 
  4295 ;; Registers used:
  4296 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4297 ;; Tracked objects:
  4298 ;;		On entry : 0/0
  4299 ;;		On exit  : 0/0
  4300 ;;		Unchanged: 0/0
  4301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4303 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4304 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4305 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4306 ;;Total ram usage:        7 bytes
  4307 ;; Hardware stack levels used:    1
  4308 ;; Hardware stack levels required when called:    1
  4309 ;; This function calls:
  4310 ;;		___wmul
  4311 ;; This function is called by:
  4312 ;;		_Scrollnew
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           
  4317                           ;psect for function _NewShow
  4318  0244                     _NewShow:	
  4319                           
  4320                           ;incstack = 0
  4321                           ; Regs used in _NewShow: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4322                           ;NewShow@value stored from wreg
  4323  0244  00FA               	movwf	NewShow@value
  4324                           
  4325                           ;main.c: 190:     uint8_t *p=&New[value*7];
  4326  0245  087A               	movf	NewShow@value,w
  4327  0246  00F6               	movwf	??_NewShow
  4328  0247  01F7               	clrf	??_NewShow+1
  4329  0248  0876               	movf	??_NewShow,w
  4330  0249  00F0               	movwf	___wmul@multiplier
  4331  024A  0877               	movf	??_NewShow+1,w
  4332  024B  00F1               	movwf	___wmul@multiplier+1
  4333  024C  3007               	movlw	7
  4334  024D  00F2               	movwf	___wmul@multiplicand
  4335  024E  3000               	movlw	0
  4336  024F  00F3               	movwf	___wmul@multiplicand+1
  4337  0250  318E  2675  3182   	fcall	___wmul
  4338  0253  3087               	movlw	135
  4339  0254  00F8               	movwf	??_NewShow+2
  4340  0255  3023               	movlw	35
  4341  0256  00F9               	movwf	??_NewShow+3
  4342  0257  0870               	movf	?___wmul,w
  4343  0258  0778               	addwf	??_NewShow+2,w
  4344  0259  00FB               	movwf	NewShow@p
  4345  025A  0871               	movf	?___wmul+1,w
  4346  025B  3D79               	addwfc	??_NewShow+3,w
  4347  025C  00FC               	movwf	NewShow@p+1
  4348                           
  4349                           ;main.c: 191:     LATCbits.LATC2 = *p++;
  4350  025D  087B               	movf	NewShow@p,w
  4351  025E  0086               	movwf	6
  4352  025F  087C               	movf	NewShow@p+1,w
  4353  0260  0087               	movwf	7
  4354  0261  0C01               	rrf	1,w
  4355  0262  0020               	movlb	0	; select bank0
  4356  0263  1C03               	skipc
  4357  0264  1118               	bcf	24,2	;volatile
  4358  0265  1803               	skipnc
  4359  0266  1518               	bsf	24,2	;volatile
  4360  0267  3001               	movlw	1
  4361  0268  07FB               	addwf	NewShow@p,f
  4362  0269  3000               	movlw	0
  4363  026A  3DFC               	addwfc	NewShow@p+1,f
  4364                           
  4365                           ;main.c: 192:     LATCbits.LATC3 = *p++;
  4366  026B  087B               	movf	NewShow@p,w
  4367  026C  0086               	movwf	6
  4368  026D  087C               	movf	NewShow@p+1,w
  4369  026E  0087               	movwf	7
  4370  026F  0C01               	rrf	1,w
  4371  0270  1C03               	skipc
  4372  0271  1198               	bcf	24,3	;volatile
  4373  0272  1803               	skipnc
  4374  0273  1598               	bsf	24,3	;volatile
  4375  0274  3001               	movlw	1
  4376  0275  07FB               	addwf	NewShow@p,f
  4377  0276  3000               	movlw	0
  4378  0277  3DFC               	addwfc	NewShow@p+1,f
  4379                           
  4380                           ;main.c: 193:     LATBbits.LATB3 = *p++;
  4381  0278  087B               	movf	NewShow@p,w
  4382  0279  0086               	movwf	6
  4383  027A  087C               	movf	NewShow@p+1,w
  4384  027B  0087               	movwf	7
  4385  027C  0C01               	rrf	1,w
  4386  027D  1C03               	skipc
  4387  027E  1197               	bcf	23,3	;volatile
  4388  027F  1803               	skipnc
  4389  0280  1597               	bsf	23,3	;volatile
  4390  0281  3001               	movlw	1
  4391  0282  07FB               	addwf	NewShow@p,f
  4392  0283  3000               	movlw	0
  4393  0284  3DFC               	addwfc	NewShow@p+1,f
  4394                           
  4395                           ;main.c: 194:     LATBbits.LATB1 = *p++;
  4396  0285  087B               	movf	NewShow@p,w
  4397  0286  0086               	movwf	6
  4398  0287  087C               	movf	NewShow@p+1,w
  4399  0288  0087               	movwf	7
  4400  0289  0C01               	rrf	1,w
  4401  028A  1C03               	skipc
  4402  028B  1097               	bcf	23,1	;volatile
  4403  028C  1803               	skipnc
  4404  028D  1497               	bsf	23,1	;volatile
  4405  028E  3001               	movlw	1
  4406  028F  07FB               	addwf	NewShow@p,f
  4407  0290  3000               	movlw	0
  4408  0291  3DFC               	addwfc	NewShow@p+1,f
  4409                           
  4410                           ;main.c: 195:     LATBbits.LATB0 = *p++;
  4411  0292  087B               	movf	NewShow@p,w
  4412  0293  0086               	movwf	6
  4413  0294  087C               	movf	NewShow@p+1,w
  4414  0295  0087               	movwf	7
  4415  0296  0C01               	rrf	1,w
  4416  0297  1C03               	skipc
  4417  0298  1017               	bcf	23,0	;volatile
  4418  0299  1803               	skipnc
  4419  029A  1417               	bsf	23,0	;volatile
  4420  029B  3001               	movlw	1
  4421  029C  07FB               	addwf	NewShow@p,f
  4422  029D  3000               	movlw	0
  4423  029E  3DFC               	addwfc	NewShow@p+1,f
  4424                           
  4425                           ;main.c: 196:     LATCbits.LATC6 = *p++;
  4426  029F  087B               	movf	NewShow@p,w
  4427  02A0  0086               	movwf	6
  4428  02A1  087C               	movf	NewShow@p+1,w
  4429  02A2  0087               	movwf	7
  4430  02A3  0C01               	rrf	1,w
  4431  02A4  1C03               	skipc
  4432  02A5  1318               	bcf	24,6	;volatile
  4433  02A6  1803               	skipnc
  4434  02A7  1718               	bsf	24,6	;volatile
  4435  02A8  3001               	movlw	1
  4436  02A9  07FB               	addwf	NewShow@p,f
  4437  02AA  3000               	movlw	0
  4438  02AB  3DFC               	addwfc	NewShow@p+1,f
  4439                           
  4440                           ;main.c: 197:     LATBbits.LATB4 = *p++;
  4441  02AC  087B               	movf	NewShow@p,w
  4442  02AD  0086               	movwf	6
  4443  02AE  087C               	movf	NewShow@p+1,w
  4444  02AF  0087               	movwf	7
  4445  02B0  0C01               	rrf	1,w
  4446  02B1  1C03               	skipc
  4447  02B2  1217               	bcf	23,4	;volatile
  4448  02B3  1803               	skipnc
  4449  02B4  1617               	bsf	23,4	;volatile
  4450  02B5  3001               	movlw	1
  4451  02B6  07FB               	addwf	NewShow@p,f
  4452  02B7  3000               	movlw	0
  4453  02B8  3DFC               	addwfc	NewShow@p+1,f
  4454  02B9  0008               	return
  4455  02BA                     __end_of_NewShow:	
  4456                           
  4457                           	psect	text3
  4458  0E26                     __ptext3:	
  4459 ;; *************** function _SYSTEM_Initialize *****************
  4460 ;; Defined at:
  4461 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;		None
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;		None
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  1    wreg      void 
  4468 ;; Registers used:
  4469 ;;		wreg, status,2, status,0, pclath, cstack
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4479 ;;Total ram usage:        0 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:    1
  4482 ;; This function calls:
  4483 ;;		_ADCC_Initialize
  4484 ;;		_OSCILLATOR_Initialize
  4485 ;;		_PIN_MANAGER_Initialize
  4486 ;;		_PMD_Initialize
  4487 ;; This function is called by:
  4488 ;;		_main
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           
  4493                           ;psect for function _SYSTEM_Initialize
  4494  0E26                     _SYSTEM_Initialize:	
  4495                           
  4496                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  4497                           
  4498                           ;incstack = 0
  4499                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4500  0E26  318E  260B  318E   	fcall	_PMD_Initialize
  4501                           
  4502                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  4503  0E29  318E  26AC  318E   	fcall	_PIN_MANAGER_Initialize
  4504                           
  4505                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  4506  0E2C  318E  2613  318E   	fcall	_OSCILLATOR_Initialize
  4507                           
  4508                           ;mcc_generated_files/mcc.c: 55:     ADCC_Initialize();
  4509  0E2F  318E  265F         	fcall	_ADCC_Initialize
  4510  0E31  0008               	return
  4511  0E32                     __end_of_SYSTEM_Initialize:	
  4512                           
  4513                           	psect	text4
  4514  0E0B                     __ptext4:	
  4515 ;; *************** function _PMD_Initialize *****************
  4516 ;; Defined at:
  4517 ;;		line 72 in file "mcc_generated_files/mcc.c"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;		None
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;		None
  4522 ;; Return value:  Size  Location     Type
  4523 ;;                  1    wreg      void 
  4524 ;; Registers used:
  4525 ;;		status,2
  4526 ;; Tracked objects:
  4527 ;;		On entry : 0/0
  4528 ;;		On exit  : 0/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4535 ;;Total ram usage:        0 bytes
  4536 ;; Hardware stack levels used:    1
  4537 ;; This function calls:
  4538 ;;		Nothing
  4539 ;; This function is called by:
  4540 ;;		_SYSTEM_Initialize
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           
  4545                           ;psect for function _PMD_Initialize
  4546  0E0B                     _PMD_Initialize:	
  4547                           
  4548                           ;mcc_generated_files/mcc.c: 75:     PMD0 = 0x00;
  4549                           
  4550                           ;incstack = 0
  4551                           ; Regs used in _PMD_Initialize: [status,2]
  4552  0E0B  002F               	movlb	15	; select bank15
  4553  0E0C  0196               	clrf	22	;volatile
  4554                           
  4555                           ;mcc_generated_files/mcc.c: 77:     PMD1 = 0x00;
  4556  0E0D  0197               	clrf	23	;volatile
  4557                           
  4558                           ;mcc_generated_files/mcc.c: 79:     PMD2 = 0x00;
  4559  0E0E  0198               	clrf	24	;volatile
  4560                           
  4561                           ;mcc_generated_files/mcc.c: 81:     PMD3 = 0x00;
  4562  0E0F  0199               	clrf	25	;volatile
  4563                           
  4564                           ;mcc_generated_files/mcc.c: 83:     PMD4 = 0x00;
  4565  0E10  019A               	clrf	26	;volatile
  4566                           
  4567                           ;mcc_generated_files/mcc.c: 85:     PMD5 = 0x00;
  4568  0E11  019B               	clrf	27	;volatile
  4569  0E12  0008               	return
  4570  0E13                     __end_of_PMD_Initialize:	
  4571                           
  4572                           	psect	text5
  4573  0EAC                     __ptext5:	
  4574 ;; *************** function _PIN_MANAGER_Initialize *****************
  4575 ;; Defined at:
  4576 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4577 ;; Parameters:    Size  Location     Type
  4578 ;;		None
  4579 ;; Auto vars:     Size  Location     Type
  4580 ;;		None
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  1    wreg      void 
  4583 ;; Registers used:
  4584 ;;		wreg, status,2
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4590 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4593 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4594 ;;Total ram usage:        0 bytes
  4595 ;; Hardware stack levels used:    1
  4596 ;; This function calls:
  4597 ;;		Nothing
  4598 ;; This function is called by:
  4599 ;;		_SYSTEM_Initialize
  4600 ;; This function uses a non-reentrant model
  4601 ;;
  4602                           
  4603                           
  4604                           ;psect for function _PIN_MANAGER_Initialize
  4605  0EAC                     _PIN_MANAGER_Initialize:	
  4606                           
  4607                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4608                           
  4609                           ;incstack = 0
  4610                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4611  0EAC  0020               	movlb	0	; select bank0
  4612  0EAD  0196               	clrf	22	;volatile
  4613                           
  4614                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x1F;
  4615  0EAE  301F               	movlw	31
  4616  0EAF  0097               	movwf	23	;volatile
  4617                           
  4618                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x4C;
  4619  0EB0  304C               	movlw	76
  4620  0EB1  0098               	movwf	24	;volatile
  4621                           
  4622                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0xF0;
  4623  0EB2  30F0               	movlw	240
  4624  0EB3  0091               	movwf	17	;volatile
  4625                           
  4626                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xC0;
  4627  0EB4  30C0               	movlw	192
  4628  0EB5  0092               	movwf	18	;volatile
  4629                           
  4630                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x03;
  4631  0EB6  3003               	movlw	3
  4632  0EB7  0093               	movwf	19	;volatile
  4633                           
  4634                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x03;
  4635  0EB8  3003               	movlw	3
  4636  0EB9  003E               	movlb	30	; select bank30
  4637  0EBA  00CE               	movwf	78	;volatile
  4638                           
  4639                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xC0;
  4640  0EBB  30C0               	movlw	192
  4641  0EBC  00C3               	movwf	67	;volatile
  4642                           
  4643                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0xD0;
  4644  0EBD  30D0               	movlw	208
  4645  0EBE  00B8               	movwf	56	;volatile
  4646                           
  4647                           ;mcc_generated_files/pin_manager.c: 81:     WPUE = 0x00;
  4648  0EBF  01E5               	clrf	101	;volatile
  4649                           
  4650                           ;mcc_generated_files/pin_manager.c: 82:     WPUB = 0x00;
  4651  0EC0  01C4               	clrf	68	;volatile
  4652                           
  4653                           ;mcc_generated_files/pin_manager.c: 83:     WPUA = 0x20;
  4654  0EC1  3020               	movlw	32
  4655  0EC2  00B9               	movwf	57	;volatile
  4656                           
  4657                           ;mcc_generated_files/pin_manager.c: 84:     WPUC = 0x00;
  4658  0EC3  01CF               	clrf	79	;volatile
  4659                           
  4660                           ;mcc_generated_files/pin_manager.c: 89:     ODCONA = 0x00;
  4661  0EC4  01BA               	clrf	58	;volatile
  4662                           
  4663                           ;mcc_generated_files/pin_manager.c: 90:     ODCONB = 0x00;
  4664  0EC5  01C5               	clrf	69	;volatile
  4665                           
  4666                           ;mcc_generated_files/pin_manager.c: 91:     ODCONC = 0x00;
  4667  0EC6  01D0               	clrf	80	;volatile
  4668                           
  4669                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONA = 0xFF;
  4670  0EC7  30FF               	movlw	255
  4671  0EC8  00BB               	movwf	59	;volatile
  4672                           
  4673                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONB = 0xFF;
  4674  0EC9  30FF               	movlw	255
  4675  0ECA  00C6               	movwf	70	;volatile
  4676                           
  4677                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONC = 0xFF;
  4678  0ECB  30FF               	movlw	255
  4679  0ECC  00D1               	movwf	81	;volatile
  4680  0ECD  0008               	return
  4681  0ECE                     __end_of_PIN_MANAGER_Initialize:	
  4682                           
  4683                           	psect	text6
  4684  0E13                     __ptext6:	
  4685 ;; *************** function _OSCILLATOR_Initialize *****************
  4686 ;; Defined at:
  4687 ;;		line 58 in file "mcc_generated_files/mcc.c"
  4688 ;; Parameters:    Size  Location     Type
  4689 ;;		None
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;		None
  4692 ;; Return value:  Size  Location     Type
  4693 ;;                  1    wreg      void 
  4694 ;; Registers used:
  4695 ;;		wreg, status,2
  4696 ;; Tracked objects:
  4697 ;;		On entry : 0/0
  4698 ;;		On exit  : 0/0
  4699 ;;		Unchanged: 0/0
  4700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4705 ;;Total ram usage:        0 bytes
  4706 ;; Hardware stack levels used:    1
  4707 ;; This function calls:
  4708 ;;		Nothing
  4709 ;; This function is called by:
  4710 ;;		_SYSTEM_Initialize
  4711 ;; This function uses a non-reentrant model
  4712 ;;
  4713                           
  4714                           
  4715                           ;psect for function _OSCILLATOR_Initialize
  4716  0E13                     _OSCILLATOR_Initialize:	
  4717                           
  4718                           ;mcc_generated_files/mcc.c: 61:     OSCCON1 = 0x62;
  4719                           
  4720                           ;incstack = 0
  4721                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4722  0E13  3062               	movlw	98
  4723  0E14  0031               	movlb	17	; select bank17
  4724  0E15  008D               	movwf	13	;volatile
  4725                           
  4726                           ;mcc_generated_files/mcc.c: 63:     OSCCON3 = 0x00;
  4727  0E16  018F               	clrf	15	;volatile
  4728                           
  4729                           ;mcc_generated_files/mcc.c: 65:     OSCEN = 0x00;
  4730  0E17  0191               	clrf	17	;volatile
  4731                           
  4732                           ;mcc_generated_files/mcc.c: 67:     OSCFRQ = 0x02;
  4733  0E18  3002               	movlw	2
  4734  0E19  0093               	movwf	19	;volatile
  4735                           
  4736                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
  4737  0E1A  0192               	clrf	18	;volatile
  4738  0E1B  0008               	return
  4739  0E1C                     __end_of_OSCILLATOR_Initialize:	
  4740                           
  4741                           	psect	text7
  4742  0E5F                     __ptext7:	
  4743 ;; *************** function _ADCC_Initialize *****************
  4744 ;; Defined at:
  4745 ;;		line 63 in file "mcc_generated_files/adcc.c"
  4746 ;; Parameters:    Size  Location     Type
  4747 ;;		None
  4748 ;; Auto vars:     Size  Location     Type
  4749 ;;		None
  4750 ;; Return value:  Size  Location     Type
  4751 ;;                  1    wreg      void 
  4752 ;; Registers used:
  4753 ;;		wreg, status,2
  4754 ;; Tracked objects:
  4755 ;;		On entry : 0/0
  4756 ;;		On exit  : 0/0
  4757 ;;		Unchanged: 0/0
  4758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4763 ;;Total ram usage:        0 bytes
  4764 ;; Hardware stack levels used:    1
  4765 ;; This function calls:
  4766 ;;		Nothing
  4767 ;; This function is called by:
  4768 ;;		_SYSTEM_Initialize
  4769 ;; This function uses a non-reentrant model
  4770 ;;
  4771                           
  4772                           
  4773                           ;psect for function _ADCC_Initialize
  4774  0E5F                     _ADCC_Initialize:	
  4775                           
  4776                           ;mcc_generated_files/adcc.c: 67:     ADLTHL = 0x00;
  4777                           
  4778                           ;incstack = 0
  4779                           ; Regs used in _ADCC_Initialize: [wreg+status,2]
  4780  0E5F  0022               	movlb	2	; select bank2
  4781  0E60  018E               	clrf	14	;volatile
  4782                           
  4783                           ;mcc_generated_files/adcc.c: 69:     ADLTHH = 0x00;
  4784  0E61  018F               	clrf	15	;volatile
  4785                           
  4786                           ;mcc_generated_files/adcc.c: 71:     ADUTHL = 0x00;
  4787  0E62  0190               	clrf	16	;volatile
  4788                           
  4789                           ;mcc_generated_files/adcc.c: 73:     ADUTHH = 0x00;
  4790  0E63  0191               	clrf	17	;volatile
  4791                           
  4792                           ;mcc_generated_files/adcc.c: 75:     ADSTPTL = 0x00;
  4793  0E64  0192               	clrf	18	;volatile
  4794                           
  4795                           ;mcc_generated_files/adcc.c: 77:     ADSTPTH = 0x00;
  4796  0E65  0193               	clrf	19	;volatile
  4797                           
  4798                           ;mcc_generated_files/adcc.c: 79:     ADRPT = 0x00;
  4799  0E66  018D               	clrf	13	;volatile
  4800                           
  4801                           ;mcc_generated_files/adcc.c: 81:     ADPCH = 0x00;
  4802  0E67  0021               	movlb	1	; select bank1
  4803  0E68  019E               	clrf	30	;volatile
  4804                           
  4805                           ;mcc_generated_files/adcc.c: 83:     ADCAP = 0x00;
  4806  0E69  019B               	clrf	27	;volatile
  4807                           
  4808                           ;mcc_generated_files/adcc.c: 85:     ADCON1 = 0x00;
  4809  0E6A  0194               	clrf	20	;volatile
  4810                           
  4811                           ;mcc_generated_files/adcc.c: 87:     ADCON2 = 0x00;
  4812  0E6B  0195               	clrf	21	;volatile
  4813                           
  4814                           ;mcc_generated_files/adcc.c: 89:     ADCON3 = 0x00;
  4815  0E6C  0196               	clrf	22	;volatile
  4816                           
  4817                           ;mcc_generated_files/adcc.c: 91:     ADSTAT = 0x00;
  4818  0E6D  0197               	clrf	23	;volatile
  4819                           
  4820                           ;mcc_generated_files/adcc.c: 93:     ADREF = 0x00;
  4821  0E6E  019A               	clrf	26	;volatile
  4822                           
  4823                           ;mcc_generated_files/adcc.c: 95:     ADACT = 0x00;
  4824  0E6F  0199               	clrf	25	;volatile
  4825                           
  4826                           ;mcc_generated_files/adcc.c: 97:     ADCLK = 0x00;
  4827  0E70  0198               	clrf	24	;volatile
  4828                           
  4829                           ;mcc_generated_files/adcc.c: 99:     ADCON0 = 0x84;
  4830  0E71  3084               	movlw	132
  4831  0E72  0093               	movwf	19	;volatile
  4832                           
  4833                           ;mcc_generated_files/adcc.c: 101:     ADACQ = 0x00;
  4834  0E73  019D               	clrf	29	;volatile
  4835  0E74  0008               	return
  4836  0E75                     __end_of_ADCC_Initialize:	
  4837                           
  4838                           	psect	text8
  4839  0524                     __ptext8:	
  4840 ;; *************** function _RunningNew *****************
  4841 ;; Defined at:
  4842 ;;		line 265 in file "main.c"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;  digit           1    wreg     unsigned char 
  4845 ;;  tens            1    6[BANK0 ] unsigned char 
  4846 ;;  num1            1    7[BANK0 ] PTR int 
  4847 ;;		 -> main@num1(2), 
  4848 ;;  num2            1    8[BANK0 ] PTR int 
  4849 ;;		 -> main@num2(2), 
  4850 ;;  num3            1    9[BANK0 ] PTR int 
  4851 ;;		 -> main@num3(2), 
  4852 ;;  num4            1   10[BANK0 ] PTR int 
  4853 ;;		 -> main@num4(2), 
  4854 ;;  value           2   11[BANK0 ] PTR int 
  4855 ;;		 -> RAM(4096), 
  4856 ;;  working         1   13[BANK0 ] _Bool 
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;  digit           1   18[BANK0 ] unsigned char 
  4859 ;;  count           2   16[BANK0 ] int 
  4860 ;; Return value:  Size  Location     Type
  4861 ;;                  1    wreg      void 
  4862 ;; Registers used:
  4863 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4864 ;; Tracked objects:
  4865 ;;		On entry : 0/0
  4866 ;;		On exit  : 0/0
  4867 ;;		Unchanged: 0/0
  4868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4869 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4870 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4871 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4872 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4873 ;;Total ram usage:       13 bytes
  4874 ;; Hardware stack levels used:    1
  4875 ;; Hardware stack levels required when called:    3
  4876 ;; This function calls:
  4877 ;;		_ADCC_GetSingleConversion
  4878 ;;		_DisplayLock
  4879 ;;		_Reset
  4880 ;;		_ScrollSet
  4881 ;;		___lwdiv
  4882 ;;		___lwmod
  4883 ;;		_digitShow
  4884 ;; This function is called by:
  4885 ;;		_main
  4886 ;; This function uses a non-reentrant model
  4887 ;;
  4888                           
  4889                           
  4890                           ;psect for function _RunningNew
  4891  0524                     _RunningNew:	
  4892                           
  4893                           ;main.c: 266:     int count = 0;
  4894                           
  4895                           ;incstack = 0
  4896                           ; Regs used in _RunningNew: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4897  0524  0020               	movlb	0	; select bank0
  4898  0525  01B0               	clrf	RunningNew@count
  4899  0526  01B1               	clrf	RunningNew@count+1
  4900                           
  4901                           ;main.c: 267:     Reset();
  4902  0527  318E  261C  3185   	fcall	_Reset
  4903  052A                     l2738:	
  4904                           ;main.c: 268:     while(working){
  4905                           
  4906                           
  4907                           ;main.c: 268:     while(working){
  4908  052A  0020               	movlb	0	; select bank0
  4909  052B  082D               	movf	RunningNew@working,w
  4910  052C  1903               	btfsc	3,2
  4911  052D  0008               	return
  4912                           
  4913                           ;main.c: 269:         digit=(ADCC_GetSingleConversion(POT)>>4)%10;
  4914  052E  300A               	movlw	10
  4915  052F  00F4               	movwf	___lwmod@divisor
  4916  0530  3000               	movlw	0
  4917  0531  00F5               	movwf	___lwmod@divisor+1
  4918  0532  3004               	movlw	4
  4919  0533  318E  263E  3185   	fcall	_ADCC_GetSingleConversion
  4920  0536  0E70               	swapf	?_ADCC_GetSingleConversion,w
  4921  0537  390F               	andlw	15
  4922  0538  00F6               	movwf	___lwmod@dividend
  4923  0539  0E71               	swapf	?_ADCC_GetSingleConversion+1,w
  4924  053A  39F0               	andlw	240
  4925  053B  04F6               	iorwf	___lwmod@dividend,f
  4926  053C  0E71               	swapf	?_ADCC_GetSingleConversion+1,w
  4927  053D  390F               	andlw	15
  4928  053E  00F7               	movwf	___lwmod@dividend+1
  4929  053F  318E  26CE  3185   	fcall	___lwmod
  4930  0542  0874               	movf	?___lwmod,w
  4931  0543  0020               	movlb	0	; select bank0
  4932  0544  00AE               	movwf	??_RunningNew
  4933  0545  082E               	movf	??_RunningNew,w
  4934  0546  00B2               	movwf	RunningNew@digit
  4935                           
  4936                           ;main.c: 270:         tens =(ADCC_GetSingleConversion(POT)>>4)/10;
  4937  0547  300A               	movlw	10
  4938  0548  00F4               	movwf	___lwdiv@divisor
  4939  0549  3000               	movlw	0
  4940  054A  00F5               	movwf	___lwdiv@divisor+1
  4941  054B  3004               	movlw	4
  4942  054C  318E  263E  3185   	fcall	_ADCC_GetSingleConversion
  4943  054F  0E70               	swapf	?_ADCC_GetSingleConversion,w
  4944  0550  390F               	andlw	15
  4945  0551  00F6               	movwf	___lwdiv@dividend
  4946  0552  0E71               	swapf	?_ADCC_GetSingleConversion+1,w
  4947  0553  39F0               	andlw	240
  4948  0554  04F6               	iorwf	___lwdiv@dividend,f
  4949  0555  0E71               	swapf	?_ADCC_GetSingleConversion+1,w
  4950  0556  390F               	andlw	15
  4951  0557  00F7               	movwf	___lwdiv@dividend+1
  4952  0558  318E  26FA  3185   	fcall	___lwdiv
  4953  055B  0874               	movf	?___lwdiv,w
  4954  055C  0020               	movlb	0	; select bank0
  4955  055D  00AE               	movwf	??_RunningNew
  4956  055E  082E               	movf	??_RunningNew,w
  4957  055F  00A6               	movwf	RunningNew@tens
  4958                           
  4959                           ;main.c: 271:         value =(ADCC_GetSingleConversion(POT))/16;
  4960  0560  3004               	movlw	4
  4961  0561  318E  263E  3185   	fcall	_ADCC_GetSingleConversion
  4962  0564  0870               	movf	?_ADCC_GetSingleConversion,w
  4963  0565  0020               	movlb	0	; select bank0
  4964  0566  00AE               	movwf	??_RunningNew
  4965  0567  0871               	movf	?_ADCC_GetSingleConversion+1,w
  4966  0568  00AF               	movwf	??_RunningNew+1
  4967  0569  3004               	movlw	4
  4968  056A                     u735:	
  4969  056A  36AF               	lsrf	??_RunningNew+1,f
  4970  056B  0CAE               	rrf	??_RunningNew,f
  4971  056C  0B89               	decfsz	9,f
  4972  056D  2D6A               	goto	u735
  4973  056E  082E               	movf	??_RunningNew,w
  4974  056F  00AB               	movwf	RunningNew@value
  4975  0570  082F               	movf	??_RunningNew+1,w
  4976  0571  00AC               	movwf	RunningNew@value+1
  4977  0572  1618               	bsf	24,4	;volatile
  4978  0573  1297               	bcf	23,5	;volatile
  4979                           
  4980                           ;main.c: 274:         digitShow(digit);
  4981  0574  0832               	movf	RunningNew@digit,w
  4982  0575  3182  22BA  3185   	fcall	_digitShow
  4983                           
  4984                           ;main.c: 275:         _delay((unsigned long)((5)*(1000000/4000.0)));
  4985  0578  30FA               	movlw	250
  4986  0579                     u987:	
  4987  0579  3200               	nop2
  4988  057A  0B89               	decfsz	9,f
  4989  057B  2D79               	goto	u987
  4990  057C  0020               	movlb	0	; select bank0
  4991  057D  1697               	bsf	23,5	;volatile
  4992                           
  4993                           ;main.c: 277:         digitShow(tens);
  4994  057E  0826               	movf	RunningNew@tens,w
  4995  057F  3182  22BA  3185   	fcall	_digitShow
  4996  0582  0020               	movlb	0	; select bank0
  4997  0583  1697               	bsf	23,5	;volatile
  4998  0584  1218               	bcf	24,4	;volatile
  4999                           
  5000                           ;main.c: 280:         digitShow(tens);
  5001  0585  0826               	movf	RunningNew@tens,w
  5002  0586  3182  22BA  3185   	fcall	_digitShow
  5003                           
  5004                           ;main.c: 281:         _delay((unsigned long)((5)*(1000000/4000.0)));
  5005  0589  30FA               	movlw	250
  5006  058A                     u997:	
  5007  058A  3200               	nop2
  5008  058B  0B89               	decfsz	9,f
  5009  058C  2D8A               	goto	u997
  5010  058D  0020               	movlb	0	; select bank0
  5011  058E  1618               	bsf	24,4	;volatile
  5012                           
  5013                           ;main.c: 283:         digitShow(digit);
  5014  058F  0832               	movf	RunningNew@digit,w
  5015  0590  3182  22BA  3185   	fcall	_digitShow
  5016                           
  5017                           ;main.c: 284:         if(PORTAbits.RA5==0){
  5018  0593  0020               	movlb	0	; select bank0
  5019  0594  1A8C               	btfsc	12,5	;volatile
  5020  0595  2D2A               	goto	l2738
  5021                           
  5022                           ;main.c: 285:             _delay((unsigned long)((200)*(1000000/4000.0)));
  5023  0596  3041               	movlw	65
  5024  0597  0020               	movlb	0	; select bank0
  5025  0598  00AE               	movwf	??_RunningNew
  5026  0599  30EE               	movlw	238
  5027  059A                     u1007:	
  5028  059A  0B89               	decfsz	9,f
  5029  059B  2D9A               	goto	u1007
  5030  059C  0BAE               	decfsz	??_RunningNew,f
  5031  059D  2D9A               	goto	u1007
  5032  059E  0000               	nop
  5033                           
  5034                           ;main.c: 286:             switch(count){
  5035  059F  2DCC               	goto	l2734
  5036  05A0                     l2710:	
  5037                           
  5038                           ;main.c: 288:                     *num1 = value;
  5039  05A0  0827               	movf	RunningNew@num1,w
  5040  05A1  0086               	movwf	6
  5041  05A2  0187               	clrf	7
  5042  05A3  082B               	movf	RunningNew@value,w
  5043  05A4  3FC0               	movwi [0]fsr1
  5044  05A5  082C               	movf	RunningNew@value+1,w
  5045  05A6  3FC1               	movwi [1]fsr1
  5046  05A7  1416               	bsf	22,0	;volatile
  5047  05A8  2DE0               	goto	l2736
  5048  05A9                     l2714:	
  5049                           
  5050                           ;main.c: 292:                     *num2 = value;
  5051  05A9  0828               	movf	RunningNew@num2,w
  5052  05AA  0086               	movwf	6
  5053  05AB  0187               	clrf	7
  5054  05AC  082B               	movf	RunningNew@value,w
  5055  05AD  3FC0               	movwi [0]fsr1
  5056  05AE  082C               	movf	RunningNew@value+1,w
  5057  05AF  3FC1               	movwi [1]fsr1
  5058  05B0  1496               	bsf	22,1	;volatile
  5059  05B1  2DE0               	goto	l2736
  5060  05B2                     l2718:	
  5061                           
  5062                           ;main.c: 296:                     *num3 = value;
  5063  05B2  0829               	movf	RunningNew@num3,w
  5064  05B3  0086               	movwf	6
  5065  05B4  0187               	clrf	7
  5066  05B5  082B               	movf	RunningNew@value,w
  5067  05B6  3FC0               	movwi [0]fsr1
  5068  05B7  082C               	movf	RunningNew@value+1,w
  5069  05B8  3FC1               	movwi [1]fsr1
  5070  05B9  1516               	bsf	22,2	;volatile
  5071  05BA  2DE0               	goto	l2736
  5072  05BB                     l2722:	
  5073                           
  5074                           ;main.c: 300:                     *num4 = value;
  5075  05BB  082A               	movf	RunningNew@num4,w
  5076  05BC  0086               	movwf	6
  5077  05BD  0187               	clrf	7
  5078  05BE  082B               	movf	RunningNew@value,w
  5079  05BF  3FC0               	movwi [0]fsr1
  5080  05C0  082C               	movf	RunningNew@value+1,w
  5081  05C1  3FC1               	movwi [1]fsr1
  5082  05C2  1596               	bsf	22,3	;volatile
  5083                           
  5084                           ;main.c: 302:                     ScrollSet();
  5085  05C3  3183  23DA  3185   	fcall	_ScrollSet
  5086                           
  5087                           ;main.c: 303:                     DisplayLock();
  5088  05C6  3180  204F  3185   	fcall	_DisplayLock
  5089                           
  5090                           ;main.c: 304:                     working= 0;
  5091  05C9  0020               	movlb	0	; select bank0
  5092  05CA  01AD               	clrf	RunningNew@working
  5093                           
  5094                           ;main.c: 305:                     break;
  5095  05CB  2DE0               	goto	l2736
  5096  05CC                     l2734:	
  5097                           
  5098                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5099                           ; Switch size 1, requested type "simple"
  5100                           ; Number of cases is 1, Range of values is 0 to 0
  5101                           ; switch strategies available:
  5102                           ; Name         Instructions Cycles
  5103                           ; simple_byte            4     3 (average)
  5104                           ; direct_byte            8     6 (fixed)
  5105                           ; jumptable            260     6 (fixed)
  5106                           ;	Chosen strategy is simple_byte
  5107  05CC  0020               	movlb	0	; select bank0
  5108  05CD  0831               	movf	RunningNew@count+1,w
  5109  05CE  3A00               	xorlw	0	; case 0
  5110  05CF  1903               	skipnz
  5111  05D0  2DD2               	goto	l2910
  5112  05D1  2DE0               	goto	l2736
  5113  05D2                     l2910:	
  5114                           
  5115                           ; Switch size 1, requested type "simple"
  5116                           ; Number of cases is 4, Range of values is 0 to 3
  5117                           ; switch strategies available:
  5118                           ; Name         Instructions Cycles
  5119                           ; simple_byte           13     7 (average)
  5120                           ; direct_byte           14     6 (fixed)
  5121                           ; jumptable            260     6 (fixed)
  5122                           ;	Chosen strategy is simple_byte
  5123  05D2  0830               	movf	RunningNew@count,w
  5124  05D3  3A00               	xorlw	0	; case 0
  5125  05D4  1903               	skipnz
  5126  05D5  2DA0               	goto	l2710
  5127  05D6  3A01               	xorlw	1	; case 1
  5128  05D7  1903               	skipnz
  5129  05D8  2DA9               	goto	l2714
  5130  05D9  3A03               	xorlw	3	; case 2
  5131  05DA  1903               	skipnz
  5132  05DB  2DB2               	goto	l2718
  5133  05DC  3A01               	xorlw	1	; case 3
  5134  05DD  1903               	skipnz
  5135  05DE  2DBB               	goto	l2722
  5136  05DF  2DE0               	goto	l2736
  5137  05E0                     l2736:	
  5138                           
  5139                           ;main.c: 309:         count++;
  5140  05E0  3001               	movlw	1
  5141  05E1  07B0               	addwf	RunningNew@count,f
  5142  05E2  3000               	movlw	0
  5143  05E3  3DB1               	addwfc	RunningNew@count+1,f
  5144  05E4  2D2A               	goto	l2738
  5145  05E5                     __end_of_RunningNew:	
  5146                           
  5147                           	psect	text9
  5148  03DA                     __ptext9:	
  5149 ;; *************** function _ScrollSet *****************
  5150 ;; Defined at:
  5151 ;;		line 449 in file "main.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;		None
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;  scrl_len        2    4[BANK0 ] int 
  5156 ;;  scrl_speed      2    2[BANK0 ] int 
  5157 ;;  count           2    0[BANK0 ] int 
  5158 ;; Return value:  Size  Location     Type
  5159 ;;                  1    wreg      void 
  5160 ;; Registers used:
  5161 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5162 ;; Tracked objects:
  5163 ;;		On entry : 0/0
  5164 ;;		On exit  : 0/0
  5165 ;;		Unchanged: 0/0
  5166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5168 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5169 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5170 ;;      Totals:         1       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5171 ;;Total ram usage:        7 bytes
  5172 ;; Hardware stack levels used:    1
  5173 ;; Hardware stack levels required when called:    2
  5174 ;; This function calls:
  5175 ;;		_SetShow
  5176 ;; This function is called by:
  5177 ;;		_RunningNew
  5178 ;; This function uses a non-reentrant model
  5179 ;;
  5180                           
  5181                           
  5182                           ;psect for function _ScrollSet
  5183  03DA                     _ScrollSet:	
  5184                           
  5185                           ;main.c: 450:     int scrl_len = 0, scrl_speed = 0;
  5186                           
  5187                           ;incstack = 0
  5188                           ; Regs used in _ScrollSet: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5189  03DA  0020               	movlb	0	; select bank0
  5190  03DB  01A4               	clrf	ScrollSet@scrl_len
  5191  03DC  01A5               	clrf	ScrollSet@scrl_len+1
  5192  03DD  01A2               	clrf	ScrollSet@scrl_speed
  5193  03DE  01A3               	clrf	ScrollSet@scrl_speed+1
  5194                           
  5195                           ;main.c: 451:     while (scrl_len<12){
  5196  03DF  2C37               	goto	l2456
  5197  03E0                     l557:	
  5198                           ;main.c: 453:             do { LATBbits.LATB5 = 0; } while(0);
  5199                           
  5200  03E0  0020               	movlb	0	; select bank0
  5201  03E1  1297               	bcf	23,5	;volatile
  5202                           
  5203                           ;main.c: 454:             _delay((unsigned long)((3)*(1000000/4000.0)));
  5204  03E2  30FA               	movlw	250
  5205  03E3                     u1017:	
  5206  03E3  0B89               	decfsz	9,f
  5207  03E4  2BE3               	goto	u1017
  5208  03E5  0020               	movlb	0	; select bank0
  5209  03E6  1697               	bsf	23,5	;volatile
  5210                           
  5211                           ;main.c: 456:             SetShow(scrl_len+2);
  5212  03E7  0824               	movf	ScrollSet@scrl_len,w
  5213  03E8  3E02               	addlw	2
  5214  03E9  3181  21CE  3183   	fcall	_SetShow
  5215                           
  5216                           ;main.c: 457:             _delay((unsigned long)((1)*(1000000/4000.0)));
  5217  03EC  3053               	movlw	83
  5218  03ED                     u1027:	
  5219  03ED  0B89               	decfsz	9,f
  5220  03EE  2BED               	goto	u1027
  5221  03EF  0000               	nop
  5222  03F0  0020               	movlb	0	; select bank0
  5223  03F1  1218               	bcf	24,4	;volatile
  5224                           
  5225                           ;main.c: 459:             _delay((unsigned long)((3)*(1000000/4000.0)));
  5226  03F2  30FA               	movlw	250
  5227  03F3                     u1037:	
  5228  03F3  0B89               	decfsz	9,f
  5229  03F4  2BF3               	goto	u1037
  5230  03F5  0020               	movlb	0	; select bank0
  5231  03F6  1618               	bsf	24,4	;volatile
  5232                           
  5233                           ;main.c: 461:             SetShow(scrl_len+1);
  5234  03F7  0824               	movf	ScrollSet@scrl_len,w
  5235  03F8  3E01               	addlw	1
  5236  03F9  3181  21CE  3183   	fcall	_SetShow
  5237                           
  5238                           ;main.c: 462:             _delay((unsigned long)((1)*(1000000/4000.0)));
  5239  03FC  3053               	movlw	83
  5240  03FD                     u1047:	
  5241  03FD  0B89               	decfsz	9,f
  5242  03FE  2BFD               	goto	u1047
  5243  03FF  0000               	nop
  5244  0400  0020               	movlb	0	; select bank0
  5245  0401  1298               	bcf	24,5	;volatile
  5246                           
  5247                           ;main.c: 464:             _delay((unsigned long)((3)*(1000000/4000.0)));
  5248  0402  30FA               	movlw	250
  5249  0403                     u1057:	
  5250  0403  0B89               	decfsz	9,f
  5251  0404  2C03               	goto	u1057
  5252  0405  0020               	movlb	0	; select bank0
  5253  0406  1698               	bsf	24,5	;volatile
  5254                           
  5255                           ;main.c: 466:             SetShow(scrl_len);
  5256  0407  0824               	movf	ScrollSet@scrl_len,w
  5257  0408  3181  21CE  3183   	fcall	_SetShow
  5258                           
  5259                           ;main.c: 467:             _delay((unsigned long)((1)*(1000000/4000.0)));
  5260  040B  3053               	movlw	83
  5261  040C                     u1067:	
  5262  040C  0B89               	decfsz	9,f
  5263  040D  2C0C               	goto	u1067
  5264  040E  0000               	nop
  5265  040F  0020               	movlb	0	; select bank0
  5266  0410  1398               	bcf	24,7	;volatile
  5267                           
  5268                           ;main.c: 469:             _delay((unsigned long)((3)*(1000000/4000.0)));
  5269  0411  30FA               	movlw	250
  5270  0412                     u1077:	
  5271  0412  0B89               	decfsz	9,f
  5272  0413  2C12               	goto	u1077
  5273  0414  0020               	movlb	0	; select bank0
  5274  0415  1798               	bsf	24,7	;volatile
  5275                           
  5276                           ;main.c: 471:             SetShow(scrl_len+3);
  5277  0416  0824               	movf	ScrollSet@scrl_len,w
  5278  0417  3E03               	addlw	3
  5279  0418  3181  21CE  3183   	fcall	_SetShow
  5280                           
  5281                           ;main.c: 472:             _delay((unsigned long)((1)*(1000000/4000.0)));
  5282  041B  3053               	movlw	83
  5283  041C                     u1087:	
  5284  041C  0B89               	decfsz	9,f
  5285  041D  2C1C               	goto	u1087
  5286  041E  0000               	nop
  5287                           
  5288                           ;main.c: 473:             scrl_speed++;
  5289  041F  3001               	movlw	1
  5290  0420  0020               	movlb	0	; select bank0
  5291  0421  07A2               	addwf	ScrollSet@scrl_speed,f
  5292  0422  3000               	movlw	0
  5293  0423  3DA3               	addwfc	ScrollSet@scrl_speed+1,f
  5294  0424                     l555:	
  5295                           ;main.c: 474:         }
  5296                           
  5297                           
  5298                           ;main.c: 452:         while (scrl_speed < 11){
  5299  0424  0020               	movlb	0	; select bank0
  5300  0425  0823               	movf	ScrollSet@scrl_speed+1,w
  5301  0426  3A80               	xorlw	128
  5302  0427  00FD               	movwf	??_ScrollSet
  5303  0428  3080               	movlw	128
  5304  0429  027D               	subwf	??_ScrollSet,w
  5305  042A  1D03               	skipz
  5306  042B  2C2E               	goto	u525
  5307  042C  300B               	movlw	11
  5308  042D  0222               	subwf	ScrollSet@scrl_speed,w
  5309  042E                     u525:	
  5310  042E  1C03               	skipc
  5311  042F  2BE0               	goto	l557
  5312                           
  5313                           ;main.c: 475:         scrl_speed=0;
  5314  0430  0020               	movlb	0	; select bank0
  5315  0431  01A2               	clrf	ScrollSet@scrl_speed
  5316  0432  01A3               	clrf	ScrollSet@scrl_speed+1
  5317                           
  5318                           ;main.c: 476:         scrl_len++;
  5319  0433  3001               	movlw	1
  5320  0434  07A4               	addwf	ScrollSet@scrl_len,f
  5321  0435  3000               	movlw	0
  5322  0436  3DA5               	addwfc	ScrollSet@scrl_len+1,f
  5323  0437                     l2456:	
  5324                           
  5325                           ;main.c: 451:     while (scrl_len<12){
  5326  0437  0825               	movf	ScrollSet@scrl_len+1,w
  5327  0438  3A80               	xorlw	128
  5328  0439  00FD               	movwf	??_ScrollSet
  5329  043A  3080               	movlw	128
  5330  043B  027D               	subwf	??_ScrollSet,w
  5331  043C  1D03               	skipz
  5332  043D  2C40               	goto	u535
  5333  043E  300C               	movlw	12
  5334  043F  0224               	subwf	ScrollSet@scrl_len,w
  5335  0440                     u535:	
  5336  0440  1C03               	skipc
  5337  0441  2C24               	goto	l555
  5338                           
  5339                           ;main.c: 478:     int count = 0;
  5340  0442  0020               	movlb	0	; select bank0
  5341  0443  01A0               	clrf	ScrollSet@count
  5342  0444  01A1               	clrf	ScrollSet@count+1
  5343  0445                     l575:	
  5344                           ;main.c: 491: }
  5345                           
  5346                           ;main.c: 479: while(count < 3){
  5347                           
  5348                           
  5349                           ;main.c: 479: while(count < 3){
  5350  0445  0821               	movf	ScrollSet@count+1,w
  5351  0446  3A80               	xorlw	128
  5352  0447  00FD               	movwf	??_ScrollSet
  5353  0448  3080               	movlw	128
  5354  0449  027D               	subwf	??_ScrollSet,w
  5355  044A  1D03               	skipz
  5356  044B  2C4E               	goto	u545
  5357  044C  3003               	movlw	3
  5358  044D  0220               	subwf	ScrollSet@count,w
  5359  044E                     u545:	
  5360  044E  1803               	btfsc	3,0
  5361  044F  2C70               	goto	l594
  5362                           
  5363                           ;main.c: 480:     do { LATAbits.LATA0 = 1; } while(0);
  5364  0450  0020               	movlb	0	; select bank0
  5365  0451  1416               	bsf	22,0	;volatile
  5366                           
  5367                           ;main.c: 481:     do { LATAbits.LATA1 = 1; } while(0);
  5368  0452  1496               	bsf	22,1	;volatile
  5369                           
  5370                           ;main.c: 482:     do { LATAbits.LATA2 = 1; } while(0);
  5371  0453  1516               	bsf	22,2	;volatile
  5372                           
  5373                           ;main.c: 483:     do { LATAbits.LATA3 = 1; } while(0);
  5374  0454  1596               	bsf	22,3	;volatile
  5375                           
  5376                           ;main.c: 484:     _delay((unsigned long)((200)*(1000000/4000.0)));
  5377  0455  3041               	movlw	65
  5378  0456  00FD               	movwf	??_ScrollSet
  5379  0457  30EE               	movlw	238
  5380  0458                     u1097:	
  5381  0458  0B89               	decfsz	9,f
  5382  0459  2C58               	goto	u1097
  5383  045A  0BFD               	decfsz	??_ScrollSet,f
  5384  045B  2C58               	goto	u1097
  5385  045C  3200               	nop2
  5386  045D  0020               	movlb	0	; select bank0
  5387  045E  1016               	bcf	22,0	;volatile
  5388  045F  1096               	bcf	22,1	;volatile
  5389  0460  1116               	bcf	22,2	;volatile
  5390  0461  1196               	bcf	22,3	;volatile
  5391                           
  5392                           ;main.c: 489:     _delay((unsigned long)((200)*(1000000/4000.0)));
  5393  0462  3041               	movlw	65
  5394  0463  00FD               	movwf	??_ScrollSet
  5395  0464  30EE               	movlw	238
  5396  0465                     u1107:	
  5397  0465  0B89               	decfsz	9,f
  5398  0466  2C65               	goto	u1107
  5399  0467  0BFD               	decfsz	??_ScrollSet,f
  5400  0468  2C65               	goto	u1107
  5401  0469  3200               	nop2
  5402                           
  5403                           ;main.c: 490:     count++;
  5404  046A  3001               	movlw	1
  5405  046B  0020               	movlb	0	; select bank0
  5406  046C  07A0               	addwf	ScrollSet@count,f
  5407  046D  3000               	movlw	0
  5408  046E  3DA1               	addwfc	ScrollSet@count+1,f
  5409  046F  2C45               	goto	l575
  5410  0470                     l594:	
  5411                           ;main.c: 492: do { LATCbits.LATC7 = 1; } while(0);
  5412                           
  5413  0470  0020               	movlb	0	; select bank0
  5414  0471  1798               	bsf	24,7	;volatile
  5415                           
  5416                           ;main.c: 493: do { LATCbits.LATC5 = 1; } while(0);
  5417  0472  1698               	bsf	24,5	;volatile
  5418                           
  5419                           ;main.c: 494: do { LATCbits.LATC4 = 1; } while(0);
  5420  0473  1618               	bsf	24,4	;volatile
  5421                           
  5422                           ;main.c: 495: do { LATBbits.LATB5 = 1; } while(0);
  5423  0474  1697               	bsf	23,5	;volatile
  5424  0475  0008               	return
  5425  0476                     __end_of_ScrollSet:	
  5426                           
  5427                           	psect	text10
  5428  01CE                     __ptext10:	
  5429 ;; *************** function _SetShow *****************
  5430 ;; Defined at:
  5431 ;;		line 209 in file "main.c"
  5432 ;; Parameters:    Size  Location     Type
  5433 ;;  value           1    wreg     unsigned char 
  5434 ;; Auto vars:     Size  Location     Type
  5435 ;;  value           1   10[COMMON] unsigned char 
  5436 ;;  p               2   11[COMMON] PTR unsigned char 
  5437 ;;		 -> Set(105), 
  5438 ;; Return value:  Size  Location     Type
  5439 ;;                  1    wreg      void 
  5440 ;; Registers used:
  5441 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: 0/0
  5446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5448 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5449 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5450 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5451 ;;Total ram usage:        7 bytes
  5452 ;; Hardware stack levels used:    1
  5453 ;; Hardware stack levels required when called:    1
  5454 ;; This function calls:
  5455 ;;		___wmul
  5456 ;; This function is called by:
  5457 ;;		_ScrollSet
  5458 ;; This function uses a non-reentrant model
  5459 ;;
  5460                           
  5461                           
  5462                           ;psect for function _SetShow
  5463  01CE                     _SetShow:	
  5464                           
  5465                           ;incstack = 0
  5466                           ; Regs used in _SetShow: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5467                           ;SetShow@value stored from wreg
  5468  01CE  00FA               	movwf	SetShow@value
  5469                           
  5470                           ;main.c: 210:     uint8_t *p=&Set[value*7];
  5471  01CF  087A               	movf	SetShow@value,w
  5472  01D0  00F6               	movwf	??_SetShow
  5473  01D1  01F7               	clrf	??_SetShow+1
  5474  01D2  0876               	movf	??_SetShow,w
  5475  01D3  00F0               	movwf	___wmul@multiplier
  5476  01D4  0877               	movf	??_SetShow+1,w
  5477  01D5  00F1               	movwf	___wmul@multiplier+1
  5478  01D6  3007               	movlw	7
  5479  01D7  00F2               	movwf	___wmul@multiplicand
  5480  01D8  3000               	movlw	0
  5481  01D9  00F3               	movwf	___wmul@multiplicand+1
  5482  01DA  318E  2675  3181   	fcall	___wmul
  5483  01DD  301E               	movlw	30
  5484  01DE  00F8               	movwf	??_SetShow+2
  5485  01DF  3023               	movlw	35
  5486  01E0  00F9               	movwf	??_SetShow+3
  5487  01E1  0870               	movf	?___wmul,w
  5488  01E2  0778               	addwf	??_SetShow+2,w
  5489  01E3  00FB               	movwf	SetShow@p
  5490  01E4  0871               	movf	?___wmul+1,w
  5491  01E5  3D79               	addwfc	??_SetShow+3,w
  5492  01E6  00FC               	movwf	SetShow@p+1
  5493                           
  5494                           ;main.c: 211:     LATCbits.LATC2 = *p++;
  5495  01E7  087B               	movf	SetShow@p,w
  5496  01E8  0086               	movwf	6
  5497  01E9  087C               	movf	SetShow@p+1,w
  5498  01EA  0087               	movwf	7
  5499  01EB  0C01               	rrf	1,w
  5500  01EC  0020               	movlb	0	; select bank0
  5501  01ED  1C03               	skipc
  5502  01EE  1118               	bcf	24,2	;volatile
  5503  01EF  1803               	skipnc
  5504  01F0  1518               	bsf	24,2	;volatile
  5505  01F1  3001               	movlw	1
  5506  01F2  07FB               	addwf	SetShow@p,f
  5507  01F3  3000               	movlw	0
  5508  01F4  3DFC               	addwfc	SetShow@p+1,f
  5509                           
  5510                           ;main.c: 212:     LATCbits.LATC3 = *p++;
  5511  01F5  087B               	movf	SetShow@p,w
  5512  01F6  0086               	movwf	6
  5513  01F7  087C               	movf	SetShow@p+1,w
  5514  01F8  0087               	movwf	7
  5515  01F9  0C01               	rrf	1,w
  5516  01FA  1C03               	skipc
  5517  01FB  1198               	bcf	24,3	;volatile
  5518  01FC  1803               	skipnc
  5519  01FD  1598               	bsf	24,3	;volatile
  5520  01FE  3001               	movlw	1
  5521  01FF  07FB               	addwf	SetShow@p,f
  5522  0200  3000               	movlw	0
  5523  0201  3DFC               	addwfc	SetShow@p+1,f
  5524                           
  5525                           ;main.c: 213:     LATBbits.LATB3 = *p++;
  5526  0202  087B               	movf	SetShow@p,w
  5527  0203  0086               	movwf	6
  5528  0204  087C               	movf	SetShow@p+1,w
  5529  0205  0087               	movwf	7
  5530  0206  0C01               	rrf	1,w
  5531  0207  1C03               	skipc
  5532  0208  1197               	bcf	23,3	;volatile
  5533  0209  1803               	skipnc
  5534  020A  1597               	bsf	23,3	;volatile
  5535  020B  3001               	movlw	1
  5536  020C  07FB               	addwf	SetShow@p,f
  5537  020D  3000               	movlw	0
  5538  020E  3DFC               	addwfc	SetShow@p+1,f
  5539                           
  5540                           ;main.c: 214:     LATBbits.LATB1 = *p++;
  5541  020F  087B               	movf	SetShow@p,w
  5542  0210  0086               	movwf	6
  5543  0211  087C               	movf	SetShow@p+1,w
  5544  0212  0087               	movwf	7
  5545  0213  0C01               	rrf	1,w
  5546  0214  1C03               	skipc
  5547  0215  1097               	bcf	23,1	;volatile
  5548  0216  1803               	skipnc
  5549  0217  1497               	bsf	23,1	;volatile
  5550  0218  3001               	movlw	1
  5551  0219  07FB               	addwf	SetShow@p,f
  5552  021A  3000               	movlw	0
  5553  021B  3DFC               	addwfc	SetShow@p+1,f
  5554                           
  5555                           ;main.c: 215:     LATBbits.LATB0 = *p++;
  5556  021C  087B               	movf	SetShow@p,w
  5557  021D  0086               	movwf	6
  5558  021E  087C               	movf	SetShow@p+1,w
  5559  021F  0087               	movwf	7
  5560  0220  0C01               	rrf	1,w
  5561  0221  1C03               	skipc
  5562  0222  1017               	bcf	23,0	;volatile
  5563  0223  1803               	skipnc
  5564  0224  1417               	bsf	23,0	;volatile
  5565  0225  3001               	movlw	1
  5566  0226  07FB               	addwf	SetShow@p,f
  5567  0227  3000               	movlw	0
  5568  0228  3DFC               	addwfc	SetShow@p+1,f
  5569                           
  5570                           ;main.c: 216:     LATCbits.LATC6 = *p++;
  5571  0229  087B               	movf	SetShow@p,w
  5572  022A  0086               	movwf	6
  5573  022B  087C               	movf	SetShow@p+1,w
  5574  022C  0087               	movwf	7
  5575  022D  0C01               	rrf	1,w
  5576  022E  1C03               	skipc
  5577  022F  1318               	bcf	24,6	;volatile
  5578  0230  1803               	skipnc
  5579  0231  1718               	bsf	24,6	;volatile
  5580  0232  3001               	movlw	1
  5581  0233  07FB               	addwf	SetShow@p,f
  5582  0234  3000               	movlw	0
  5583  0235  3DFC               	addwfc	SetShow@p+1,f
  5584                           
  5585                           ;main.c: 217:     LATBbits.LATB4 = *p++;
  5586  0236  087B               	movf	SetShow@p,w
  5587  0237  0086               	movwf	6
  5588  0238  087C               	movf	SetShow@p+1,w
  5589  0239  0087               	movwf	7
  5590  023A  0C01               	rrf	1,w
  5591  023B  1C03               	skipc
  5592  023C  1217               	bcf	23,4	;volatile
  5593  023D  1803               	skipnc
  5594  023E  1617               	bsf	23,4	;volatile
  5595  023F  3001               	movlw	1
  5596  0240  07FB               	addwf	SetShow@p,f
  5597  0241  3000               	movlw	0
  5598  0242  3DFC               	addwfc	SetShow@p+1,f
  5599  0243  0008               	return
  5600  0244                     __end_of_SetShow:	
  5601                           
  5602                           	psect	text11
  5603  0E75                     __ptext11:	
  5604 ;; *************** function ___wmul *****************
  5605 ;; Defined at:
  5606 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
  5607 ;; Parameters:    Size  Location     Type
  5608 ;;  multiplier      2    0[COMMON] unsigned int 
  5609 ;;  multiplicand    2    2[COMMON] unsigned int 
  5610 ;; Auto vars:     Size  Location     Type
  5611 ;;  product         2    4[COMMON] unsigned int 
  5612 ;; Return value:  Size  Location     Type
  5613 ;;                  2    0[COMMON] unsigned int 
  5614 ;; Registers used:
  5615 ;;		wreg, status,2, status,0
  5616 ;; Tracked objects:
  5617 ;;		On entry : 0/0
  5618 ;;		On exit  : 0/0
  5619 ;;		Unchanged: 0/0
  5620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5621 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5622 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5624 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5625 ;;Total ram usage:        6 bytes
  5626 ;; Hardware stack levels used:    1
  5627 ;; This function calls:
  5628 ;;		Nothing
  5629 ;; This function is called by:
  5630 ;;		_NewShow
  5631 ;;		_SetShow
  5632 ;; This function uses a non-reentrant model
  5633 ;;
  5634                           
  5635                           
  5636                           ;psect for function ___wmul
  5637  0E75                     ___wmul:	
  5638                           
  5639                           ;incstack = 0
  5640                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  5641  0E75  01F4               	clrf	___wmul@product
  5642  0E76  01F5               	clrf	___wmul@product+1
  5643  0E77                     l2104:	
  5644  0E77  1C70               	btfss	___wmul@multiplier,0
  5645  0E78  2E7D               	goto	l754
  5646  0E79  0872               	movf	___wmul@multiplicand,w
  5647  0E7A  07F4               	addwf	___wmul@product,f
  5648  0E7B  0873               	movf	___wmul@multiplicand+1,w
  5649  0E7C  3DF5               	addwfc	___wmul@product+1,f
  5650  0E7D                     l754:	
  5651  0E7D  3001               	movlw	1
  5652  0E7E                     u455:	
  5653  0E7E  35F2               	lslf	___wmul@multiplicand,f
  5654  0E7F  0DF3               	rlf	___wmul@multiplicand+1,f
  5655  0E80  0B89               	decfsz	9,f
  5656  0E81  2E7E               	goto	u455
  5657  0E82  3001               	movlw	1
  5658  0E83                     u465:	
  5659  0E83  36F1               	lsrf	___wmul@multiplier+1,f
  5660  0E84  0CF0               	rrf	___wmul@multiplier,f
  5661  0E85  0B89               	decfsz	9,f
  5662  0E86  2E83               	goto	u465
  5663  0E87  0870               	movf	___wmul@multiplier,w
  5664  0E88  0471               	iorwf	___wmul@multiplier+1,w
  5665  0E89  1D03               	btfss	3,2
  5666  0E8A  2E77               	goto	l2104
  5667  0E8B  0875               	movf	___wmul@product+1,w
  5668  0E8C  00F1               	movwf	?___wmul+1
  5669  0E8D  0874               	movf	___wmul@product,w
  5670  0E8E  00F0               	movwf	?___wmul
  5671  0E8F  0008               	return
  5672  0E90                     __end_of___wmul:	
  5673                           
  5674                           	psect	text12
  5675  0E1C                     __ptext12:	
  5676 ;; *************** function _Reset *****************
  5677 ;; Defined at:
  5678 ;;		line 147 in file "main.c"
  5679 ;; Parameters:    Size  Location     Type
  5680 ;;		None
  5681 ;; Auto vars:     Size  Location     Type
  5682 ;;		None
  5683 ;; Return value:  Size  Location     Type
  5684 ;;                  1    wreg      void 
  5685 ;; Registers used:
  5686 ;;		None
  5687 ;; Tracked objects:
  5688 ;;		On entry : 0/0
  5689 ;;		On exit  : 0/0
  5690 ;;		Unchanged: 0/0
  5691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5696 ;;Total ram usage:        0 bytes
  5697 ;; Hardware stack levels used:    1
  5698 ;; This function calls:
  5699 ;;		Nothing
  5700 ;; This function is called by:
  5701 ;;		_main
  5702 ;;		_RunningNew
  5703 ;; This function uses a non-reentrant model
  5704 ;;
  5705                           
  5706                           
  5707                           ;psect for function _Reset
  5708  0E1C                     _Reset:	
  5709                           
  5710                           ;incstack = 0
  5711                           ; Regs used in _Reset: []
  5712                           ;main.c: 148:     do { LATCbits.LATC7 = 1; } while(0);
  5713  0E1C  0020               	movlb	0	; select bank0
  5714  0E1D  1798               	bsf	24,7	;volatile
  5715                           
  5716                           ;main.c: 149:     do { LATCbits.LATC5 = 1; } while(0);
  5717  0E1E  1698               	bsf	24,5	;volatile
  5718                           
  5719                           ;main.c: 150:     do { LATCbits.LATC4 = 1; } while(0);
  5720  0E1F  1618               	bsf	24,4	;volatile
  5721                           
  5722                           ;main.c: 151:     do { LATBbits.LATB5 = 1; } while(0);
  5723  0E20  1697               	bsf	23,5	;volatile
  5724                           
  5725                           ;main.c: 152:     do { LATAbits.LATA0 = 0; } while(0);
  5726  0E21  1016               	bcf	22,0	;volatile
  5727                           
  5728                           ;main.c: 153:     do { LATAbits.LATA1 = 0; } while(0);
  5729  0E22  1096               	bcf	22,1	;volatile
  5730                           
  5731                           ;main.c: 154:     do { LATAbits.LATA2 = 0; } while(0);
  5732  0E23  1116               	bcf	22,2	;volatile
  5733                           
  5734                           ;main.c: 155:     do { LATAbits.LATA3 = 0; } while(0);
  5735  0E24  1196               	bcf	22,3	;volatile
  5736  0E25  0008               	return
  5737  0E26                     __end_of_Reset:	
  5738                           
  5739                           	psect	text13
  5740  004F                     __ptext13:	
  5741 ;; *************** function _DisplayLock *****************
  5742 ;; Defined at:
  5743 ;;		line 340 in file "main.c"
  5744 ;; Parameters:    Size  Location     Type
  5745 ;;		None
  5746 ;; Auto vars:     Size  Location     Type
  5747 ;;  count           2    9[COMMON] int 
  5748 ;; Return value:  Size  Location     Type
  5749 ;;                  1    wreg      void 
  5750 ;; Registers used:
  5751 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5752 ;; Tracked objects:
  5753 ;;		On entry : 0/0
  5754 ;;		On exit  : 0/0
  5755 ;;		Unchanged: 0/0
  5756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5758 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5759 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5760 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5761 ;;Total ram usage:        3 bytes
  5762 ;; Hardware stack levels used:    1
  5763 ;; Hardware stack levels required when called:    2
  5764 ;; This function calls:
  5765 ;;		_LockShow
  5766 ;; This function is called by:
  5767 ;;		_main
  5768 ;;		_RunningNew
  5769 ;; This function uses a non-reentrant model
  5770 ;;
  5771                           
  5772                           
  5773                           ;psect for function _DisplayLock
  5774  004F                     _DisplayLock:	
  5775                           
  5776                           ;main.c: 341:     int count = 0;
  5777                           
  5778                           ;incstack = 0
  5779                           ; Regs used in _DisplayLock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5780  004F  01F9               	clrf	DisplayLock@count
  5781  0050  01FA               	clrf	DisplayLock@count+1
  5782  0051                     l2296:	
  5783                           ;main.c: 342:     while(count < 100){
  5784                           
  5785                           
  5786                           ;main.c: 342:     while(count < 100){
  5787  0051  087A               	movf	DisplayLock@count+1,w
  5788  0052  3A80               	xorlw	128
  5789  0053  00F8               	movwf	??_DisplayLock
  5790  0054  3080               	movlw	128
  5791  0055  0278               	subwf	??_DisplayLock,w
  5792  0056  1D03               	skipz
  5793  0057  285A               	goto	u515
  5794  0058  3064               	movlw	100
  5795  0059  0279               	subwf	DisplayLock@count,w
  5796  005A                     u515:	
  5797  005A  1803               	btfsc	3,0
  5798  005B  0008               	return
  5799                           
  5800                           ;main.c: 343:         do { LATCbits.LATC7 = 1; } while(0);
  5801  005C  0020               	movlb	0	; select bank0
  5802  005D  1798               	bsf	24,7	;volatile
  5803                           
  5804                           ;main.c: 344:         do { LATBbits.LATB5 = 0; } while(0);
  5805  005E  1297               	bcf	23,5	;volatile
  5806                           
  5807                           ;main.c: 345:         LockShow(3);
  5808  005F  3003               	movlw	3
  5809  0060  3181  216B  3180   	fcall	_LockShow
  5810                           
  5811                           ;main.c: 346:         _delay((unsigned long)((5)*(1000000/4000.0)));
  5812  0063  30FA               	movlw	250
  5813  0064                     u1117:	
  5814  0064  3200               	nop2
  5815  0065  0B89               	decfsz	9,f
  5816  0066  2864               	goto	u1117
  5817  0067  0020               	movlb	0	; select bank0
  5818  0068  1697               	bsf	23,5	;volatile
  5819                           
  5820                           ;main.c: 348:         LockShow(2);
  5821  0069  3002               	movlw	2
  5822  006A  3181  216B  3180   	fcall	_LockShow
  5823  006D  0020               	movlb	0	; select bank0
  5824  006E  1697               	bsf	23,5	;volatile
  5825  006F  1218               	bcf	24,4	;volatile
  5826                           
  5827                           ;main.c: 351:         LockShow(2);
  5828  0070  3002               	movlw	2
  5829  0071  3181  216B  3180   	fcall	_LockShow
  5830                           
  5831                           ;main.c: 352:         _delay((unsigned long)((5)*(1000000/4000.0)));
  5832  0074  30FA               	movlw	250
  5833  0075                     u1127:	
  5834  0075  3200               	nop2
  5835  0076  0B89               	decfsz	9,f
  5836  0077  2875               	goto	u1127
  5837  0078  0020               	movlb	0	; select bank0
  5838  0079  1618               	bsf	24,4	;volatile
  5839                           
  5840                           ;main.c: 354:         LockShow(1);
  5841  007A  3001               	movlw	1
  5842  007B  3181  216B  3180   	fcall	_LockShow
  5843  007E  0020               	movlb	0	; select bank0
  5844  007F  1618               	bsf	24,4	;volatile
  5845  0080  1298               	bcf	24,5	;volatile
  5846                           
  5847                           ;main.c: 357:         LockShow(1);
  5848  0081  3001               	movlw	1
  5849  0082  3181  216B  3180   	fcall	_LockShow
  5850                           
  5851                           ;main.c: 358:         _delay((unsigned long)((5)*(1000000/4000.0)));
  5852  0085  30FA               	movlw	250
  5853  0086                     u1137:	
  5854  0086  3200               	nop2
  5855  0087  0B89               	decfsz	9,f
  5856  0088  2886               	goto	u1137
  5857  0089  0020               	movlb	0	; select bank0
  5858  008A  1698               	bsf	24,5	;volatile
  5859                           
  5860                           ;main.c: 360:         LockShow(0);
  5861  008B  3000               	movlw	0
  5862  008C  3181  216B  3180   	fcall	_LockShow
  5863  008F  0020               	movlb	0	; select bank0
  5864  0090  1698               	bsf	24,5	;volatile
  5865  0091  1398               	bcf	24,7	;volatile
  5866                           
  5867                           ;main.c: 363:         LockShow(0);
  5868  0092  3000               	movlw	0
  5869  0093  3181  216B  3180   	fcall	_LockShow
  5870                           
  5871                           ;main.c: 364:         _delay((unsigned long)((5)*(1000000/4000.0)));
  5872  0096  30FA               	movlw	250
  5873  0097                     u1147:	
  5874  0097  3200               	nop2
  5875  0098  0B89               	decfsz	9,f
  5876  0099  2897               	goto	u1147
  5877  009A  0020               	movlb	0	; select bank0
  5878  009B  1798               	bsf	24,7	;volatile
  5879                           
  5880                           ;main.c: 366:         LockShow(3);
  5881  009C  3003               	movlw	3
  5882  009D  3181  216B  3180   	fcall	_LockShow
  5883                           
  5884                           ;main.c: 367:         count++;
  5885  00A0  3001               	movlw	1
  5886  00A1  07F9               	addwf	DisplayLock@count,f
  5887  00A2  3000               	movlw	0
  5888  00A3  3DFA               	addwfc	DisplayLock@count+1,f
  5889  00A4  2851               	goto	l2296
  5890  00A5                     __end_of_DisplayLock:	
  5891                           
  5892                           	psect	text14
  5893  016B                     __ptext14:	
  5894 ;; *************** function _LockShow *****************
  5895 ;; Defined at:
  5896 ;;		line 169 in file "main.c"
  5897 ;; Parameters:    Size  Location     Type
  5898 ;;  value           1    wreg     unsigned char 
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;  value           1    6[COMMON] unsigned char 
  5901 ;;  p               1    7[COMMON] PTR unsigned char 
  5902 ;;		 -> Lock(28), 
  5903 ;; Return value:  Size  Location     Type
  5904 ;;                  1    wreg      void 
  5905 ;; Registers used:
  5906 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5907 ;; Tracked objects:
  5908 ;;		On entry : 0/0
  5909 ;;		On exit  : 0/0
  5910 ;;		Unchanged: 0/0
  5911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5913 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5914 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5915 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5916 ;;Total ram usage:        4 bytes
  5917 ;; Hardware stack levels used:    1
  5918 ;; Hardware stack levels required when called:    1
  5919 ;; This function calls:
  5920 ;;		___bmul
  5921 ;; This function is called by:
  5922 ;;		_DisplayLock
  5923 ;; This function uses a non-reentrant model
  5924 ;;
  5925                           
  5926                           
  5927                           ;psect for function _LockShow
  5928  016B                     _LockShow:	
  5929                           
  5930                           ;incstack = 0
  5931                           ; Regs used in _LockShow: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5932                           ;LockShow@value stored from wreg
  5933  016B  00F6               	movwf	LockShow@value
  5934                           
  5935                           ;main.c: 170:     uint8_t *p=&Lock[value*7];
  5936  016C  3007               	movlw	7
  5937  016D  00F4               	movwf	??_LockShow
  5938  016E  0874               	movf	??_LockShow,w
  5939  016F  00F0               	movwf	___bmul@multiplicand
  5940  0170  0876               	movf	LockShow@value,w
  5941  0171  318E  264E  3181   	fcall	___bmul
  5942  0174  3E51               	addlw	(low (_Lock| 0))& (0+255)
  5943  0175  00F5               	movwf	??_LockShow+1
  5944  0176  0875               	movf	??_LockShow+1,w
  5945  0177  00F7               	movwf	LockShow@p
  5946                           
  5947                           ;main.c: 171:     LATCbits.LATC2 = *p++;
  5948  0178  0877               	movf	LockShow@p,w
  5949  0179  0086               	movwf	6
  5950  017A  0187               	clrf	7
  5951  017B  0C01               	rrf	1,w
  5952  017C  0020               	movlb	0	; select bank0
  5953  017D  1C03               	skipc
  5954  017E  1118               	bcf	24,2	;volatile
  5955  017F  1803               	skipnc
  5956  0180  1518               	bsf	24,2	;volatile
  5957  0181  3001               	movlw	1
  5958  0182  00F4               	movwf	??_LockShow
  5959  0183  0874               	movf	??_LockShow,w
  5960  0184  07F7               	addwf	LockShow@p,f
  5961                           
  5962                           ;main.c: 172:     LATCbits.LATC3 = *p++;
  5963  0185  0877               	movf	LockShow@p,w
  5964  0186  0086               	movwf	6
  5965  0187  0187               	clrf	7
  5966  0188  0C01               	rrf	1,w
  5967  0189  1C03               	skipc
  5968  018A  1198               	bcf	24,3	;volatile
  5969  018B  1803               	skipnc
  5970  018C  1598               	bsf	24,3	;volatile
  5971  018D  3001               	movlw	1
  5972  018E  00F4               	movwf	??_LockShow
  5973  018F  0874               	movf	??_LockShow,w
  5974  0190  07F7               	addwf	LockShow@p,f
  5975                           
  5976                           ;main.c: 173:     LATBbits.LATB3 = *p++;
  5977  0191  0877               	movf	LockShow@p,w
  5978  0192  0086               	movwf	6
  5979  0193  0187               	clrf	7
  5980  0194  0C01               	rrf	1,w
  5981  0195  1C03               	skipc
  5982  0196  1197               	bcf	23,3	;volatile
  5983  0197  1803               	skipnc
  5984  0198  1597               	bsf	23,3	;volatile
  5985  0199  3001               	movlw	1
  5986  019A  00F4               	movwf	??_LockShow
  5987  019B  0874               	movf	??_LockShow,w
  5988  019C  07F7               	addwf	LockShow@p,f
  5989                           
  5990                           ;main.c: 174:     LATBbits.LATB1 = *p++;
  5991  019D  0877               	movf	LockShow@p,w
  5992  019E  0086               	movwf	6
  5993  019F  0187               	clrf	7
  5994  01A0  0C01               	rrf	1,w
  5995  01A1  1C03               	skipc
  5996  01A2  1097               	bcf	23,1	;volatile
  5997  01A3  1803               	skipnc
  5998  01A4  1497               	bsf	23,1	;volatile
  5999  01A5  3001               	movlw	1
  6000  01A6  00F4               	movwf	??_LockShow
  6001  01A7  0874               	movf	??_LockShow,w
  6002  01A8  07F7               	addwf	LockShow@p,f
  6003                           
  6004                           ;main.c: 175:     LATBbits.LATB0 = *p++;
  6005  01A9  0877               	movf	LockShow@p,w
  6006  01AA  0086               	movwf	6
  6007  01AB  0187               	clrf	7
  6008  01AC  0C01               	rrf	1,w
  6009  01AD  1C03               	skipc
  6010  01AE  1017               	bcf	23,0	;volatile
  6011  01AF  1803               	skipnc
  6012  01B0  1417               	bsf	23,0	;volatile
  6013  01B1  3001               	movlw	1
  6014  01B2  00F4               	movwf	??_LockShow
  6015  01B3  0874               	movf	??_LockShow,w
  6016  01B4  07F7               	addwf	LockShow@p,f
  6017                           
  6018                           ;main.c: 176:     LATCbits.LATC6 = *p++;
  6019  01B5  0877               	movf	LockShow@p,w
  6020  01B6  0086               	movwf	6
  6021  01B7  0187               	clrf	7
  6022  01B8  0C01               	rrf	1,w
  6023  01B9  1C03               	skipc
  6024  01BA  1318               	bcf	24,6	;volatile
  6025  01BB  1803               	skipnc
  6026  01BC  1718               	bsf	24,6	;volatile
  6027  01BD  3001               	movlw	1
  6028  01BE  00F4               	movwf	??_LockShow
  6029  01BF  0874               	movf	??_LockShow,w
  6030  01C0  07F7               	addwf	LockShow@p,f
  6031                           
  6032                           ;main.c: 177:     LATBbits.LATB4 = *p++;
  6033  01C1  0877               	movf	LockShow@p,w
  6034  01C2  0086               	movwf	6
  6035  01C3  0187               	clrf	7
  6036  01C4  0C01               	rrf	1,w
  6037  01C5  1C03               	skipc
  6038  01C6  1217               	bcf	23,4	;volatile
  6039  01C7  1803               	skipnc
  6040  01C8  1617               	bsf	23,4	;volatile
  6041  01C9  3001               	movlw	1
  6042  01CA  00F4               	movwf	??_LockShow
  6043  01CB  0874               	movf	??_LockShow,w
  6044  01CC  07F7               	addwf	LockShow@p,f
  6045  01CD  0008               	return
  6046  01CE                     __end_of_LockShow:	
  6047                           
  6048                           	psect	text15
  6049  0476                     __ptext15:	
  6050 ;; *************** function _RunningADCC *****************
  6051 ;; Defined at:
  6052 ;;		line 220 in file "main.c"
  6053 ;; Parameters:    Size  Location     Type
  6054 ;;  digit           1    wreg     unsigned char 
  6055 ;;  tens            1    0[BANK0 ] unsigned char 
  6056 ;;  combo1          1    1[BANK0 ] PTR int 
  6057 ;;		 -> main@combo1(2), 
  6058 ;;  combo2          1    2[BANK0 ] PTR int 
  6059 ;;		 -> main@combo2(2), 
  6060 ;;  combo3          1    3[BANK0 ] PTR int 
  6061 ;;		 -> main@combo3(2), 
  6062 ;;  combo4          1    4[BANK0 ] PTR int 
  6063 ;;		 -> main@combo4(2), 
  6064 ;;  count           2    5[BANK0 ] int 
  6065 ;;  value           2    7[BANK0 ] int 
  6066 ;;  running         1    9[BANK0 ] _Bool 
  6067 ;; Auto vars:     Size  Location     Type
  6068 ;;  digit           1   13[COMMON] unsigned char 
  6069 ;; Return value:  Size  Location     Type
  6070 ;;                  1    wreg      void 
  6071 ;; Registers used:
  6072 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6073 ;; Tracked objects:
  6074 ;;		On entry : 0/0
  6075 ;;		On exit  : 0/0
  6076 ;;		Unchanged: 0/0
  6077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6078 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6079 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6080 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6081 ;;      Totals:         2      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6082 ;;Total ram usage:       12 bytes
  6083 ;; Hardware stack levels used:    1
  6084 ;; Hardware stack levels required when called:    2
  6085 ;; This function calls:
  6086 ;;		_ADCC_GetSingleConversion
  6087 ;;		___lwdiv
  6088 ;;		___lwmod
  6089 ;;		_digitShow
  6090 ;; This function is called by:
  6091 ;;		_main
  6092 ;; This function uses a non-reentrant model
  6093 ;;
  6094                           
  6095                           
  6096                           ;psect for function _RunningADCC
  6097  0476                     _RunningADCC:	
  6098  0476                     l2582:	
  6099                           ;main.c: 221:  while(running){
  6100                           
  6101                           ;incstack = 0
  6102                           ; Regs used in _RunningADCC: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6103                           
  6104                           
  6105                           ;main.c: 221:  while(running){
  6106  0476  0020               	movlb	0	; select bank0
  6107  0477  0829               	movf	RunningADCC@running,w
  6108  0478  1903               	btfsc	3,2
  6109  0479  0008               	return
  6110                           
  6111                           ;main.c: 222:   digit=(ADCC_GetSingleConversion(POT)>>4)%10;
  6112  047A  300A               	movlw	10
  6113  047B  00F4               	movwf	___lwmod@divisor
  6114  047C  3000               	movlw	0
  6115  047D  00F5               	movwf	___lwmod@divisor+1
  6116  047E  3004               	movlw	4
  6117  047F  318E  263E  3184   	fcall	_ADCC_GetSingleConversion
  6118  0482  0E70               	swapf	?_ADCC_GetSingleConversion,w
  6119  0483  390F               	andlw	15
  6120  0484  00F6               	movwf	___lwmod@dividend
  6121  0485  0E71               	swapf	?_ADCC_GetSingleConversion+1,w
  6122  0486  39F0               	andlw	240
  6123  0487  04F6               	iorwf	___lwmod@dividend,f
  6124  0488  0E71               	swapf	?_ADCC_GetSingleConversion+1,w
  6125  0489  390F               	andlw	15
  6126  048A  00F7               	movwf	___lwmod@dividend+1
  6127  048B  318E  26CE  3184   	fcall	___lwmod
  6128  048E  0874               	movf	?___lwmod,w
  6129  048F  00FC               	movwf	??_RunningADCC
  6130  0490  087C               	movf	??_RunningADCC,w
  6131  0491  00FD               	movwf	RunningADCC@digit
  6132                           
  6133                           ;main.c: 223:   tens =(ADCC_GetSingleConversion(POT)>>4)/10;
  6134  0492  300A               	movlw	10
  6135  0493  00F4               	movwf	___lwdiv@divisor
  6136  0494  3000               	movlw	0
  6137  0495  00F5               	movwf	___lwdiv@divisor+1
  6138  0496  3004               	movlw	4
  6139  0497  318E  263E  3184   	fcall	_ADCC_GetSingleConversion
  6140  049A  0E70               	swapf	?_ADCC_GetSingleConversion,w
  6141  049B  390F               	andlw	15
  6142  049C  00F6               	movwf	___lwdiv@dividend
  6143  049D  0E71               	swapf	?_ADCC_GetSingleConversion+1,w
  6144  049E  39F0               	andlw	240
  6145  049F  04F6               	iorwf	___lwdiv@dividend,f
  6146  04A0  0E71               	swapf	?_ADCC_GetSingleConversion+1,w
  6147  04A1  390F               	andlw	15
  6148  04A2  00F7               	movwf	___lwdiv@dividend+1
  6149  04A3  318E  26FA  3184   	fcall	___lwdiv
  6150  04A6  0874               	movf	?___lwdiv,w
  6151  04A7  00FC               	movwf	??_RunningADCC
  6152  04A8  087C               	movf	??_RunningADCC,w
  6153  04A9  0020               	movlb	0	; select bank0
  6154  04AA  00A0               	movwf	RunningADCC@tens
  6155                           
  6156                           ;main.c: 224:   value =(ADCC_GetSingleConversion(POT))/16;
  6157  04AB  3004               	movlw	4
  6158  04AC  318E  263E  3184   	fcall	_ADCC_GetSingleConversion
  6159  04AF  0E70               	swapf	?_ADCC_GetSingleConversion,w
  6160  04B0  390F               	andlw	15
  6161  04B1  0020               	movlb	0	; select bank0
  6162  04B2  00A7               	movwf	RunningADCC@value
  6163  04B3  0E71               	swapf	?_ADCC_GetSingleConversion+1,w
  6164  04B4  39F0               	andlw	240
  6165  04B5  04A7               	iorwf	RunningADCC@value,f
  6166  04B6  0E71               	swapf	?_ADCC_GetSingleConversion+1,w
  6167  04B7  390F               	andlw	15
  6168  04B8  00A8               	movwf	RunningADCC@value+1
  6169  04B9  1618               	bsf	24,4	;volatile
  6170  04BA  1297               	bcf	23,5	;volatile
  6171                           
  6172                           ;main.c: 227:   digitShow(digit);
  6173  04BB  087D               	movf	RunningADCC@digit,w
  6174  04BC  3182  22BA  3184   	fcall	_digitShow
  6175                           
  6176                           ;main.c: 228:   _delay((unsigned long)((5)*(1000000/4000.0)));
  6177  04BF  30FA               	movlw	250
  6178  04C0                     u1157:	
  6179  04C0  3200               	nop2
  6180  04C1  0B89               	decfsz	9,f
  6181  04C2  2CC0               	goto	u1157
  6182  04C3  0020               	movlb	0	; select bank0
  6183  04C4  1697               	bsf	23,5	;volatile
  6184                           
  6185                           ;main.c: 230:   digitShow(tens);
  6186  04C5  0820               	movf	RunningADCC@tens,w
  6187  04C6  3182  22BA  3184   	fcall	_digitShow
  6188  04C9  0020               	movlb	0	; select bank0
  6189  04CA  1697               	bsf	23,5	;volatile
  6190  04CB  1218               	bcf	24,4	;volatile
  6191                           
  6192                           ;main.c: 233:   digitShow(tens);
  6193  04CC  0820               	movf	RunningADCC@tens,w
  6194  04CD  3182  22BA  3184   	fcall	_digitShow
  6195                           
  6196                           ;main.c: 234:   _delay((unsigned long)((5)*(1000000/4000.0)));
  6197  04D0  30FA               	movlw	250
  6198  04D1                     u1167:	
  6199  04D1  3200               	nop2
  6200  04D2  0B89               	decfsz	9,f
  6201  04D3  2CD1               	goto	u1167
  6202  04D4  0020               	movlb	0	; select bank0
  6203  04D5  1618               	bsf	24,4	;volatile
  6204                           
  6205                           ;main.c: 236:   digitShow(digit);
  6206  04D6  087D               	movf	RunningADCC@digit,w
  6207  04D7  3182  22BA  3184   	fcall	_digitShow
  6208                           
  6209                           ;main.c: 237:   if (PORTAbits.RA5 == 0){
  6210  04DA  0020               	movlb	0	; select bank0
  6211  04DB  1A8C               	btfsc	12,5	;volatile
  6212  04DC  2C76               	goto	l2582
  6213                           
  6214                           ;main.c: 238:    _delay((unsigned long)((200)*(1000000/4000.0)));
  6215  04DD  3041               	movlw	65
  6216  04DE  00FC               	movwf	??_RunningADCC
  6217  04DF  30EE               	movlw	238
  6218  04E0                     u1177:	
  6219  04E0  0B89               	decfsz	9,f
  6220  04E1  2CE0               	goto	u1177
  6221  04E2  0BFC               	decfsz	??_RunningADCC,f
  6222  04E3  2CE0               	goto	u1177
  6223  04E4  3200               	nop2
  6224                           
  6225                           ;main.c: 239:    switch(count){
  6226  04E5  2D0B               	goto	l2578
  6227  04E6                     l2558:	
  6228                           
  6229                           ;main.c: 241:      *combo1 = value;
  6230  04E6  0821               	movf	RunningADCC@combo1,w
  6231  04E7  0086               	movwf	6
  6232  04E8  0187               	clrf	7
  6233  04E9  0827               	movf	RunningADCC@value,w
  6234  04EA  3FC0               	movwi [0]fsr1
  6235  04EB  0828               	movf	RunningADCC@value+1,w
  6236  04EC  3FC1               	movwi [1]fsr1
  6237  04ED  1416               	bsf	22,0	;volatile
  6238  04EE  2D1F               	goto	l2580
  6239  04EF                     l2562:	
  6240                           
  6241                           ;main.c: 245:         *combo2 = value;
  6242  04EF  0822               	movf	RunningADCC@combo2,w
  6243  04F0  0086               	movwf	6
  6244  04F1  0187               	clrf	7
  6245  04F2  0827               	movf	RunningADCC@value,w
  6246  04F3  3FC0               	movwi [0]fsr1
  6247  04F4  0828               	movf	RunningADCC@value+1,w
  6248  04F5  3FC1               	movwi [1]fsr1
  6249  04F6  1496               	bsf	22,1	;volatile
  6250  04F7  2D1F               	goto	l2580
  6251  04F8                     l2566:	
  6252                           
  6253                           ;main.c: 249:      *combo3 = value;
  6254  04F8  0823               	movf	RunningADCC@combo3,w
  6255  04F9  0086               	movwf	6
  6256  04FA  0187               	clrf	7
  6257  04FB  0827               	movf	RunningADCC@value,w
  6258  04FC  3FC0               	movwi [0]fsr1
  6259  04FD  0828               	movf	RunningADCC@value+1,w
  6260  04FE  3FC1               	movwi [1]fsr1
  6261  04FF  1516               	bsf	22,2	;volatile
  6262  0500  2D1F               	goto	l2580
  6263  0501                     l2570:	
  6264                           
  6265                           ;main.c: 253:      *combo4 = value;
  6266  0501  0824               	movf	RunningADCC@combo4,w
  6267  0502  0086               	movwf	6
  6268  0503  0187               	clrf	7
  6269  0504  0827               	movf	RunningADCC@value,w
  6270  0505  3FC0               	movwi [0]fsr1
  6271  0506  0828               	movf	RunningADCC@value+1,w
  6272  0507  3FC1               	movwi [1]fsr1
  6273  0508  1596               	bsf	22,3	;volatile
  6274                           
  6275                           ;main.c: 255:      running = 0;
  6276  0509  01A9               	clrf	RunningADCC@running
  6277                           
  6278                           ;main.c: 256:                     break;
  6279  050A  2D1F               	goto	l2580
  6280  050B                     l2578:	
  6281                           
  6282                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6283                           ; Switch size 1, requested type "simple"
  6284                           ; Number of cases is 1, Range of values is 0 to 0
  6285                           ; switch strategies available:
  6286                           ; Name         Instructions Cycles
  6287                           ; simple_byte            4     3 (average)
  6288                           ; direct_byte            8     6 (fixed)
  6289                           ; jumptable            260     6 (fixed)
  6290                           ;	Chosen strategy is simple_byte
  6291  050B  0020               	movlb	0	; select bank0
  6292  050C  0826               	movf	RunningADCC@count+1,w
  6293  050D  3A00               	xorlw	0	; case 0
  6294  050E  1903               	skipnz
  6295  050F  2D11               	goto	l2912
  6296  0510  2D1F               	goto	l2580
  6297  0511                     l2912:	
  6298                           
  6299                           ; Switch size 1, requested type "simple"
  6300                           ; Number of cases is 4, Range of values is 0 to 3
  6301                           ; switch strategies available:
  6302                           ; Name         Instructions Cycles
  6303                           ; simple_byte           13     7 (average)
  6304                           ; direct_byte           14     6 (fixed)
  6305                           ; jumptable            260     6 (fixed)
  6306                           ;	Chosen strategy is simple_byte
  6307  0511  0825               	movf	RunningADCC@count,w
  6308  0512  3A00               	xorlw	0	; case 0
  6309  0513  1903               	skipnz
  6310  0514  2CE6               	goto	l2558
  6311  0515  3A01               	xorlw	1	; case 1
  6312  0516  1903               	skipnz
  6313  0517  2CEF               	goto	l2562
  6314  0518  3A03               	xorlw	3	; case 2
  6315  0519  1903               	skipnz
  6316  051A  2CF8               	goto	l2566
  6317  051B  3A01               	xorlw	1	; case 3
  6318  051C  1903               	skipnz
  6319  051D  2D01               	goto	l2570
  6320  051E  2D1F               	goto	l2580
  6321  051F                     l2580:	
  6322                           
  6323                           ;main.c: 260:    count++;
  6324  051F  3001               	movlw	1
  6325  0520  07A5               	addwf	RunningADCC@count,f
  6326  0521  3000               	movlw	0
  6327  0522  3DA6               	addwfc	RunningADCC@count+1,f
  6328  0523  2C76               	goto	l2582
  6329  0524                     __end_of_RunningADCC:	
  6330                           
  6331                           	psect	text16
  6332  02BA                     __ptext16:	
  6333 ;; *************** function _digitShow *****************
  6334 ;; Defined at:
  6335 ;;		line 199 in file "main.c"
  6336 ;; Parameters:    Size  Location     Type
  6337 ;;  value           1    wreg     unsigned char 
  6338 ;; Auto vars:     Size  Location     Type
  6339 ;;  value           1    6[COMMON] unsigned char 
  6340 ;;  p               1    7[COMMON] PTR unsigned char 
  6341 ;;		 -> matrix(70), 
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  1    wreg      void 
  6344 ;; Registers used:
  6345 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6352 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6353 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6354 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6355 ;;Total ram usage:        4 bytes
  6356 ;; Hardware stack levels used:    1
  6357 ;; Hardware stack levels required when called:    1
  6358 ;; This function calls:
  6359 ;;		___bmul
  6360 ;; This function is called by:
  6361 ;;		_RunningADCC
  6362 ;;		_RunningNew
  6363 ;; This function uses a non-reentrant model
  6364 ;;
  6365                           
  6366                           
  6367                           ;psect for function _digitShow
  6368  02BA                     _digitShow:	
  6369                           
  6370                           ;incstack = 0
  6371                           ; Regs used in _digitShow: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6372                           ;digitShow@value stored from wreg
  6373  02BA  00F6               	movwf	digitShow@value
  6374                           
  6375                           ;main.c: 200:     uint8_t *p=&matrix[value*7];
  6376  02BB  3007               	movlw	7
  6377  02BC  00F4               	movwf	??_digitShow
  6378  02BD  0874               	movf	??_digitShow,w
  6379  02BE  00F0               	movwf	___bmul@multiplicand
  6380  02BF  0876               	movf	digitShow@value,w
  6381  02C0  318E  264E  3182   	fcall	___bmul
  6382  02C3  3E20               	addlw	(low (_matrix| (0+256)))& (0+255)
  6383  02C4  00F5               	movwf	??_digitShow+1
  6384  02C5  0875               	movf	??_digitShow+1,w
  6385  02C6  00F7               	movwf	digitShow@p
  6386                           
  6387                           ;main.c: 201:     LATCbits.LATC2 = ~*p++;
  6388  02C7  0877               	movf	digitShow@p,w
  6389  02C8  0086               	movwf	6
  6390  02C9  3001               	movlw	1	; select bank2/3
  6391  02CA  0087               	movwf	7
  6392  02CB  0901               	comf	1,w
  6393  02CC  00F4               	movwf	??_digitShow
  6394  02CD  0DF4               	rlf	??_digitShow,f
  6395  02CE  0DF4               	rlf	??_digitShow,f
  6396  02CF  0020               	movlb	0	; select bank0
  6397  02D0  0818               	movf	24,w	;volatile
  6398  02D1  0674               	xorwf	??_digitShow,w
  6399  02D2  39FB               	andlw	-5
  6400  02D3  0674               	xorwf	??_digitShow,w
  6401  02D4  0098               	movwf	24	;volatile
  6402  02D5  3001               	movlw	1
  6403  02D6  00F4               	movwf	??_digitShow
  6404  02D7  0874               	movf	??_digitShow,w
  6405  02D8  07F7               	addwf	digitShow@p,f
  6406                           
  6407                           ;main.c: 202:     LATCbits.LATC3 = ~*p++;
  6408  02D9  0877               	movf	digitShow@p,w
  6409  02DA  0086               	movwf	6
  6410  02DB  3001               	movlw	1	; select bank2/3
  6411  02DC  0087               	movwf	7
  6412  02DD  0901               	comf	1,w
  6413  02DE  00F4               	movwf	??_digitShow
  6414  02DF  0DF4               	rlf	??_digitShow,f
  6415  02E0  0DF4               	rlf	??_digitShow,f
  6416  02E1  0DF4               	rlf	??_digitShow,f
  6417  02E2  0818               	movf	24,w	;volatile
  6418  02E3  0674               	xorwf	??_digitShow,w
  6419  02E4  39F7               	andlw	-9
  6420  02E5  0674               	xorwf	??_digitShow,w
  6421  02E6  0098               	movwf	24	;volatile
  6422  02E7  3001               	movlw	1
  6423  02E8  00F4               	movwf	??_digitShow
  6424  02E9  0874               	movf	??_digitShow,w
  6425  02EA  07F7               	addwf	digitShow@p,f
  6426                           
  6427                           ;main.c: 203:     LATBbits.LATB3 = ~*p++;
  6428  02EB  0877               	movf	digitShow@p,w
  6429  02EC  0086               	movwf	6
  6430  02ED  3001               	movlw	1	; select bank2/3
  6431  02EE  0087               	movwf	7
  6432  02EF  0901               	comf	1,w
  6433  02F0  00F4               	movwf	??_digitShow
  6434  02F1  0DF4               	rlf	??_digitShow,f
  6435  02F2  0DF4               	rlf	??_digitShow,f
  6436  02F3  0DF4               	rlf	??_digitShow,f
  6437  02F4  0817               	movf	23,w	;volatile
  6438  02F5  0674               	xorwf	??_digitShow,w
  6439  02F6  39F7               	andlw	-9
  6440  02F7  0674               	xorwf	??_digitShow,w
  6441  02F8  0097               	movwf	23	;volatile
  6442  02F9  3001               	movlw	1
  6443  02FA  00F4               	movwf	??_digitShow
  6444  02FB  0874               	movf	??_digitShow,w
  6445  02FC  07F7               	addwf	digitShow@p,f
  6446                           
  6447                           ;main.c: 204:     LATBbits.LATB1 = ~*p++;
  6448  02FD  0877               	movf	digitShow@p,w
  6449  02FE  0086               	movwf	6
  6450  02FF  3001               	movlw	1	; select bank2/3
  6451  0300  0087               	movwf	7
  6452  0301  0901               	comf	1,w
  6453  0302  00F4               	movwf	??_digitShow
  6454  0303  0DF4               	rlf	??_digitShow,f
  6455  0304  0817               	movf	23,w	;volatile
  6456  0305  0674               	xorwf	??_digitShow,w
  6457  0306  39FD               	andlw	-3
  6458  0307  0674               	xorwf	??_digitShow,w
  6459  0308  0097               	movwf	23	;volatile
  6460  0309  3001               	movlw	1
  6461  030A  00F4               	movwf	??_digitShow
  6462  030B  0874               	movf	??_digitShow,w
  6463  030C  07F7               	addwf	digitShow@p,f
  6464                           
  6465                           ;main.c: 205:     LATBbits.LATB0 = ~*p++;
  6466  030D  0877               	movf	digitShow@p,w
  6467  030E  0086               	movwf	6
  6468  030F  3001               	movlw	1	; select bank2/3
  6469  0310  0087               	movwf	7
  6470  0311  0901               	comf	1,w
  6471  0312  00F4               	movwf	??_digitShow
  6472  0313  0817               	movf	23,w	;volatile
  6473  0314  0674               	xorwf	??_digitShow,w
  6474  0315  39FE               	andlw	-2
  6475  0316  0674               	xorwf	??_digitShow,w
  6476  0317  0097               	movwf	23	;volatile
  6477  0318  3001               	movlw	1
  6478  0319  00F4               	movwf	??_digitShow
  6479  031A  0874               	movf	??_digitShow,w
  6480  031B  07F7               	addwf	digitShow@p,f
  6481                           
  6482                           ;main.c: 206:     LATCbits.LATC6 = ~*p++;
  6483  031C  0877               	movf	digitShow@p,w
  6484  031D  0086               	movwf	6
  6485  031E  3001               	movlw	1	; select bank2/3
  6486  031F  0087               	movwf	7
  6487  0320  0901               	comf	1,w
  6488  0321  00F4               	movwf	??_digitShow
  6489  0322  0EF4               	swapf	??_digitShow,f
  6490  0323  0DF4               	rlf	??_digitShow,f
  6491  0324  0DF4               	rlf	??_digitShow,f
  6492  0325  0818               	movf	24,w	;volatile
  6493  0326  0674               	xorwf	??_digitShow,w
  6494  0327  39BF               	andlw	-65
  6495  0328  0674               	xorwf	??_digitShow,w
  6496  0329  0098               	movwf	24	;volatile
  6497  032A  3001               	movlw	1
  6498  032B  00F4               	movwf	??_digitShow
  6499  032C  0874               	movf	??_digitShow,w
  6500  032D  07F7               	addwf	digitShow@p,f
  6501                           
  6502                           ;main.c: 207:     LATBbits.LATB4 = ~*p++;
  6503  032E  0877               	movf	digitShow@p,w
  6504  032F  0086               	movwf	6
  6505  0330  3001               	movlw	1	; select bank2/3
  6506  0331  0087               	movwf	7
  6507  0332  0901               	comf	1,w
  6508  0333  00F4               	movwf	??_digitShow
  6509  0334  0EF4               	swapf	??_digitShow,f
  6510  0335  0817               	movf	23,w	;volatile
  6511  0336  0674               	xorwf	??_digitShow,w
  6512  0337  39EF               	andlw	-17
  6513  0338  0674               	xorwf	??_digitShow,w
  6514  0339  0097               	movwf	23	;volatile
  6515  033A  3001               	movlw	1
  6516  033B  00F4               	movwf	??_digitShow
  6517  033C  0874               	movf	??_digitShow,w
  6518  033D  07F7               	addwf	digitShow@p,f
  6519  033E  0008               	return
  6520  033F                     __end_of_digitShow:	
  6521                           
  6522                           	psect	text17
  6523  0ECE                     __ptext17:	
  6524 ;; *************** function ___lwmod *****************
  6525 ;; Defined at:
  6526 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwmod.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;  divisor         2    4[COMMON] unsigned int 
  6529 ;;  dividend        2    6[COMMON] unsigned int 
  6530 ;; Auto vars:     Size  Location     Type
  6531 ;;  counter         1    9[COMMON] unsigned char 
  6532 ;; Return value:  Size  Location     Type
  6533 ;;                  2    4[COMMON] unsigned int 
  6534 ;; Registers used:
  6535 ;;		wreg, status,2, status,0
  6536 ;; Tracked objects:
  6537 ;;		On entry : 0/0
  6538 ;;		On exit  : 0/0
  6539 ;;		Unchanged: 0/0
  6540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6541 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6542 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6543 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6544 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6545 ;;Total ram usage:        6 bytes
  6546 ;; Hardware stack levels used:    1
  6547 ;; This function calls:
  6548 ;;		Nothing
  6549 ;; This function is called by:
  6550 ;;		_main
  6551 ;;		_RunningADCC
  6552 ;;		_RunningNew
  6553 ;; This function uses a non-reentrant model
  6554 ;;
  6555                           
  6556                           
  6557                           ;psect for function ___lwmod
  6558  0ECE                     ___lwmod:	
  6559                           
  6560                           ;incstack = 0
  6561                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  6562  0ECE  0874               	movf	___lwmod@divisor,w
  6563  0ECF  0475               	iorwf	___lwmod@divisor+1,w
  6564  0ED0  1903               	btfsc	3,2
  6565  0ED1  2EF5               	goto	l2514
  6566  0ED2  01F9               	clrf	___lwmod@counter
  6567  0ED3  0AF9               	incf	___lwmod@counter,f
  6568  0ED4                     l2504:	
  6569  0ED4  1BF5               	btfsc	___lwmod@divisor+1,7
  6570  0ED5  2EE0               	goto	l2506
  6571  0ED6  3001               	movlw	1
  6572  0ED7                     u635:	
  6573  0ED7  35F4               	lslf	___lwmod@divisor,f
  6574  0ED8  0DF5               	rlf	___lwmod@divisor+1,f
  6575  0ED9  0B89               	decfsz	9,f
  6576  0EDA  2ED7               	goto	u635
  6577  0EDB  3001               	movlw	1
  6578  0EDC  00F8               	movwf	??___lwmod
  6579  0EDD  0878               	movf	??___lwmod,w
  6580  0EDE  07F9               	addwf	___lwmod@counter,f
  6581  0EDF  2ED4               	goto	l2504
  6582  0EE0                     l2506:	
  6583  0EE0  0875               	movf	___lwmod@divisor+1,w
  6584  0EE1  0277               	subwf	___lwmod@dividend+1,w
  6585  0EE2  1D03               	skipz
  6586  0EE3  2EE6               	goto	u655
  6587  0EE4  0874               	movf	___lwmod@divisor,w
  6588  0EE5  0276               	subwf	___lwmod@dividend,w
  6589  0EE6                     u655:	
  6590  0EE6  1C03               	skipc
  6591  0EE7  2EEC               	goto	l2510
  6592  0EE8  0874               	movf	___lwmod@divisor,w
  6593  0EE9  02F6               	subwf	___lwmod@dividend,f
  6594  0EEA  0875               	movf	___lwmod@divisor+1,w
  6595  0EEB  3BF7               	subwfb	___lwmod@dividend+1,f
  6596  0EEC                     l2510:	
  6597  0EEC  3001               	movlw	1
  6598  0EED                     u665:	
  6599  0EED  36F5               	lsrf	___lwmod@divisor+1,f
  6600  0EEE  0CF4               	rrf	___lwmod@divisor,f
  6601  0EEF  0B89               	decfsz	9,f
  6602  0EF0  2EED               	goto	u665
  6603  0EF1  3001               	movlw	1
  6604  0EF2  02F9               	subwf	___lwmod@counter,f
  6605  0EF3  1D03               	btfss	3,2
  6606  0EF4  2EE0               	goto	l2506
  6607  0EF5                     l2514:	
  6608  0EF5  0877               	movf	___lwmod@dividend+1,w
  6609  0EF6  00F5               	movwf	?___lwmod+1
  6610  0EF7  0876               	movf	___lwmod@dividend,w
  6611  0EF8  00F4               	movwf	?___lwmod
  6612  0EF9  0008               	return
  6613  0EFA                     __end_of___lwmod:	
  6614                           
  6615                           	psect	text18
  6616  0EFA                     __ptext18:	
  6617 ;; *************** function ___lwdiv *****************
  6618 ;; Defined at:
  6619 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\lwdiv.c"
  6620 ;; Parameters:    Size  Location     Type
  6621 ;;  divisor         2    4[COMMON] unsigned int 
  6622 ;;  dividend        2    6[COMMON] unsigned int 
  6623 ;; Auto vars:     Size  Location     Type
  6624 ;;  quotient        2    9[COMMON] unsigned int 
  6625 ;;  counter         1   11[COMMON] unsigned char 
  6626 ;; Return value:  Size  Location     Type
  6627 ;;                  2    4[COMMON] unsigned int 
  6628 ;; Registers used:
  6629 ;;		wreg, status,2, status,0
  6630 ;; Tracked objects:
  6631 ;;		On entry : 0/0
  6632 ;;		On exit  : 0/0
  6633 ;;		Unchanged: 0/0
  6634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6635 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6636 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6637 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6638 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6639 ;;Total ram usage:        8 bytes
  6640 ;; Hardware stack levels used:    1
  6641 ;; This function calls:
  6642 ;;		Nothing
  6643 ;; This function is called by:
  6644 ;;		_main
  6645 ;;		_RunningADCC
  6646 ;;		_RunningNew
  6647 ;; This function uses a non-reentrant model
  6648 ;;
  6649                           
  6650                           
  6651                           ;psect for function ___lwdiv
  6652  0EFA                     ___lwdiv:	
  6653                           
  6654                           ;incstack = 0
  6655                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  6656  0EFA  01F9               	clrf	___lwdiv@quotient
  6657  0EFB  01FA               	clrf	___lwdiv@quotient+1
  6658  0EFC  0874               	movf	___lwdiv@divisor,w
  6659  0EFD  0475               	iorwf	___lwdiv@divisor+1,w
  6660  0EFE  1903               	btfsc	3,2
  6661  0EFF  2F29               	goto	l2492
  6662  0F00  01FB               	clrf	___lwdiv@counter
  6663  0F01  0AFB               	incf	___lwdiv@counter,f
  6664  0F02                     l2480:	
  6665  0F02  1BF5               	btfsc	___lwdiv@divisor+1,7
  6666  0F03  2F0E               	goto	l2482
  6667  0F04  3001               	movlw	1
  6668  0F05                     u565:	
  6669  0F05  35F4               	lslf	___lwdiv@divisor,f
  6670  0F06  0DF5               	rlf	___lwdiv@divisor+1,f
  6671  0F07  0B89               	decfsz	9,f
  6672  0F08  2F05               	goto	u565
  6673  0F09  3001               	movlw	1
  6674  0F0A  00F8               	movwf	??___lwdiv
  6675  0F0B  0878               	movf	??___lwdiv,w
  6676  0F0C  07FB               	addwf	___lwdiv@counter,f
  6677  0F0D  2F02               	goto	l2480
  6678  0F0E                     l2482:	
  6679  0F0E  3001               	movlw	1
  6680  0F0F                     u585:	
  6681  0F0F  35F9               	lslf	___lwdiv@quotient,f
  6682  0F10  0DFA               	rlf	___lwdiv@quotient+1,f
  6683  0F11  0B89               	decfsz	9,f
  6684  0F12  2F0F               	goto	u585
  6685  0F13  0875               	movf	___lwdiv@divisor+1,w
  6686  0F14  0277               	subwf	___lwdiv@dividend+1,w
  6687  0F15  1D03               	skipz
  6688  0F16  2F19               	goto	u595
  6689  0F17  0874               	movf	___lwdiv@divisor,w
  6690  0F18  0276               	subwf	___lwdiv@dividend,w
  6691  0F19                     u595:	
  6692  0F19  1C03               	skipc
  6693  0F1A  2F20               	goto	l2488
  6694  0F1B  0874               	movf	___lwdiv@divisor,w
  6695  0F1C  02F6               	subwf	___lwdiv@dividend,f
  6696  0F1D  0875               	movf	___lwdiv@divisor+1,w
  6697  0F1E  3BF7               	subwfb	___lwdiv@dividend+1,f
  6698  0F1F  1479               	bsf	___lwdiv@quotient,0
  6699  0F20                     l2488:	
  6700  0F20  3001               	movlw	1
  6701  0F21                     u605:	
  6702  0F21  36F5               	lsrf	___lwdiv@divisor+1,f
  6703  0F22  0CF4               	rrf	___lwdiv@divisor,f
  6704  0F23  0B89               	decfsz	9,f
  6705  0F24  2F21               	goto	u605
  6706  0F25  3001               	movlw	1
  6707  0F26  02FB               	subwf	___lwdiv@counter,f
  6708  0F27  1D03               	btfss	3,2
  6709  0F28  2F0E               	goto	l2482
  6710  0F29                     l2492:	
  6711  0F29  087A               	movf	___lwdiv@quotient+1,w
  6712  0F2A  00F5               	movwf	?___lwdiv+1
  6713  0F2B  0879               	movf	___lwdiv@quotient,w
  6714  0F2C  00F4               	movwf	?___lwdiv
  6715  0F2D  0008               	return
  6716  0F2E                     __end_of___lwdiv:	
  6717                           
  6718                           	psect	text19
  6719  0E3E                     __ptext19:	
  6720 ;; *************** function _ADCC_GetSingleConversion *****************
  6721 ;; Defined at:
  6722 ;;		line 130 in file "mcc_generated_files/adcc.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;  channel         1    wreg     enum E11724
  6725 ;; Auto vars:     Size  Location     Type
  6726 ;;  channel         1    3[COMMON] enum E11724
  6727 ;; Return value:  Size  Location     Type
  6728 ;;                  2    0[COMMON] unsigned short 
  6729 ;; Registers used:
  6730 ;;		wreg
  6731 ;; Tracked objects:
  6732 ;;		On entry : 0/0
  6733 ;;		On exit  : 0/0
  6734 ;;		Unchanged: 0/0
  6735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6736 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6737 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6739 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6740 ;;Total ram usage:        4 bytes
  6741 ;; Hardware stack levels used:    1
  6742 ;; This function calls:
  6743 ;;		Nothing
  6744 ;; This function is called by:
  6745 ;;		_main
  6746 ;;		_RunningADCC
  6747 ;;		_RunningNew
  6748 ;; This function uses a non-reentrant model
  6749 ;;
  6750                           
  6751                           
  6752                           ;psect for function _ADCC_GetSingleConversion
  6753  0E3E                     _ADCC_GetSingleConversion:	
  6754                           
  6755                           ;incstack = 0
  6756                           ; Regs used in _ADCC_GetSingleConversion: [wreg]
  6757                           ;ADCC_GetSingleConversion@channel stored from wreg
  6758  0E3E  00F3               	movwf	ADCC_GetSingleConversion@channel
  6759                           
  6760                           ;mcc_generated_files/adcc.c: 130: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 131: {;mcc_generated_files/adcc.c: 133:     ADPCH = 
      +                          channel;
  6761  0E3F  0873               	movf	ADCC_GetSingleConversion@channel,w
  6762  0E40  0021               	movlb	1	; select bank1
  6763  0E41  009E               	movwf	30	;volatile
  6764                           
  6765                           ;mcc_generated_files/adcc.c: 136:     ADCON0bits.ADON = 1;
  6766  0E42  1793               	bsf	19,7	;volatile
  6767                           
  6768                           ;mcc_generated_files/adcc.c: 139:     ADCON0bits.ADCONT = 0;
  6769  0E43  1313               	bcf	19,6	;volatile
  6770                           
  6771                           ;mcc_generated_files/adcc.c: 142:     ADCON0bits.ADGO = 1;
  6772  0E44  1413               	bsf	19,0	;volatile
  6773                           
  6774                           ;mcc_generated_files/adcc.c: 145:     __nop();
  6775  0E45  0000               	nop
  6776  0E46                     l87:	
  6777                           ;mcc_generated_files/adcc.c: 149:     {;mcc_generated_files/adcc.c: 150:     }
  6778                           
  6779                           
  6780                           ;mcc_generated_files/adcc.c: 148:     while (ADCON0bits.ADGO)
  6781  0E46  0021               	movlb	1	; select bank1
  6782  0E47  1813               	btfsc	19,0	;volatile
  6783  0E48  2E46               	goto	l87
  6784                           
  6785                           ;mcc_generated_files/adcc.c: 154:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  6786  0E49  080D               	movf	13,w	;volatile
  6787  0E4A  00F1               	movwf	?_ADCC_GetSingleConversion+1
  6788  0E4B  080C               	movf	12,w	;volatile
  6789  0E4C  00F0               	movwf	?_ADCC_GetSingleConversion
  6790  0E4D  0008               	return
  6791  0E4E                     __end_of_ADCC_GetSingleConversion:	
  6792                           
  6793                           	psect	text20
  6794  0F66                     __ptext20:	
  6795 ;; *************** function _DisplayOpen *****************
  6796 ;; Defined at:
  6797 ;;		line 314 in file "main.c"
  6798 ;; Parameters:    Size  Location     Type
  6799 ;;		None
  6800 ;; Auto vars:     Size  Location     Type
  6801 ;;		None
  6802 ;; Return value:  Size  Location     Type
  6803 ;;                  1    wreg      void 
  6804 ;; Registers used:
  6805 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6806 ;; Tracked objects:
  6807 ;;		On entry : 0/0
  6808 ;;		On exit  : 0/0
  6809 ;;		Unchanged: 0/0
  6810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6815 ;;Total ram usage:        0 bytes
  6816 ;; Hardware stack levels used:    1
  6817 ;; Hardware stack levels required when called:    2
  6818 ;; This function calls:
  6819 ;;		_OpenShow
  6820 ;; This function is called by:
  6821 ;;		_main
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825                           
  6826                           ;psect for function _DisplayOpen
  6827  0F66                     _DisplayOpen:	
  6828                           
  6829                           ;incstack = 0
  6830                           ; Regs used in _DisplayOpen: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6831                           ;main.c: 315:         do { LATCbits.LATC7 = 1; } while(0);
  6832  0F66  0020               	movlb	0	; select bank0
  6833  0F67  1798               	bsf	24,7	;volatile
  6834                           
  6835                           ;main.c: 316:         do { LATBbits.LATB5 = 0; } while(0);
  6836  0F68  1297               	bcf	23,5	;volatile
  6837                           
  6838                           ;main.c: 317:         OpenShow(3);
  6839  0F69  3003               	movlw	3
  6840  0F6A  3181  2108  318F   	fcall	_OpenShow
  6841                           
  6842                           ;main.c: 318:         _delay((unsigned long)((5)*(1000000/4000.0)));
  6843  0F6D  30FA               	movlw	250
  6844  0F6E                     u1187:	
  6845  0F6E  3200               	nop2
  6846  0F6F  0B89               	decfsz	9,f
  6847  0F70  2F6E               	goto	u1187
  6848  0F71  0020               	movlb	0	; select bank0
  6849  0F72  1697               	bsf	23,5	;volatile
  6850                           
  6851                           ;main.c: 320:         OpenShow(2);
  6852  0F73  3002               	movlw	2
  6853  0F74  3181  2108  318F   	fcall	_OpenShow
  6854  0F77  0020               	movlb	0	; select bank0
  6855  0F78  1697               	bsf	23,5	;volatile
  6856  0F79  1218               	bcf	24,4	;volatile
  6857                           
  6858                           ;main.c: 323:         OpenShow(2);
  6859  0F7A  3002               	movlw	2
  6860  0F7B  3181  2108  318F   	fcall	_OpenShow
  6861                           
  6862                           ;main.c: 324:         _delay((unsigned long)((5)*(1000000/4000.0)));
  6863  0F7E  30FA               	movlw	250
  6864  0F7F                     u1197:	
  6865  0F7F  3200               	nop2
  6866  0F80  0B89               	decfsz	9,f
  6867  0F81  2F7F               	goto	u1197
  6868  0F82  0020               	movlb	0	; select bank0
  6869  0F83  1618               	bsf	24,4	;volatile
  6870                           
  6871                           ;main.c: 326:         OpenShow(1);
  6872  0F84  3001               	movlw	1
  6873  0F85  3181  2108  318F   	fcall	_OpenShow
  6874  0F88  0020               	movlb	0	; select bank0
  6875  0F89  1618               	bsf	24,4	;volatile
  6876  0F8A  1298               	bcf	24,5	;volatile
  6877                           
  6878                           ;main.c: 329:         OpenShow(1);
  6879  0F8B  3001               	movlw	1
  6880  0F8C  3181  2108  318F   	fcall	_OpenShow
  6881                           
  6882                           ;main.c: 330:         _delay((unsigned long)((5)*(1000000/4000.0)));
  6883  0F8F  30FA               	movlw	250
  6884  0F90                     u1207:	
  6885  0F90  3200               	nop2
  6886  0F91  0B89               	decfsz	9,f
  6887  0F92  2F90               	goto	u1207
  6888  0F93  0020               	movlb	0	; select bank0
  6889  0F94  1698               	bsf	24,5	;volatile
  6890                           
  6891                           ;main.c: 332:         OpenShow(0);
  6892  0F95  3000               	movlw	0
  6893  0F96  3181  2108  318F   	fcall	_OpenShow
  6894  0F99  0020               	movlb	0	; select bank0
  6895  0F9A  1698               	bsf	24,5	;volatile
  6896  0F9B  1398               	bcf	24,7	;volatile
  6897                           
  6898                           ;main.c: 335:         OpenShow(0);
  6899  0F9C  3000               	movlw	0
  6900  0F9D  3181  2108  318F   	fcall	_OpenShow
  6901                           
  6902                           ;main.c: 336:         _delay((unsigned long)((5)*(1000000/4000.0)));
  6903  0FA0  30FA               	movlw	250
  6904  0FA1                     u1217:	
  6905  0FA1  3200               	nop2
  6906  0FA2  0B89               	decfsz	9,f
  6907  0FA3  2FA1               	goto	u1217
  6908  0FA4  0020               	movlb	0	; select bank0
  6909  0FA5  1798               	bsf	24,7	;volatile
  6910                           
  6911                           ;main.c: 338:         OpenShow(3);
  6912  0FA6  3003               	movlw	3
  6913  0FA7  3181  2108         	fcall	_OpenShow
  6914  0FA9  0008               	return
  6915  0FAA                     __end_of_DisplayOpen:	
  6916                           
  6917                           	psect	text21
  6918  0108                     __ptext21:	
  6919 ;; *************** function _OpenShow *****************
  6920 ;; Defined at:
  6921 ;;		line 159 in file "main.c"
  6922 ;; Parameters:    Size  Location     Type
  6923 ;;  value           1    wreg     unsigned char 
  6924 ;; Auto vars:     Size  Location     Type
  6925 ;;  value           1    6[COMMON] unsigned char 
  6926 ;;  p               1    7[COMMON] PTR unsigned char 
  6927 ;;		 -> Open(28), 
  6928 ;; Return value:  Size  Location     Type
  6929 ;;                  1    wreg      void 
  6930 ;; Registers used:
  6931 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6932 ;; Tracked objects:
  6933 ;;		On entry : 0/0
  6934 ;;		On exit  : 0/0
  6935 ;;		Unchanged: 0/0
  6936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6938 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6939 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6940 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6941 ;;Total ram usage:        4 bytes
  6942 ;; Hardware stack levels used:    1
  6943 ;; Hardware stack levels required when called:    1
  6944 ;; This function calls:
  6945 ;;		___bmul
  6946 ;; This function is called by:
  6947 ;;		_DisplayOpen
  6948 ;; This function uses a non-reentrant model
  6949 ;;
  6950                           
  6951                           
  6952                           ;psect for function _OpenShow
  6953  0108                     _OpenShow:	
  6954                           
  6955                           ;incstack = 0
  6956                           ; Regs used in _OpenShow: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6957                           ;OpenShow@value stored from wreg
  6958  0108  00F6               	movwf	OpenShow@value
  6959                           
  6960                           ;main.c: 160:     uint8_t *p=&Open[value*7];
  6961  0109  3007               	movlw	7
  6962  010A  00F4               	movwf	??_OpenShow
  6963  010B  0874               	movf	??_OpenShow,w
  6964  010C  00F0               	movwf	___bmul@multiplicand
  6965  010D  0876               	movf	OpenShow@value,w
  6966  010E  318E  264E  3181   	fcall	___bmul
  6967  0111  3EBC               	addlw	(low (_Open| 0))& (0+255)
  6968  0112  00F5               	movwf	??_OpenShow+1
  6969  0113  0875               	movf	??_OpenShow+1,w
  6970  0114  00F7               	movwf	OpenShow@p
  6971                           
  6972                           ;main.c: 161:     LATCbits.LATC2 = *p++;
  6973  0115  0877               	movf	OpenShow@p,w
  6974  0116  0086               	movwf	6
  6975  0117  0187               	clrf	7
  6976  0118  0C01               	rrf	1,w
  6977  0119  0020               	movlb	0	; select bank0
  6978  011A  1C03               	skipc
  6979  011B  1118               	bcf	24,2	;volatile
  6980  011C  1803               	skipnc
  6981  011D  1518               	bsf	24,2	;volatile
  6982  011E  3001               	movlw	1
  6983  011F  00F4               	movwf	??_OpenShow
  6984  0120  0874               	movf	??_OpenShow,w
  6985  0121  07F7               	addwf	OpenShow@p,f
  6986                           
  6987                           ;main.c: 162:     LATCbits.LATC3 = *p++;
  6988  0122  0877               	movf	OpenShow@p,w
  6989  0123  0086               	movwf	6
  6990  0124  0187               	clrf	7
  6991  0125  0C01               	rrf	1,w
  6992  0126  1C03               	skipc
  6993  0127  1198               	bcf	24,3	;volatile
  6994  0128  1803               	skipnc
  6995  0129  1598               	bsf	24,3	;volatile
  6996  012A  3001               	movlw	1
  6997  012B  00F4               	movwf	??_OpenShow
  6998  012C  0874               	movf	??_OpenShow,w
  6999  012D  07F7               	addwf	OpenShow@p,f
  7000                           
  7001                           ;main.c: 163:     LATBbits.LATB3 = *p++;
  7002  012E  0877               	movf	OpenShow@p,w
  7003  012F  0086               	movwf	6
  7004  0130  0187               	clrf	7
  7005  0131  0C01               	rrf	1,w
  7006  0132  1C03               	skipc
  7007  0133  1197               	bcf	23,3	;volatile
  7008  0134  1803               	skipnc
  7009  0135  1597               	bsf	23,3	;volatile
  7010  0136  3001               	movlw	1
  7011  0137  00F4               	movwf	??_OpenShow
  7012  0138  0874               	movf	??_OpenShow,w
  7013  0139  07F7               	addwf	OpenShow@p,f
  7014                           
  7015                           ;main.c: 164:     LATBbits.LATB1 = *p++;
  7016  013A  0877               	movf	OpenShow@p,w
  7017  013B  0086               	movwf	6
  7018  013C  0187               	clrf	7
  7019  013D  0C01               	rrf	1,w
  7020  013E  1C03               	skipc
  7021  013F  1097               	bcf	23,1	;volatile
  7022  0140  1803               	skipnc
  7023  0141  1497               	bsf	23,1	;volatile
  7024  0142  3001               	movlw	1
  7025  0143  00F4               	movwf	??_OpenShow
  7026  0144  0874               	movf	??_OpenShow,w
  7027  0145  07F7               	addwf	OpenShow@p,f
  7028                           
  7029                           ;main.c: 165:     LATBbits.LATB0 = *p++;
  7030  0146  0877               	movf	OpenShow@p,w
  7031  0147  0086               	movwf	6
  7032  0148  0187               	clrf	7
  7033  0149  0C01               	rrf	1,w
  7034  014A  1C03               	skipc
  7035  014B  1017               	bcf	23,0	;volatile
  7036  014C  1803               	skipnc
  7037  014D  1417               	bsf	23,0	;volatile
  7038  014E  3001               	movlw	1
  7039  014F  00F4               	movwf	??_OpenShow
  7040  0150  0874               	movf	??_OpenShow,w
  7041  0151  07F7               	addwf	OpenShow@p,f
  7042                           
  7043                           ;main.c: 166:     LATCbits.LATC6 = *p++;
  7044  0152  0877               	movf	OpenShow@p,w
  7045  0153  0086               	movwf	6
  7046  0154  0187               	clrf	7
  7047  0155  0C01               	rrf	1,w
  7048  0156  1C03               	skipc
  7049  0157  1318               	bcf	24,6	;volatile
  7050  0158  1803               	skipnc
  7051  0159  1718               	bsf	24,6	;volatile
  7052  015A  3001               	movlw	1
  7053  015B  00F4               	movwf	??_OpenShow
  7054  015C  0874               	movf	??_OpenShow,w
  7055  015D  07F7               	addwf	OpenShow@p,f
  7056                           
  7057                           ;main.c: 167:     LATBbits.LATB4 = *p++;
  7058  015E  0877               	movf	OpenShow@p,w
  7059  015F  0086               	movwf	6
  7060  0160  0187               	clrf	7
  7061  0161  0C01               	rrf	1,w
  7062  0162  1C03               	skipc
  7063  0163  1217               	bcf	23,4	;volatile
  7064  0164  1803               	skipnc
  7065  0165  1617               	bsf	23,4	;volatile
  7066  0166  3001               	movlw	1
  7067  0167  00F4               	movwf	??_OpenShow
  7068  0168  0874               	movf	??_OpenShow,w
  7069  0169  07F7               	addwf	OpenShow@p,f
  7070  016A  0008               	return
  7071  016B                     __end_of_OpenShow:	
  7072                           
  7073                           	psect	text22
  7074  0FAA                     __ptext22:	
  7075 ;; *************** function _DisplayDeny *****************
  7076 ;; Defined at:
  7077 ;;		line 370 in file "main.c"
  7078 ;; Parameters:    Size  Location     Type
  7079 ;;		None
  7080 ;; Auto vars:     Size  Location     Type
  7081 ;;  count           2    9[COMMON] int 
  7082 ;; Return value:  Size  Location     Type
  7083 ;;                  1    wreg      void 
  7084 ;; Registers used:
  7085 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7086 ;; Tracked objects:
  7087 ;;		On entry : 0/0
  7088 ;;		On exit  : 0/0
  7089 ;;		Unchanged: 0/0
  7090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7092 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7093 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7094 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7095 ;;Total ram usage:        3 bytes
  7096 ;; Hardware stack levels used:    1
  7097 ;; Hardware stack levels required when called:    2
  7098 ;; This function calls:
  7099 ;;		_DenyShow
  7100 ;; This function is called by:
  7101 ;;		_main
  7102 ;; This function uses a non-reentrant model
  7103 ;;
  7104                           
  7105                           
  7106                           ;psect for function _DisplayDeny
  7107  0FAA                     _DisplayDeny:	
  7108                           
  7109                           ;main.c: 371:     int count = 0;
  7110                           
  7111                           ;incstack = 0
  7112                           ; Regs used in _DisplayDeny: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7113  0FAA  01F9               	clrf	DisplayDeny@count
  7114  0FAB  01FA               	clrf	DisplayDeny@count+1
  7115  0FAC                     l2786:	
  7116                           ;main.c: 372:     while(count < 100){
  7117                           
  7118                           
  7119                           ;main.c: 372:     while(count < 100){
  7120  0FAC  087A               	movf	DisplayDeny@count+1,w
  7121  0FAD  3A80               	xorlw	128
  7122  0FAE  00F8               	movwf	??_DisplayDeny
  7123  0FAF  3080               	movlw	128
  7124  0FB0  0278               	subwf	??_DisplayDeny,w
  7125  0FB1  1D03               	skipz
  7126  0FB2  2FB5               	goto	u765
  7127  0FB3  3064               	movlw	100
  7128  0FB4  0279               	subwf	DisplayDeny@count,w
  7129  0FB5                     u765:	
  7130  0FB5  1803               	btfsc	3,0
  7131  0FB6  0008               	return
  7132                           
  7133                           ;main.c: 373:         do { LATCbits.LATC7 = 1; } while(0);
  7134  0FB7  0020               	movlb	0	; select bank0
  7135  0FB8  1798               	bsf	24,7	;volatile
  7136                           
  7137                           ;main.c: 374:         do { LATBbits.LATB5 = 0; } while(0);
  7138  0FB9  1297               	bcf	23,5	;volatile
  7139                           
  7140                           ;main.c: 375:         DenyShow(3);
  7141  0FBA  3003               	movlw	3
  7142  0FBB  3180  20A5  318F   	fcall	_DenyShow
  7143                           
  7144                           ;main.c: 376:         _delay((unsigned long)((5)*(1000000/4000.0)));
  7145  0FBE  30FA               	movlw	250
  7146  0FBF                     u1227:	
  7147  0FBF  3200               	nop2
  7148  0FC0  0B89               	decfsz	9,f
  7149  0FC1  2FBF               	goto	u1227
  7150  0FC2  0020               	movlb	0	; select bank0
  7151  0FC3  1697               	bsf	23,5	;volatile
  7152                           
  7153                           ;main.c: 378:         DenyShow(2);
  7154  0FC4  3002               	movlw	2
  7155  0FC5  3180  20A5  318F   	fcall	_DenyShow
  7156  0FC8  0020               	movlb	0	; select bank0
  7157  0FC9  1697               	bsf	23,5	;volatile
  7158  0FCA  1218               	bcf	24,4	;volatile
  7159                           
  7160                           ;main.c: 381:         DenyShow(2);
  7161  0FCB  3002               	movlw	2
  7162  0FCC  3180  20A5  318F   	fcall	_DenyShow
  7163                           
  7164                           ;main.c: 382:         _delay((unsigned long)((5)*(1000000/4000.0)));
  7165  0FCF  30FA               	movlw	250
  7166  0FD0                     u1237:	
  7167  0FD0  3200               	nop2
  7168  0FD1  0B89               	decfsz	9,f
  7169  0FD2  2FD0               	goto	u1237
  7170  0FD3  0020               	movlb	0	; select bank0
  7171  0FD4  1618               	bsf	24,4	;volatile
  7172                           
  7173                           ;main.c: 384:         DenyShow(1);
  7174  0FD5  3001               	movlw	1
  7175  0FD6  3180  20A5  318F   	fcall	_DenyShow
  7176  0FD9  0020               	movlb	0	; select bank0
  7177  0FDA  1618               	bsf	24,4	;volatile
  7178  0FDB  1298               	bcf	24,5	;volatile
  7179                           
  7180                           ;main.c: 387:         DenyShow(1);
  7181  0FDC  3001               	movlw	1
  7182  0FDD  3180  20A5  318F   	fcall	_DenyShow
  7183                           
  7184                           ;main.c: 388:         _delay((unsigned long)((5)*(1000000/4000.0)));
  7185  0FE0  30FA               	movlw	250
  7186  0FE1                     u1247:	
  7187  0FE1  3200               	nop2
  7188  0FE2  0B89               	decfsz	9,f
  7189  0FE3  2FE1               	goto	u1247
  7190  0FE4  0020               	movlb	0	; select bank0
  7191  0FE5  1698               	bsf	24,5	;volatile
  7192                           
  7193                           ;main.c: 390:         DenyShow(0);
  7194  0FE6  3000               	movlw	0
  7195  0FE7  3180  20A5  318F   	fcall	_DenyShow
  7196  0FEA  0020               	movlb	0	; select bank0
  7197  0FEB  1698               	bsf	24,5	;volatile
  7198  0FEC  1398               	bcf	24,7	;volatile
  7199                           
  7200                           ;main.c: 393:         DenyShow(0);
  7201  0FED  3000               	movlw	0
  7202  0FEE  3180  20A5  318F   	fcall	_DenyShow
  7203                           
  7204                           ;main.c: 394:         _delay((unsigned long)((5)*(1000000/4000.0)));
  7205  0FF1  30FA               	movlw	250
  7206  0FF2                     u1257:	
  7207  0FF2  3200               	nop2
  7208  0FF3  0B89               	decfsz	9,f
  7209  0FF4  2FF2               	goto	u1257
  7210  0FF5  0020               	movlb	0	; select bank0
  7211  0FF6  1798               	bsf	24,7	;volatile
  7212                           
  7213                           ;main.c: 396:         DenyShow(3);
  7214  0FF7  3003               	movlw	3
  7215  0FF8  3180  20A5  318F   	fcall	_DenyShow
  7216                           
  7217                           ;main.c: 397:         count++;
  7218  0FFB  3001               	movlw	1
  7219  0FFC  07F9               	addwf	DisplayDeny@count,f
  7220  0FFD  3000               	movlw	0
  7221  0FFE  3DFA               	addwfc	DisplayDeny@count+1,f
  7222  0FFF  2FAC               	goto	l2786
  7223  1000                     __end_of_DisplayDeny:	
  7224                           
  7225                           	psect	text23
  7226  00A5                     __ptext23:	
  7227 ;; *************** function _DenyShow *****************
  7228 ;; Defined at:
  7229 ;;		line 179 in file "main.c"
  7230 ;; Parameters:    Size  Location     Type
  7231 ;;  value           1    wreg     unsigned char 
  7232 ;; Auto vars:     Size  Location     Type
  7233 ;;  value           1    6[COMMON] unsigned char 
  7234 ;;  p               1    7[COMMON] PTR unsigned char 
  7235 ;;		 -> Deny(28), 
  7236 ;; Return value:  Size  Location     Type
  7237 ;;                  1    wreg      void 
  7238 ;; Registers used:
  7239 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7240 ;; Tracked objects:
  7241 ;;		On entry : 0/0
  7242 ;;		On exit  : 0/0
  7243 ;;		Unchanged: 0/0
  7244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7246 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7247 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7248 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7249 ;;Total ram usage:        4 bytes
  7250 ;; Hardware stack levels used:    1
  7251 ;; Hardware stack levels required when called:    1
  7252 ;; This function calls:
  7253 ;;		___bmul
  7254 ;; This function is called by:
  7255 ;;		_DisplayDeny
  7256 ;; This function uses a non-reentrant model
  7257 ;;
  7258                           
  7259                           
  7260                           ;psect for function _DenyShow
  7261  00A5                     _DenyShow:	
  7262                           
  7263                           ;incstack = 0
  7264                           ; Regs used in _DenyShow: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7265                           ;DenyShow@value stored from wreg
  7266  00A5  00F6               	movwf	DenyShow@value
  7267                           
  7268                           ;main.c: 180:     uint8_t *p=&Deny[value*7];
  7269  00A6  3007               	movlw	7
  7270  00A7  00F4               	movwf	??_DenyShow
  7271  00A8  0874               	movf	??_DenyShow,w
  7272  00A9  00F0               	movwf	___bmul@multiplicand
  7273  00AA  0876               	movf	DenyShow@value,w
  7274  00AB  318E  264E  3180   	fcall	___bmul
  7275  00AE  3EA0               	addlw	(low (_Deny| 0))& (0+255)
  7276  00AF  00F5               	movwf	??_DenyShow+1
  7277  00B0  0875               	movf	??_DenyShow+1,w
  7278  00B1  00F7               	movwf	DenyShow@p
  7279                           
  7280                           ;main.c: 181:     LATCbits.LATC2 = *p++;
  7281  00B2  0877               	movf	DenyShow@p,w
  7282  00B3  0086               	movwf	6
  7283  00B4  0187               	clrf	7
  7284  00B5  0C01               	rrf	1,w
  7285  00B6  0020               	movlb	0	; select bank0
  7286  00B7  1C03               	skipc
  7287  00B8  1118               	bcf	24,2	;volatile
  7288  00B9  1803               	skipnc
  7289  00BA  1518               	bsf	24,2	;volatile
  7290  00BB  3001               	movlw	1
  7291  00BC  00F4               	movwf	??_DenyShow
  7292  00BD  0874               	movf	??_DenyShow,w
  7293  00BE  07F7               	addwf	DenyShow@p,f
  7294                           
  7295                           ;main.c: 182:     LATCbits.LATC3 = *p++;
  7296  00BF  0877               	movf	DenyShow@p,w
  7297  00C0  0086               	movwf	6
  7298  00C1  0187               	clrf	7
  7299  00C2  0C01               	rrf	1,w
  7300  00C3  1C03               	skipc
  7301  00C4  1198               	bcf	24,3	;volatile
  7302  00C5  1803               	skipnc
  7303  00C6  1598               	bsf	24,3	;volatile
  7304  00C7  3001               	movlw	1
  7305  00C8  00F4               	movwf	??_DenyShow
  7306  00C9  0874               	movf	??_DenyShow,w
  7307  00CA  07F7               	addwf	DenyShow@p,f
  7308                           
  7309                           ;main.c: 183:     LATBbits.LATB3 = *p++;
  7310  00CB  0877               	movf	DenyShow@p,w
  7311  00CC  0086               	movwf	6
  7312  00CD  0187               	clrf	7
  7313  00CE  0C01               	rrf	1,w
  7314  00CF  1C03               	skipc
  7315  00D0  1197               	bcf	23,3	;volatile
  7316  00D1  1803               	skipnc
  7317  00D2  1597               	bsf	23,3	;volatile
  7318  00D3  3001               	movlw	1
  7319  00D4  00F4               	movwf	??_DenyShow
  7320  00D5  0874               	movf	??_DenyShow,w
  7321  00D6  07F7               	addwf	DenyShow@p,f
  7322                           
  7323                           ;main.c: 184:     LATBbits.LATB1 = *p++;
  7324  00D7  0877               	movf	DenyShow@p,w
  7325  00D8  0086               	movwf	6
  7326  00D9  0187               	clrf	7
  7327  00DA  0C01               	rrf	1,w
  7328  00DB  1C03               	skipc
  7329  00DC  1097               	bcf	23,1	;volatile
  7330  00DD  1803               	skipnc
  7331  00DE  1497               	bsf	23,1	;volatile
  7332  00DF  3001               	movlw	1
  7333  00E0  00F4               	movwf	??_DenyShow
  7334  00E1  0874               	movf	??_DenyShow,w
  7335  00E2  07F7               	addwf	DenyShow@p,f
  7336                           
  7337                           ;main.c: 185:     LATBbits.LATB0 = *p++;
  7338  00E3  0877               	movf	DenyShow@p,w
  7339  00E4  0086               	movwf	6
  7340  00E5  0187               	clrf	7
  7341  00E6  0C01               	rrf	1,w
  7342  00E7  1C03               	skipc
  7343  00E8  1017               	bcf	23,0	;volatile
  7344  00E9  1803               	skipnc
  7345  00EA  1417               	bsf	23,0	;volatile
  7346  00EB  3001               	movlw	1
  7347  00EC  00F4               	movwf	??_DenyShow
  7348  00ED  0874               	movf	??_DenyShow,w
  7349  00EE  07F7               	addwf	DenyShow@p,f
  7350                           
  7351                           ;main.c: 186:     LATCbits.LATC6 = *p++;
  7352  00EF  0877               	movf	DenyShow@p,w
  7353  00F0  0086               	movwf	6
  7354  00F1  0187               	clrf	7
  7355  00F2  0C01               	rrf	1,w
  7356  00F3  1C03               	skipc
  7357  00F4  1318               	bcf	24,6	;volatile
  7358  00F5  1803               	skipnc
  7359  00F6  1718               	bsf	24,6	;volatile
  7360  00F7  3001               	movlw	1
  7361  00F8  00F4               	movwf	??_DenyShow
  7362  00F9  0874               	movf	??_DenyShow,w
  7363  00FA  07F7               	addwf	DenyShow@p,f
  7364                           
  7365                           ;main.c: 187:     LATBbits.LATB4 = *p++;
  7366  00FB  0877               	movf	DenyShow@p,w
  7367  00FC  0086               	movwf	6
  7368  00FD  0187               	clrf	7
  7369  00FE  0C01               	rrf	1,w
  7370  00FF  1C03               	skipc
  7371  0100  1217               	bcf	23,4	;volatile
  7372  0101  1803               	skipnc
  7373  0102  1617               	bsf	23,4	;volatile
  7374  0103  3001               	movlw	1
  7375  0104  00F4               	movwf	??_DenyShow
  7376  0105  0874               	movf	??_DenyShow,w
  7377  0106  07F7               	addwf	DenyShow@p,f
  7378  0107  0008               	return
  7379  0108                     __end_of_DenyShow:	
  7380                           
  7381                           	psect	text24
  7382  0E4E                     __ptext24:	
  7383 ;; *************** function ___bmul *****************
  7384 ;; Defined at:
  7385 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul8.c"
  7386 ;; Parameters:    Size  Location     Type
  7387 ;;  multiplier      1    wreg     unsigned char 
  7388 ;;  multiplicand    1    0[COMMON] unsigned char 
  7389 ;; Auto vars:     Size  Location     Type
  7390 ;;  multiplier      1    3[COMMON] unsigned char 
  7391 ;;  product         1    2[COMMON] unsigned char 
  7392 ;; Return value:  Size  Location     Type
  7393 ;;                  1    wreg      unsigned char 
  7394 ;; Registers used:
  7395 ;;		wreg, status,2, status,0
  7396 ;; Tracked objects:
  7397 ;;		On entry : 0/0
  7398 ;;		On exit  : 0/0
  7399 ;;		Unchanged: 0/0
  7400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7401 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7402 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7403 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7404 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7405 ;;Total ram usage:        4 bytes
  7406 ;; Hardware stack levels used:    1
  7407 ;; This function calls:
  7408 ;;		Nothing
  7409 ;; This function is called by:
  7410 ;;		_OpenShow
  7411 ;;		_LockShow
  7412 ;;		_DenyShow
  7413 ;;		_digitShow
  7414 ;; This function uses a non-reentrant model
  7415 ;;
  7416                           
  7417                           
  7418                           ;psect for function ___bmul
  7419  0E4E                     ___bmul:	
  7420                           
  7421                           ;incstack = 0
  7422                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7423                           ;___bmul@multiplier stored from wreg
  7424  0E4E  00F3               	movwf	___bmul@multiplier
  7425  0E4F  01F2               	clrf	___bmul@product
  7426  0E50                     l2118:	
  7427  0E50  1C73               	btfss	___bmul@multiplier,0
  7428  0E51  2E56               	goto	l2122
  7429  0E52  0870               	movf	___bmul@multiplicand,w
  7430  0E53  00F1               	movwf	??___bmul
  7431  0E54  0871               	movf	??___bmul,w
  7432  0E55  07F2               	addwf	___bmul@product,f
  7433  0E56                     l2122:	
  7434  0E56  1003               	clrc
  7435  0E57  0DF0               	rlf	___bmul@multiplicand,f
  7436  0E58  1003               	clrc
  7437  0E59  0CF3               	rrf	___bmul@multiplier,f
  7438  0E5A  0873               	movf	___bmul@multiplier,w
  7439  0E5B  1D03               	btfss	3,2
  7440  0E5C  2E50               	goto	l2118
  7441  0E5D  0872               	movf	___bmul@product,w
  7442  0E5E  0008               	return
  7443  0E5F                     __end_of___bmul:	
  7444  007E                     btemp	set	126	;btemp
  7445  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        364
    BSS         0
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     49      77
    BANK1            80      0      56
    BANK2            80      0      70
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            78      0       0
    BANK10            0      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    RunningNew@num4	PTR int  size(1) Largest target is 2
		 -> main@num4(BANK0[2]), 

    RunningNew@num3	PTR int  size(1) Largest target is 2
		 -> main@num3(BANK0[2]), 

    RunningNew@num2	PTR int  size(1) Largest target is 2
		 -> main@num2(BANK0[2]), 

    RunningNew@num1	PTR int  size(1) Largest target is 2
		 -> main@num1(BANK0[2]), 

    RunningNew@value	PTR int  size(2) Largest target is 4096
		 -> RAM(DATA[4096]), 

    RunningADCC@combo4	PTR int  size(1) Largest target is 2
		 -> main@combo4(BANK0[2]), 

    RunningADCC@combo3	PTR int  size(1) Largest target is 2
		 -> main@combo3(BANK0[2]), 

    RunningADCC@combo2	PTR int  size(1) Largest target is 2
		 -> main@combo2(BANK0[2]), 

    RunningADCC@combo1	PTR int  size(1) Largest target is 2
		 -> main@combo1(BANK0[2]), 

    SetShow@p	PTR unsigned char  size(2) Largest target is 105
		 -> Set(BIGRAM[105]), 

    digitShow@p	PTR unsigned char  size(1) Largest target is 70
		 -> matrix(BANK2[70]), 

    NewShow@p	PTR unsigned char  size(2) Largest target is 105
		 -> New(BIGRAM[105]), 

    DenyShow@p	PTR unsigned char  size(1) Largest target is 28
		 -> Deny(BANK1[28]), 

    LockShow@p	PTR unsigned char  size(1) Largest target is 28
		 -> Lock(BANK0[28]), 

    OpenShow@p	PTR unsigned char  size(1) Largest target is 28
		 -> Open(BANK1[28]), 


Critical Paths under _main in COMMON

    _main->_RunningADCC
    _main->_Scrollnew
    _Scrollnew->_NewShow
    _NewShow->___wmul
    _RunningNew->_ScrollSet
    _ScrollSet->_SetShow
    _SetShow->___wmul
    _DisplayLock->_LockShow
    _LockShow->___bmul
    _RunningADCC->___lwdiv
    _digitShow->___bmul
    ___lwmod->_ADCC_GetSingleConversion
    ___lwdiv->_ADCC_GetSingleConversion
    _DisplayOpen->_OpenShow
    _OpenShow->___bmul
    _DisplayDeny->_DenyShow
    _DenyShow->___bmul

Critical Paths under _main in BANK0

    _main->_RunningNew
    _RunningNew->_ScrollSet

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                30    30      0   13251
                                             19 BANK0     30    30      0
           _ADCC_GetSingleConversion
                        _DisplayDeny
                        _DisplayLock
                        _DisplayOpen
                              _Reset
                        _RunningADCC
                         _RunningNew
                  _SYSTEM_Initialize
                          _Scrollnew
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _Scrollnew                                            7     7      0    1141
                                             13 COMMON     1     1      0
                                              0 BANK0      6     6      0
                            _NewShow
 ---------------------------------------------------------------------------------
 (2) _NewShow                                              7     7      0     980
                                              6 COMMON     7     7      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                    _ADCC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RunningNew                                          13     5      8    4026
                                              6 BANK0     13     5      8
           _ADCC_GetSingleConversion
                        _DisplayLock
                              _Reset
                          _ScrollSet
                            ___lwdiv
                            ___lwmod
                          _digitShow
 ---------------------------------------------------------------------------------
 (2) _ScrollSet                                            7     7      0    1141
                                             13 COMMON     1     1      0
                                              0 BANK0      6     6      0
                            _SetShow
 ---------------------------------------------------------------------------------
 (3) _SetShow                                              7     7      0     980
                                              6 COMMON     7     7      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     796
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) _Reset                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DisplayLock                                          3     3      0     404
                                              8 COMMON     3     3      0
                           _LockShow
 ---------------------------------------------------------------------------------
 (3) _LockShow                                             4     4      0     380
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _RunningADCC                                         12     2     10    4380
                                             12 COMMON     2     2      0
                                              0 BANK0     10     0     10
           _ADCC_GetSingleConversion
                            ___lwdiv
                            ___lwmod
                          _digitShow
 ---------------------------------------------------------------------------------
 (2) _digitShow                                            4     4      0     380
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4     615
                                              4 COMMON     6     2      4
           _ADCC_GetSingleConversion (ARG)
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     618
                                              4 COMMON     8     4      4
           _ADCC_GetSingleConversion (ARG)
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetSingleConversion                             4     1      3      22
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _DisplayOpen                                          0     0      0     380
                           _OpenShow
 ---------------------------------------------------------------------------------
 (2) _OpenShow                                             4     4      0     380
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _DisplayDeny                                          3     3      0     404
                                              8 COMMON     3     3      0
                           _DenyShow
 ---------------------------------------------------------------------------------
 (2) _DenyShow                                             4     4      0     380
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     196
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCC_GetSingleConversion
   _DisplayDeny
     _DenyShow
       ___bmul
   _DisplayLock
     _LockShow
       ___bmul
   _DisplayOpen
     _OpenShow
       ___bmul
   _Reset
   _RunningADCC
     _ADCC_GetSingleConversion
     ___lwdiv
       _ADCC_GetSingleConversion (ARG)
     ___lwmod
       _ADCC_GetSingleConversion (ARG)
     _digitShow
       ___bmul
   _RunningNew
     _ADCC_GetSingleConversion
     _DisplayLock
       _LockShow
         ___bmul
     _Reset
     _ScrollSet
       _SetShow
         ___wmul
     ___lwdiv
       _ADCC_GetSingleConversion (ARG)
     ___lwmod
       _ADCC_GetSingleConversion (ARG)
     _digitShow
       ___bmul
   _SYSTEM_Initialize
     _ADCC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
   _Scrollnew
     _NewShow
       ___wmul
   ___lwdiv
     _ADCC_GetSingleConversion (ARG)
   ___lwmod
     _ADCC_GetSingleConversion (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     31      4D       5       96.3%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      38       7       70.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      46       9       87.5%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      D9      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               4E      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BANK10               0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      D9      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat Apr 20 14:02:55 2019

                   ___bmul@product 0072                        __CFG_CP$OFF 0000  
                               l87 0E46                ___wmul@multiplicand 0072  
                RunningNew@working 002D                        __CFG_LVP$ON 0000  
                Scrollnew@scrl_len 0024                                l501 0346  
                              l522 03B5                                l524 0371  
                              l298 0743                                l555 0424  
                              l557 03E0                                l575 0445  
                              l754 0E7D                                l594 0470  
                     __CFG_CPD$OFF 0000                                u515 005A  
                              u605 0F21                                u525 042E  
                              u455 0E7E                                u535 0440  
                              u465 0E83                                u545 044E  
                              u705 034F                                u635 0ED7  
                              u715 03BF                                u565 0F05  
                              u725 03D2                                u805 0708  
                              u655 0EE6                                u735 056A  
                              u585 0F0F                                u665 0EED  
                              u595 0F19                                u907 0374  
                              u765 0FB5                                u917 037E  
                              u927 0384                                u775 07B5  
                              u937 038E                                u785 06F8  
                              u947 0394                                u795 0700  
                              u957 039D                                u877 0719  
                              u967 03A3                                u887 0359  
                              u977 03AD                                u897 0366  
                              u987 0579                                u997 058A  
                              _New 2387                                _Set 231E  
          __size_of_PMD_Initialize 0008                       __CFG_BORV$LO 0000  
                 DisplayLock@count 0079                                wreg 0009  
                     __CFG_ZCD$OFF 0000                               l2104 0E77  
                             l2122 0E56                               l2118 0E50  
                             l2510 0EEC                               l2504 0ED4  
                             l2506 0EE0                               l2514 0EF5  
                             l2710 05A0                               l2480 0F02  
                             l2296 0051                               l2456 0437  
                             l2482 0F0E                               l2570 0501  
                             l2562 04EF                               l2722 05BB  
                             l2714 05A9                               l2492 0F29  
                             l2580 051F                               l2566 04F8  
                             l2558 04E6                               l2582 0476  
                             l2910 05D2                               l2718 05B2  
                             l2734 05CC                               l2488 0F20  
                             l2912 0511                               l2736 05E0  
                             l2824 06F2                               l2816 076F  
                             l2578 050B                               l2738 052A  
                             l2674 03C8                               l2856 07B7  
                             l2786 0FAC                               u1007 059A  
                             u1017 03E3                               u1107 0465  
                             u1027 03ED                               u1117 0064  
                             u1037 03F3                               u1207 0F90  
                             u1127 0075                               u1047 03FD  
                             u1217 0FA1                               u1137 0086  
                             u1057 0403                               u1227 0FBF  
                             u1147 0097                               u1067 040C  
                             u1237 0FD0                               u1157 04C0  
                             u1077 0412                               _LATA 0016  
                             _LATB 0017                               u1247 0FE1  
                             u1167 04D1                               u1087 041C  
                             _LATC 0018                               u1257 0FF2  
                             u1177 04E0                               u1097 0458  
                             u1187 0F6E                               u1197 0F7F  
                             _PMD0 0796                               _PMD1 0797  
                             _PMD2 0798                               _PMD3 0799  
                             _PMD4 079A                               _PMD5 079B  
                             _WPUA 0F39                               _WPUB 0F44  
                             _WPUC 0F4F                               _WPUE 0F65  
                             _Deny 00A0                               _Lock 0051  
                     __CFG_WRT$OFF 0000                               _Open 00BC  
                    __CFG_FCMEN$ON 0000                               _main 06B7  
                             fsr0h 0005                               fsr1h 0007  
                             fsr0l 0004                               indf1 0001  
                             fsr1l 0006                               btemp 007E  
                    __CFG_BOREN$ON 0000                               start 0002  
                      main@running 0042                        main@working 0039  
                    __CFG_CSWEN$ON 0000                  ___bmul@multiplier 0073  
                    __CFG_MCLRE$ON 0000                    __end_of_NewShow 02BA  
                  __end_of_SetShow 0244                  ScrollSet@scrl_len 0024  
   __size_of_OSCILLATOR_Initialize 0009                __end_of_DisplayDeny 1000  
    __end_of_OSCILLATOR_Initialize 0E1C                __end_of_DisplayLock 00A5  
              Scrollnew@scrl_speed 0022                __end_of_DisplayOpen 0FAA  
                            _ADACQ 009D                              _ADCAP 009B  
                            _ADACT 0099                              ?_main 0070  
                            _ADCLK 0098                              _ADCNT 010C  
                            _ADPCH 009E                              _ADREF 009A  
                            _ADPRE 009C                      __CFG_WDTE$OFF 0000  
                            _ADRPT 010D                     __CFG_DEBUG$OFF 0000  
                  __end_of___lwdiv 0F2E                    __end_of___lwmod 0EFA  
                            _OSCEN 0891                              _TRISA 0011  
                            _TRISB 0012                              _TRISC 0013  
                            _Reset 0E1C                              status 0003  
                            wtemp0 007E                   __end_of_DenyShow 0108  
                  __initialization 07C6                       __end_of_main 07C6  
                 __end_of_LockShow 01CE                             ??_main 0033  
                 __end_of_OpenShow 016B                      OpenShow@value 0076  
                           ?_Reset 0070                             _ADACCH 0091  
                           _ADACCL 0090                             _ADCON0 0093  
                           _ADCON1 0094                             _ADCON2 0095  
                           _ADCON3 0096                             _ADERRH 0117  
                           _ADERRL 0116                             _ADLTHH 010F  
                           _ADLTHL 010E                             _ADRESH 008D  
                           _ADRESL 008C                             _ADSTAT 0097  
                           _ADUTHH 0111                             _ADUTHL 0110  
                           _ANSELA 0F38                             _ANSELB 0F43  
                           _ANSELC 0F4E                 __CFG_RSTOSC$HFINT1 0000  
                           _ODCONA 0F3A                             _ODCONB 0F45  
                           _ODCONC 0F50                     __CFG_WDTCCS$SC 0000  
                           _OSCFRQ 0893                          ??_NewShow 0076  
                   __CFG_PWRTE$OFF 0000                          ??_SetShow 0076  
                      _DisplayDeny 0FAA                        _DisplayLock 004F  
                      _DisplayOpen 0F66                             ___bmul 0E4E  
                           ___wmul 0E75                     __CFG_STVREN$ON 0000  
                        ??___lwdiv 0078                          ??___lwmod 0078  
                           _matrix 0120                 __size_of_ScrollSet 009C  
               __size_of_Scrollnew 009B                       __pdataBIGRAM 231E  
                  _ADCC_Initialize 0E5F                     _PMD_Initialize 0E0B  
                RunningADCC@combo1 0021                  RunningADCC@combo2 0022  
                RunningADCC@combo3 0023                  RunningADCC@combo4 0024  
__size_of_ADCC_GetSingleConversion 0010          ?_ADCC_GetSingleConversion 0070  
                _SYSTEM_Initialize 0E26            __end_of__initialization 07FD  
               ?_SYSTEM_Initialize 0070                         _RunningNew 0524  
              ___bmul@multiplicand 0070                     __pcstackCOMMON 0070  
                    __end_of_Reset 0E26                       __pidataBANK0 0E90  
                     __pidataBANK1 0F2E                       __pidataBANK2 0009  
              ??_SYSTEM_Initialize 0070             __end_of_PMD_Initialize 0E13  
               __size_of_digitShow 0085                            ??_Reset 0070  
                        ?_DenyShow 0070                      ??_RunningADCC 007C  
        __end_of_SYSTEM_Initialize 0E32                       NewShow@value 007A  
                  RunningADCC@tens 0020                          ?_LockShow 0070  
                __end_of_ScrollSet 0476                  __end_of_Scrollnew 03DA  
              ScrollSet@scrl_speed 0022                          ?_OpenShow 0070  
                       __pmaintext 06B7                            ?___bmul 0070  
                          ?___wmul 0070                    __CFG_PPS1WAY$ON 0000  
          __end_of_ADCC_Initialize 0E75                            _ADFLTRH 0115  
                          _ADFLTRL 0114                            _ADPREVH 008F  
                          _ADPREVL 008E                            _ADSTPTH 0113  
                          _ADSTPTL 0112                    ?_PMD_Initialize 0070  
                          _OSCCON1 088D                            _OSCCON3 088F  
                       ??_DenyShow 0074                            _OSCTUNE 0892  
                          _SLRCONA 0F3B                            _SLRCONB 0F46  
                          _SLRCONC 0F51                         ??_LockShow 0074  
                      ?_RunningNew 0026                __end_of_RunningADCC 0524  
                __end_of_digitShow 033F                     digitShow@value 0076  
                          _NewShow 0244                         ??_OpenShow 0074  
                          _SetShow 01CE               __CFG_SCANE$available 0000  
                  __size_of___bmul 0011                    __size_of___wmul 001B  
                          ___lwdiv 0EFA                            ___lwmod 0ECE  
                    DenyShow@value 0076                            __ptext1 033F  
                          __ptext2 0244                            __ptext3 0E26  
                          __ptext4 0E0B                            __ptext5 0EAC  
                          __ptext6 0E13                            __ptext7 0E5F  
                          __ptext8 0524                            __ptext9 03DA  
            _OSCILLATOR_Initialize 0E13           ??_PIN_MANAGER_Initialize 0070  
       __size_of_SYSTEM_Initialize 000C               end_of_initialization 07FD  
                          init_ram 0E32                            initloop 0E33  
                       digitShow@p 0077                          DenyShow@p 0077  
                     ?_DisplayDeny 0070                       ?_DisplayLock 0070  
                     ?_DisplayOpen 0070                   ?_ADCC_Initialize 0070  
 __end_of_ADCC_GetSingleConversion 0E4E              __CFG_WDTCPS$WDTCPS_31 0000  
                        _PORTAbits 000C                 RunningADCC@running 0029  
              __size_of_RunningNew 00C1                    RunningNew@digit 0032  
                  RunningNew@count 0030                    RunningNew@value 002B  
                      _RunningADCC 0476                   __CFG_FEXTOSC$OFF 0000  
                       main@combo1 0045                         main@combo2 0047  
                       main@combo3 0049                         main@combo4 004B  
                        LockShow@p 0077                     __end_of___bmul 0E5F  
                    __pidataBIGRAM 05E5                     __end_of___wmul 0E90  
           ?_OSCILLATOR_Initialize 0070                start_initialization 07C6  
                    LockShow@value 0076    __size_of_PIN_MANAGER_Initialize 0022  
                        OpenShow@p 0077                  __size_of_DenyShow 0063  
                __size_of_LockShow 0063                   __CFG_LPBOREN$OFF 0000  
                     SetShow@value 007A                          _ScrollSet 03DA  
                        _Scrollnew 033F                           ??___bmul 0071  
                 ??_PMD_Initialize 0070                  __size_of_OpenShow 0063  
                         ??___wmul 0074                        __pdataBANK0 0051  
                      __pdataBANK1 00A0                        __pdataBANK2 0120  
                 RunningADCC@digit 007D                   RunningADCC@count 0025  
                 RunningADCC@value 0027           _ADCC_GetSingleConversion 0E3E  
                        ___latbits 0002                      __pcstackBANK0 0020  
                     ??_RunningNew 002E                           ?_NewShow 0070  
                 ___lwdiv@dividend 0076             _PIN_MANAGER_Initialize 0EAC  
                         ?_SetShow 0070                         ?_ScrollSet 0070  
                       ?_Scrollnew 0070                          _digitShow 02BA  
  ADCC_GetSingleConversion@channel 0073               __size_of_DisplayDeny 0056  
                         ?___lwdiv 0074               __size_of_DisplayLock 0056  
                         ?___lwmod 0074               __size_of_DisplayOpen 0044  
               __end_of_RunningNew 05E5                     __size_of_Reset 000A  
                 ___lwdiv@quotient 0079                     ___wmul@product 0074  
                         _LATAbits 0016                           _LATBbits 0017  
                         _LATCbits 0018                         ?_digitShow 0070  
                   RunningNew@num1 0027                     RunningNew@num2 0028  
                   RunningNew@num3 0029                     RunningNew@num4 002A  
                   RunningNew@tens 0026                         _ADCON0bits 0093  
                       _ADCON1bits 0094                         _ADCON2bits 0095  
                       _ADCON3bits 0096                  ___wmul@multiplier 0070  
                        main@digit 004D                          main@value 004F  
                         _DenyShow 00A5                           NewShow@p 007B  
                     ?_RunningADCC 0020                           _LockShow 016B  
                         SetShow@p 007B                         _ADSTATbits 0097  
                         _OpenShow 0108                   __size_of_NewShow 0076  
                      ??_ScrollSet 007D                        ??_Scrollnew 007D  
                 __size_of_SetShow 0076            ??_OSCILLATOR_Initialize 0070  
                 __size_of___lwdiv 0034                   __size_of___lwmod 002C  
         __size_of_ADCC_Initialize 0016                    ___lwdiv@divisor 0074  
                  ___lwdiv@counter 007B                           __ptext10 01CE  
                         __ptext11 0E75                           __ptext20 0F66  
                         __ptext12 0E1C                           __ptext21 0108  
                         __ptext13 004F                           __ptext22 0FAA  
                         __ptext14 016B                           __ptext23 00A5  
                         __ptext15 0476                           __ptext24 0E4E  
                         __ptext16 02BA                           __ptext17 0ECE  
                         __ptext18 0EFA                           __ptext19 0E3E  
                    __size_of_main 010F               __CFG_WDTCWS$WDTCWS_7 0000  
                      ??_digitShow 0074         ??_ADCC_GetSingleConversion 0073  
                         main@num1 003A                           main@num2 003C  
                         main@num3 003E                           main@num4 0040  
                         main@tens 004E                     ScrollSet@count 0020  
                 ___lwmod@dividend 0076            ?_PIN_MANAGER_Initialize 0070  
                __CFG_CLKOUTEN$OFF 0000                   DisplayDeny@count 0079  
                  ___lwmod@divisor 0074                    ___lwmod@counter 0079  
   __end_of_PIN_MANAGER_Initialize 0ECE                  ??_ADCC_Initialize 0070  
             __size_of_RunningADCC 00AE                      ??_DisplayDeny 0078  
                    ??_DisplayLock 0078                      ??_DisplayOpen 0078  
                   Scrollnew@count 0020  
